!(function (t) {
  "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery);
})(function (S) {
  function t() {
    (this._curInst = null),
      (this._keyEvent = !1),
      (this._disabledInputs = []),
      (this._datepickerShowing = !1),
      (this._inDialog = !1),
      (this._mainDivId = "ui-datepicker-div"),
      (this._inlineClass = "ui-datepicker-inline"),
      (this._appendClass = "ui-datepicker-append"),
      (this._triggerClass = "ui-datepicker-trigger"),
      (this._dialogClass = "ui-datepicker-dialog"),
      (this._disableClass = "ui-datepicker-disabled"),
      (this._unselectableClass = "ui-datepicker-unselectable"),
      (this._currentClass = "ui-datepicker-current-day"),
      (this._dayOverClass = "ui-datepicker-days-cell-over"),
      (this.regional = []),
      (this.regional[""] = {
        closeText: "Done",
        prevText: "Prev",
        nextText: "Next",
        currentText: "Today",
        monthNames: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        monthNamesShort: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        dayNames: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        weekHeader: "Wk",
        dateFormat: "mm/dd/yy",
        firstDay: 0,
        isRTL: !1,
        showMonthAfterYear: !1,
        yearSuffix: "",
      }),
      (this._defaults = {
        showOn: "focus",
        showAnim: "fadeIn",
        showOptions: {},
        defaultDate: null,
        appendText: "",
        buttonText: "...",
        buttonImage: "",
        buttonImageOnly: !1,
        hideIfNoPrevNext: !1,
        navigationAsDateFormat: !1,
        gotoCurrent: !1,
        changeMonth: !1,
        changeYear: !1,
        yearRange: "c-10:c+10",
        showOtherMonths: !1,
        selectOtherMonths: !1,
        showWeek: !1,
        calculateWeek: this.iso8601Week,
        shortYearCutoff: "+10",
        minDate: null,
        maxDate: null,
        duration: "fast",
        beforeShowDay: null,
        beforeShow: null,
        onSelect: null,
        onChangeMonthYear: null,
        onClose: null,
        numberOfMonths: 1,
        showCurrentAtPos: 0,
        stepMonths: 1,
        stepBigMonths: 12,
        altField: "",
        altFormat: "",
        constrainInput: !0,
        showButtonPanel: !1,
        autoSize: !1,
        disabled: !1,
      }),
      S.extend(this._defaults, this.regional[""]),
      (this.regional.en = S.extend(!0, {}, this.regional[""])),
      (this.regional["en-US"] = S.extend(!0, {}, this.regional.en)),
      (this.dpDiv = i(
        S(
          "<div id='" +
            this._mainDivId +
            "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
        )
      ));
  }
  function i(t) {
    var e =
      "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    return t
      .on("mouseout", e, function () {
        S(this).removeClass("ui-state-hover"),
          -1 !== this.className.indexOf("ui-datepicker-prev") &&
            S(this).removeClass("ui-datepicker-prev-hover"),
          -1 !== this.className.indexOf("ui-datepicker-next") &&
            S(this).removeClass("ui-datepicker-next-hover");
      })
      .on("mouseover", e, o);
  }
  function o() {
    S.datepicker._isDisabledDatepicker(
      v.inline ? v.dpDiv.parent()[0] : v.input[0]
    ) ||
      (S(this)
        .parents(".ui-datepicker-calendar")
        .find("a")
        .removeClass("ui-state-hover"),
      S(this).addClass("ui-state-hover"),
      -1 !== this.className.indexOf("ui-datepicker-prev") &&
        S(this).addClass("ui-datepicker-prev-hover"),
      -1 !== this.className.indexOf("ui-datepicker-next") &&
        S(this).addClass("ui-datepicker-next-hover"));
  }
  function u(t, e) {
    for (var i in (S.extend(t, e), e)) null == e[i] && (t[i] = e[i]);
    return t;
  }
  function e(e) {
    return function () {
      var t = this.element.val();
      e.apply(this, arguments),
        this._refresh(),
        t !== this.element.val() && this._trigger("change");
    };
  }
  (S.ui = S.ui || {}), (S.ui.version = "1.12.1");
  var s,
    n,
    a = 0,
    r = Array.prototype.slice;
  (S.cleanData =
    ((n = S.cleanData),
    function (t) {
      var e, i, s;
      for (s = 0; null != (i = t[s]); s++)
        try {
          (e = S._data(i, "events")) &&
            e.remove &&
            S(i).triggerHandler("remove");
        } catch (t) {}
      n(t);
    })),
    (S.widget = function (t, i, e) {
      var s,
        n,
        o,
        a = {},
        r = t.split(".")[0],
        l = r + "-" + (t = t.split(".")[1]);
      return (
        e || ((e = i), (i = S.Widget)),
        S.isArray(e) && (e = S.extend.apply(null, [{}].concat(e))),
        (S.expr[":"][l.toLowerCase()] = function (t) {
          return !!S.data(t, l);
        }),
        (S[r] = S[r] || {}),
        (s = S[r][t]),
        (n = S[r][t] =
          function (t, e) {
            return this._createWidget
              ? void (arguments.length && this._createWidget(t, e))
              : new n(t, e);
          }),
        S.extend(n, s, {
          version: e.version,
          _proto: S.extend({}, e),
          _childConstructors: [],
        }),
        ((o = new i()).options = S.widget.extend({}, o.options)),
        S.each(e, function (e, o) {
          return S.isFunction(o)
            ? void (a[e] = (function () {
                function s() {
                  return i.prototype[e].apply(this, arguments);
                }
                function n(t) {
                  return i.prototype[e].apply(this, t);
                }
                return function () {
                  var t,
                    e = this._super,
                    i = this._superApply;
                  return (
                    (this._super = s),
                    (this._superApply = n),
                    (t = o.apply(this, arguments)),
                    (this._super = e),
                    (this._superApply = i),
                    t
                  );
                };
              })())
            : void (a[e] = o);
        }),
        (n.prototype = S.widget.extend(
          o,
          { widgetEventPrefix: (s && o.widgetEventPrefix) || t },
          a,
          { constructor: n, namespace: r, widgetName: t, widgetFullName: l }
        )),
        s
          ? (S.each(s._childConstructors, function (t, e) {
              var i = e.prototype;
              S.widget(i.namespace + "." + i.widgetName, n, e._proto);
            }),
            delete s._childConstructors)
          : i._childConstructors.push(n),
        S.widget.bridge(t, n),
        n
      );
    }),
    (S.widget.extend = function (t) {
      for (var e, i, s = r.call(arguments, 1), n = 0, o = s.length; n < o; n++)
        for (e in s[n])
          (i = s[n][e]),
            s[n].hasOwnProperty(e) &&
              void 0 !== i &&
              (t[e] = S.isPlainObject(i)
                ? S.isPlainObject(t[e])
                  ? S.widget.extend({}, t[e], i)
                  : S.widget.extend({}, i)
                : i);
      return t;
    }),
    (S.widget.bridge = function (o, e) {
      var a = e.prototype.widgetFullName || o;
      S.fn[o] = function (i) {
        var t = "string" == typeof i,
          s = r.call(arguments, 1),
          n = this;
        return (
          t
            ? this.length || "instance" !== i
              ? this.each(function () {
                  var t,
                    e = S.data(this, a);
                  return "instance" === i
                    ? ((n = e), !1)
                    : e
                    ? S.isFunction(e[i]) && "_" !== i.charAt(0)
                      ? (t = e[i].apply(e, s)) !== e && void 0 !== t
                        ? ((n = t && t.jquery ? n.pushStack(t.get()) : t), !1)
                        : void 0
                      : S.error(
                          "no such method '" +
                            i +
                            "' for " +
                            o +
                            " widget instance"
                        )
                    : S.error(
                        "cannot call methods on " +
                          o +
                          " prior to initialization; attempted to call method '" +
                          i +
                          "'"
                      );
                })
              : (n = void 0)
            : (s.length && (i = S.widget.extend.apply(null, [i].concat(s))),
              this.each(function () {
                var t = S.data(this, a);
                t
                  ? (t.option(i || {}), t._init && t._init())
                  : S.data(this, a, new e(i, this));
              })),
          n
        );
      };
    }),
    (S.Widget = function () {}),
    (S.Widget._childConstructors = []),
    (S.Widget.prototype = {
      widgetName: "widget",
      widgetEventPrefix: "",
      defaultElement: "<div>",
      options: { classes: {}, disabled: !1, create: null },
      _createWidget: function (t, e) {
        (e = S(e || this.defaultElement || this)[0]),
          (this.element = S(e)),
          (this.uuid = a++),
          (this.eventNamespace = "." + this.widgetName + this.uuid),
          (this.bindings = S()),
          (this.hoverable = S()),
          (this.focusable = S()),
          (this.classesElementLookup = {}),
          e !== this &&
            (S.data(e, this.widgetFullName, this),
            this._on(!0, this.element, {
              remove: function (t) {
                t.target === e && this.destroy();
              },
            }),
            (this.document = S(e.style ? e.ownerDocument : e.document || e)),
            (this.window = S(
              this.document[0].defaultView || this.document[0].parentWindow
            ))),
          (this.options = S.widget.extend(
            {},
            this.options,
            this._getCreateOptions(),
            t
          )),
          this._create(),
          this.options.disabled &&
            this._setOptionDisabled(this.options.disabled),
          this._trigger("create", null, this._getCreateEventData()),
          this._init();
      },
      _getCreateOptions: function () {
        return {};
      },
      _getCreateEventData: S.noop,
      _create: S.noop,
      _init: S.noop,
      destroy: function () {
        var i = this;
        this._destroy(),
          S.each(this.classesElementLookup, function (t, e) {
            i._removeClass(e, t);
          }),
          this.element.off(this.eventNamespace).removeData(this.widgetFullName),
          this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
          this.bindings.off(this.eventNamespace);
      },
      _destroy: S.noop,
      widget: function () {
        return this.element;
      },
      option: function (t, e) {
        var i,
          s,
          n,
          o = t;
        if (0 === arguments.length) return S.widget.extend({}, this.options);
        if ("string" == typeof t)
          if (((o = {}), (t = (i = t.split(".")).shift()), i.length)) {
            for (
              s = o[t] = S.widget.extend({}, this.options[t]), n = 0;
              i.length - 1 > n;
              n++
            )
              (s[i[n]] = s[i[n]] || {}), (s = s[i[n]]);
            if (((t = i.pop()), 1 === arguments.length))
              return void 0 === s[t] ? null : s[t];
            s[t] = e;
          } else {
            if (1 === arguments.length)
              return void 0 === this.options[t] ? null : this.options[t];
            o[t] = e;
          }
        return this._setOptions(o), this;
      },
      _setOptions: function (t) {
        var e;
        for (e in t) this._setOption(e, t[e]);
        return this;
      },
      _setOption: function (t, e) {
        return (
          "classes" === t && this._setOptionClasses(e),
          (this.options[t] = e),
          "disabled" === t && this._setOptionDisabled(e),
          this
        );
      },
      _setOptionClasses: function (t) {
        var e, i, s;
        for (e in t)
          (s = this.classesElementLookup[e]),
            t[e] !== this.options.classes[e] &&
              s &&
              s.length &&
              ((i = S(s.get())),
              this._removeClass(s, e),
              i.addClass(
                this._classes({ element: i, keys: e, classes: t, add: !0 })
              ));
      },
      _setOptionDisabled: function (t) {
        this._toggleClass(
          this.widget(),
          this.widgetFullName + "-disabled",
          null,
          !!t
        ),
          t &&
            (this._removeClass(this.hoverable, null, "ui-state-hover"),
            this._removeClass(this.focusable, null, "ui-state-focus"));
      },
      enable: function () {
        return this._setOptions({ disabled: !1 });
      },
      disable: function () {
        return this._setOptions({ disabled: !0 });
      },
      _classes: function (n) {
        function t(t, e) {
          var i, s;
          for (s = 0; t.length > s; s++)
            (i = a.classesElementLookup[t[s]] || S()),
              (i = n.add
                ? S(S.unique(i.get().concat(n.element.get())))
                : S(i.not(n.element).get())),
              (a.classesElementLookup[t[s]] = i),
              o.push(t[s]),
              e && n.classes[t[s]] && o.push(n.classes[t[s]]);
        }
        var o = [],
          a = this;
        return (
          (n = S.extend(
            { element: this.element, classes: this.options.classes || {} },
            n
          )),
          this._on(n.element, { remove: "_untrackClassesElement" }),
          n.keys && t(n.keys.match(/\S+/g) || [], !0),
          n.extra && t(n.extra.match(/\S+/g) || []),
          o.join(" ")
        );
      },
      _untrackClassesElement: function (i) {
        var s = this;
        S.each(s.classesElementLookup, function (t, e) {
          -1 !== S.inArray(i.target, e) &&
            (s.classesElementLookup[t] = S(e.not(i.target).get()));
        });
      },
      _removeClass: function (t, e, i) {
        return this._toggleClass(t, e, i, !1);
      },
      _addClass: function (t, e, i) {
        return this._toggleClass(t, e, i, !0);
      },
      _toggleClass: function (t, e, i, s) {
        s = "boolean" == typeof s ? s : i;
        var n = "string" == typeof t || null === t,
          o = {
            extra: n ? e : i,
            keys: n ? t : e,
            element: n ? this.element : t,
            add: s,
          };
        return o.element.toggleClass(this._classes(o), s), this;
      },
      _on: function (a, r, t) {
        var l,
          h = this;
        "boolean" != typeof a && ((t = r), (r = a), (a = !1)),
          t
            ? ((r = l = S(r)), (this.bindings = this.bindings.add(r)))
            : ((t = r), (r = this.element), (l = this.widget())),
          S.each(t, function (t, e) {
            function i() {
              return a ||
                (!0 !== h.options.disabled &&
                  !S(this).hasClass("ui-state-disabled"))
                ? ("string" == typeof e ? h[e] : e).apply(h, arguments)
                : void 0;
            }
            "string" != typeof e &&
              (i.guid = e.guid = e.guid || i.guid || S.guid++);
            var s = t.match(/^([\w:-]*)\s*(.*)$/),
              n = s[1] + h.eventNamespace,
              o = s[2];
            o ? l.on(n, o, i) : r.on(n, i);
          });
      },
      _off: function (t, e) {
        (e =
          (e || "").split(" ").join(this.eventNamespace + " ") +
          this.eventNamespace),
          t.off(e).off(e),
          (this.bindings = S(this.bindings.not(t).get())),
          (this.focusable = S(this.focusable.not(t).get())),
          (this.hoverable = S(this.hoverable.not(t).get()));
      },
      _delay: function (t, e) {
        var i = this;
        return setTimeout(function () {
          return ("string" == typeof t ? i[t] : t).apply(i, arguments);
        }, e || 0);
      },
      _hoverable: function (t) {
        (this.hoverable = this.hoverable.add(t)),
          this._on(t, {
            mouseenter: function (t) {
              this._addClass(S(t.currentTarget), null, "ui-state-hover");
            },
            mouseleave: function (t) {
              this._removeClass(S(t.currentTarget), null, "ui-state-hover");
            },
          });
      },
      _focusable: function (t) {
        (this.focusable = this.focusable.add(t)),
          this._on(t, {
            focusin: function (t) {
              this._addClass(S(t.currentTarget), null, "ui-state-focus");
            },
            focusout: function (t) {
              this._removeClass(S(t.currentTarget), null, "ui-state-focus");
            },
          });
      },
      _trigger: function (t, e, i) {
        var s,
          n,
          o = this.options[t];
        if (
          ((i = i || {}),
          ((e = S.Event(e)).type = (
            t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
          ).toLowerCase()),
          (e.target = this.element[0]),
          (n = e.originalEvent))
        )
          for (s in n) s in e || (e[s] = n[s]);
        return (
          this.element.trigger(e, i),
          !(
            (S.isFunction(o) &&
              !1 === o.apply(this.element[0], [e].concat(i))) ||
            e.isDefaultPrevented()
          )
        );
      },
    }),
    S.each({ show: "fadeIn", hide: "fadeOut" }, function (o, a) {
      S.Widget.prototype["_" + o] = function (e, t, i) {
        "string" == typeof t && (t = { effect: t });
        var s,
          n = t ? (!0 === t || "number" == typeof t ? a : t.effect || a) : o;
        "number" == typeof (t = t || {}) && (t = { duration: t }),
          (s = !S.isEmptyObject(t)),
          (t.complete = i),
          t.delay && e.delay(t.delay),
          s && S.effects && S.effects.effect[n]
            ? e[o](t)
            : n !== o && e[n]
            ? e[n](t.duration, t.easing, i)
            : e.queue(function (t) {
                S(this)[o](), i && i.call(e[0]), t();
              });
      };
    }),
    S.widget,
    (function () {
      function x(t, e, i) {
        return [
          parseFloat(t[0]) * (l.test(t[0]) ? e / 100 : 1),
          parseFloat(t[1]) * (l.test(t[1]) ? i / 100 : 1),
        ];
      }
      function k(t, e) {
        return parseInt(S.css(t, e), 10) || 0;
      }
      var n,
        C = Math.max,
        D = Math.abs,
        s = /left|center|right/,
        o = /top|center|bottom/,
        a = /[\+\-]\d+(\.[\d]+)?%?/,
        r = /^\w+/,
        l = /%$/,
        h = S.fn.position;
      (S.position = {
        scrollbarWidth: function () {
          if (void 0 !== n) return n;
          var t,
            e,
            i = S(
              "<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"
            ),
            s = i.children()[0];
          return (
            S("body").append(i),
            (t = s.offsetWidth),
            i.css("overflow", "scroll"),
            t === (e = s.offsetWidth) && (e = i[0].clientWidth),
            i.remove(),
            (n = t - e)
          );
        },
        getScrollInfo: function (t) {
          var e = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
            i = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"),
            s =
              "scroll" === e ||
              ("auto" === e && t.width < t.element[0].scrollWidth);
          return {
            width:
              "scroll" === i ||
              ("auto" === i && t.height < t.element[0].scrollHeight)
                ? S.position.scrollbarWidth()
                : 0,
            height: s ? S.position.scrollbarWidth() : 0,
          };
        },
        getWithinInfo: function (t) {
          var e = S(t || window),
            i = S.isWindow(e[0]),
            s = !!e[0] && 9 === e[0].nodeType;
          return {
            element: e,
            isWindow: i,
            isDocument: s,
            offset: !i && !s ? S(t).offset() : { left: 0, top: 0 },
            scrollLeft: e.scrollLeft(),
            scrollTop: e.scrollTop(),
            width: e.outerWidth(),
            height: e.outerHeight(),
          };
        },
      }),
        (S.fn.position = function (u) {
          if (!u || !u.of) return h.apply(this, arguments);
          u = S.extend({}, u);
          var d,
            p,
            f,
            g,
            m,
            t,
            e,
            i,
            v = S(u.of),
            _ = S.position.getWithinInfo(u.within),
            b = S.position.getScrollInfo(_),
            y = (u.collision || "flip").split(" "),
            w = {};
          return (
            (t =
              9 === (i = (e = v)[0]).nodeType
                ? {
                    width: e.width(),
                    height: e.height(),
                    offset: { top: 0, left: 0 },
                  }
                : S.isWindow(i)
                ? {
                    width: e.width(),
                    height: e.height(),
                    offset: { top: e.scrollTop(), left: e.scrollLeft() },
                  }
                : i.preventDefault
                ? {
                    width: 0,
                    height: 0,
                    offset: { top: i.pageY, left: i.pageX },
                  }
                : {
                    width: e.outerWidth(),
                    height: e.outerHeight(),
                    offset: e.offset(),
                  }),
            v[0].preventDefault && (u.at = "left top"),
            (p = t.width),
            (f = t.height),
            (g = t.offset),
            (m = S.extend({}, g)),
            S.each(["my", "at"], function () {
              var t,
                e,
                i = (u[this] || "").split(" ");
              1 === i.length &&
                (i = s.test(i[0])
                  ? i.concat(["center"])
                  : o.test(i[0])
                  ? ["center"].concat(i)
                  : ["center", "center"]),
                (i[0] = s.test(i[0]) ? i[0] : "center"),
                (i[1] = o.test(i[1]) ? i[1] : "center"),
                (t = a.exec(i[0])),
                (e = a.exec(i[1])),
                (w[this] = [t ? t[0] : 0, e ? e[0] : 0]),
                (u[this] = [r.exec(i[0])[0], r.exec(i[1])[0]]);
            }),
            1 === y.length && (y[1] = y[0]),
            "right" === u.at[0]
              ? (m.left += p)
              : "center" === u.at[0] && (m.left += p / 2),
            "bottom" === u.at[1]
              ? (m.top += f)
              : "center" === u.at[1] && (m.top += f / 2),
            (d = x(w.at, p, f)),
            (m.left += d[0]),
            (m.top += d[1]),
            this.each(function () {
              var i,
                t,
                a = S(this),
                r = a.outerWidth(),
                l = a.outerHeight(),
                e = k(this, "marginLeft"),
                s = k(this, "marginTop"),
                n = r + e + k(this, "marginRight") + b.width,
                o = l + s + k(this, "marginBottom") + b.height,
                h = S.extend({}, m),
                c = x(w.my, a.outerWidth(), a.outerHeight());
              "right" === u.my[0]
                ? (h.left -= r)
                : "center" === u.my[0] && (h.left -= r / 2),
                "bottom" === u.my[1]
                  ? (h.top -= l)
                  : "center" === u.my[1] && (h.top -= l / 2),
                (h.left += c[0]),
                (h.top += c[1]),
                (i = { marginLeft: e, marginTop: s }),
                S.each(["left", "top"], function (t, e) {
                  S.ui.position[y[t]] &&
                    S.ui.position[y[t]][e](h, {
                      targetWidth: p,
                      targetHeight: f,
                      elemWidth: r,
                      elemHeight: l,
                      collisionPosition: i,
                      collisionWidth: n,
                      collisionHeight: o,
                      offset: [d[0] + c[0], d[1] + c[1]],
                      my: u.my,
                      at: u.at,
                      within: _,
                      elem: a,
                    });
                }),
                u.using &&
                  (t = function (t) {
                    var e = g.left - h.left,
                      i = e + p - r,
                      s = g.top - h.top,
                      n = s + f - l,
                      o = {
                        target: {
                          element: v,
                          left: g.left,
                          top: g.top,
                          width: p,
                          height: f,
                        },
                        element: {
                          element: a,
                          left: h.left,
                          top: h.top,
                          width: r,
                          height: l,
                        },
                        horizontal: i < 0 ? "left" : 0 < e ? "right" : "center",
                        vertical: n < 0 ? "top" : 0 < s ? "bottom" : "middle",
                      };
                    p < r && p > D(e + i) && (o.horizontal = "center"),
                      f < l && f > D(s + n) && (o.vertical = "middle"),
                      (o.important =
                        C(D(e), D(i)) > C(D(s), D(n))
                          ? "horizontal"
                          : "vertical"),
                      u.using.call(this, t, o);
                  }),
                a.offset(S.extend(h, { using: t }));
            })
          );
        }),
        (S.ui.position = {
          fit: {
            left: function (t, e) {
              var i,
                s = e.within,
                n = s.isWindow ? s.scrollLeft : s.offset.left,
                o = s.width,
                a = t.left - e.collisionPosition.marginLeft,
                r = n - a,
                l = a + e.collisionWidth - o - n;
              e.collisionWidth > o
                ? 0 < r && l <= 0
                  ? ((i = t.left + r + e.collisionWidth - o - n),
                    (t.left += r - i))
                  : (t.left =
                      0 < l && r <= 0
                        ? n
                        : l < r
                        ? n + o - e.collisionWidth
                        : n)
                : 0 < r
                ? (t.left += r)
                : 0 < l
                ? (t.left -= l)
                : (t.left = C(t.left - a, t.left));
            },
            top: function (t, e) {
              var i,
                s = e.within,
                n = s.isWindow ? s.scrollTop : s.offset.top,
                o = e.within.height,
                a = t.top - e.collisionPosition.marginTop,
                r = n - a,
                l = a + e.collisionHeight - o - n;
              e.collisionHeight > o
                ? 0 < r && l <= 0
                  ? ((i = t.top + r + e.collisionHeight - o - n),
                    (t.top += r - i))
                  : (t.top =
                      0 < l && r <= 0
                        ? n
                        : l < r
                        ? n + o - e.collisionHeight
                        : n)
                : 0 < r
                ? (t.top += r)
                : 0 < l
                ? (t.top -= l)
                : (t.top = C(t.top - a, t.top));
            },
          },
          flip: {
            left: function (t, e) {
              var i,
                s,
                n = e.within,
                o = n.offset.left + n.scrollLeft,
                a = n.width,
                r = n.isWindow ? n.scrollLeft : n.offset.left,
                l = t.left - e.collisionPosition.marginLeft,
                h = l - r,
                c = l + e.collisionWidth - a - r,
                u =
                  "left" === e.my[0]
                    ? -e.elemWidth
                    : "right" === e.my[0]
                    ? e.elemWidth
                    : 0,
                d =
                  "left" === e.at[0]
                    ? e.targetWidth
                    : "right" === e.at[0]
                    ? -e.targetWidth
                    : 0,
                p = -2 * e.offset[0];
              h < 0
                ? ((i = t.left + u + d + p + e.collisionWidth - a - o) < 0 ||
                    D(h) > i) &&
                  (t.left += u + d + p)
                : 0 < c &&
                  (0 <
                    (s =
                      t.left -
                      e.collisionPosition.marginLeft +
                      u +
                      d +
                      p -
                      r) ||
                    c > D(s)) &&
                  (t.left += u + d + p);
            },
            top: function (t, e) {
              var i,
                s,
                n = e.within,
                o = n.offset.top + n.scrollTop,
                a = n.height,
                r = n.isWindow ? n.scrollTop : n.offset.top,
                l = t.top - e.collisionPosition.marginTop,
                h = l - r,
                c = l + e.collisionHeight - a - r,
                u =
                  "top" === e.my[1]
                    ? -e.elemHeight
                    : "bottom" === e.my[1]
                    ? e.elemHeight
                    : 0,
                d =
                  "top" === e.at[1]
                    ? e.targetHeight
                    : "bottom" === e.at[1]
                    ? -e.targetHeight
                    : 0,
                p = -2 * e.offset[1];
              h < 0
                ? ((s = t.top + u + d + p + e.collisionHeight - a - o) < 0 ||
                    D(h) > s) &&
                  (t.top += u + d + p)
                : 0 < c &&
                  (0 <
                    (i =
                      t.top - e.collisionPosition.marginTop + u + d + p - r) ||
                    c > D(i)) &&
                  (t.top += u + d + p);
            },
          },
          flipfit: {
            left: function () {
              S.ui.position.flip.left.apply(this, arguments),
                S.ui.position.fit.left.apply(this, arguments);
            },
            top: function () {
              S.ui.position.flip.top.apply(this, arguments),
                S.ui.position.fit.top.apply(this, arguments);
            },
          },
        });
    })(),
    S.ui.position,
    S.extend(S.expr[":"], {
      data: S.expr.createPseudo
        ? S.expr.createPseudo(function (e) {
            return function (t) {
              return !!S.data(t, e);
            };
          })
        : function (t, e, i) {
            return !!S.data(t, i[3]);
          },
    }),
    S.fn.extend({
      disableSelection:
        ((s =
          "onselectstart" in document.createElement("div")
            ? "selectstart"
            : "mousedown"),
        function () {
          return this.on(s + ".ui-disableSelection", function (t) {
            t.preventDefault();
          });
        }),
      enableSelection: function () {
        return this.off(".ui-disableSelection");
      },
    });
  var l,
    h = "ui-effects-",
    d = "ui-effects-style",
    p = "ui-effects-animated",
    c = S;
  (S.effects = { effect: {} }),
    (function (c, u) {
      function d(t, e, i) {
        var s = m[e.type] || {};
        return null == t
          ? i || !e.def
            ? null
            : e.def
          : ((t = s.floor ? ~~t : parseFloat(t)),
            isNaN(t)
              ? e.def
              : s.mod
              ? (t + s.mod) % s.mod
              : t < 0
              ? 0
              : t > s.max
              ? s.max
              : t);
      }
      function r(a) {
        var r = f(),
          l = (r._rgba = []);
        return (
          (a = a.toLowerCase()),
          v(t, function (t, e) {
            var i,
              s = e.re.exec(a),
              n = s && e.parse(s),
              o = e.space || "rgba";
            return n
              ? ((i = r[o](n)),
                (r[g[o].cache] = i[g[o].cache]),
                (l = r._rgba = i._rgba),
                !1)
              : u;
          }),
          l.length
            ? ("0,0,0,0" === l.join() && c.extend(l, h.transparent), r)
            : h[a]
        );
      }
      function l(t, e, i) {
        return 6 * (i = (i + 1) % 1) < 1
          ? t + 6 * (e - t) * i
          : 2 * i < 1
          ? e
          : 3 * i < 2
          ? t + 6 * (e - t) * (2 / 3 - i)
          : t;
      }
      var h,
        p = /^([\-+])=\s*(\d+\.?\d*)/,
        t = [
          {
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (t) {
              return [t[1], t[2], t[3], t[4]];
            },
          },
          {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (t) {
              return [2.55 * t[1], 2.55 * t[2], 2.55 * t[3], t[4]];
            },
          },
          {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function (t) {
              return [
                parseInt(t[1], 16),
                parseInt(t[2], 16),
                parseInt(t[3], 16),
              ];
            },
          },
          {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function (t) {
              return [
                parseInt(t[1] + t[1], 16),
                parseInt(t[2] + t[2], 16),
                parseInt(t[3] + t[3], 16),
              ];
            },
          },
          {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function (t) {
              return [t[1], t[2] / 100, t[3] / 100, t[4]];
            },
          },
        ],
        f = (c.Color = function (t, e, i, s) {
          return new c.Color.fn.parse(t, e, i, s);
        }),
        g = {
          rgba: {
            props: {
              red: { idx: 0, type: "byte" },
              green: { idx: 1, type: "byte" },
              blue: { idx: 2, type: "byte" },
            },
          },
          hsla: {
            props: {
              hue: { idx: 0, type: "degrees" },
              saturation: { idx: 1, type: "percent" },
              lightness: { idx: 2, type: "percent" },
            },
          },
        },
        m = {
          byte: { floor: !0, max: 255 },
          percent: { max: 1 },
          degrees: { mod: 360, floor: !0 },
        },
        a = (f.support = {}),
        e = c("<p>")[0],
        v = c.each;
      (e.style.cssText = "background-color:rgba(1,1,1,.5)"),
        (a.rgba = -1 < e.style.backgroundColor.indexOf("rgba")),
        v(g, function (t, e) {
          (e.cache = "_" + t),
            (e.props.alpha = { idx: 3, type: "percent", def: 1 });
        }),
        (f.fn = c.extend(f.prototype, {
          parse: function (n, t, e, i) {
            if (n === u) return (this._rgba = [null, null, null, null]), this;
            (n.jquery || n.nodeType) && ((n = c(n).css(t)), (t = u));
            var o = this,
              s = c.type(n),
              a = (this._rgba = []);
            return (
              t !== u && ((n = [n, t, e, i]), (s = "array")),
              "string" === s
                ? this.parse(r(n) || h._default)
                : "array" === s
                ? (v(g.rgba.props, function (t, e) {
                    a[e.idx] = d(n[e.idx], e);
                  }),
                  this)
                : "object" === s
                ? (v(
                    g,
                    n instanceof f
                      ? function (t, e) {
                          n[e.cache] && (o[e.cache] = n[e.cache].slice());
                        }
                      : function (t, i) {
                          var s = i.cache;
                          v(i.props, function (t, e) {
                            if (!o[s] && i.to) {
                              if ("alpha" === t || null == n[t]) return;
                              o[s] = i.to(o._rgba);
                            }
                            o[s][e.idx] = d(n[t], e, !0);
                          }),
                            o[s] &&
                              c.inArray(null, o[s].slice(0, 3)) < 0 &&
                              ((o[s][3] = 1),
                              i.from && (o._rgba = i.from(o[s])));
                        }
                  ),
                  this)
                : u
            );
          },
          is: function (t) {
            var n = f(t),
              o = !0,
              a = this;
            return (
              v(g, function (t, e) {
                var i,
                  s = n[e.cache];
                return (
                  s &&
                    ((i = a[e.cache] || (e.to && e.to(a._rgba)) || []),
                    v(e.props, function (t, e) {
                      return null != s[e.idx] ? (o = s[e.idx] === i[e.idx]) : u;
                    })),
                  o
                );
              }),
              o
            );
          },
          _space: function () {
            var i = [],
              s = this;
            return (
              v(g, function (t, e) {
                s[e.cache] && i.push(t);
              }),
              i.pop()
            );
          },
          transition: function (t, a) {
            var r = f(t),
              e = r._space(),
              i = g[e],
              s = 0 === this.alpha() ? f("transparent") : this,
              l = s[i.cache] || i.to(s._rgba),
              h = l.slice();
            return (
              (r = r[i.cache]),
              v(i.props, function (t, e) {
                var i = e.idx,
                  s = l[i],
                  n = r[i],
                  o = m[e.type] || {};
                null !== n &&
                  (null === s
                    ? (h[i] = n)
                    : (o.mod &&
                        (n - s > o.mod / 2
                          ? (s += o.mod)
                          : s - n > o.mod / 2 && (s -= o.mod)),
                      (h[i] = d((n - s) * a + s, e))));
              }),
              this[e](h)
            );
          },
          blend: function (t) {
            if (1 === this._rgba[3]) return this;
            var e = this._rgba.slice(),
              i = e.pop(),
              s = f(t)._rgba;
            return f(
              c.map(e, function (t, e) {
                return (1 - i) * s[e] + i * t;
              })
            );
          },
          toRgbaString: function () {
            var t = "rgba(",
              e = c.map(this._rgba, function (t, e) {
                return null == t ? (2 < e ? 1 : 0) : t;
              });
            return 1 === e[3] && (e.pop(), (t = "rgb(")), t + e.join() + ")";
          },
          toHslaString: function () {
            var t = "hsla(",
              e = c.map(this.hsla(), function (t, e) {
                return (
                  null == t && (t = 2 < e ? 1 : 0),
                  e && e < 3 && (t = Math.round(100 * t) + "%"),
                  t
                );
              });
            return 1 === e[3] && (e.pop(), (t = "hsl(")), t + e.join() + ")";
          },
          toHexString: function (t) {
            var e = this._rgba.slice(),
              i = e.pop();
            return (
              t && e.push(~~(255 * i)),
              "#" +
                c
                  .map(e, function (t) {
                    return 1 === (t = (t || 0).toString(16)).length
                      ? "0" + t
                      : t;
                  })
                  .join("")
            );
          },
          toString: function () {
            return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
          },
        })),
        (f.fn.parse.prototype = f.fn),
        (g.hsla.to = function (t) {
          if (null == t[0] || null == t[1] || null == t[2])
            return [null, null, null, t[3]];
          var e,
            i,
            s = t[0] / 255,
            n = t[1] / 255,
            o = t[2] / 255,
            a = t[3],
            r = Math.max(s, n, o),
            l = Math.min(s, n, o),
            h = r - l,
            c = r + l,
            u = 0.5 * c;
          return (
            (e =
              l === r
                ? 0
                : s === r
                ? (60 * (n - o)) / h + 360
                : n === r
                ? (60 * (o - s)) / h + 120
                : (60 * (s - n)) / h + 240),
            (i = 0 === h ? 0 : u <= 0.5 ? h / c : h / (2 - c)),
            [Math.round(e) % 360, i, u, null == a ? 1 : a]
          );
        }),
        (g.hsla.from = function (t) {
          if (null == t[0] || null == t[1] || null == t[2])
            return [null, null, null, t[3]];
          var e = t[0] / 360,
            i = t[1],
            s = t[2],
            n = t[3],
            o = s <= 0.5 ? s * (1 + i) : s + i - s * i,
            a = 2 * s - o;
          return [
            Math.round(255 * l(a, o, e + 1 / 3)),
            Math.round(255 * l(a, o, e)),
            Math.round(255 * l(a, o, e - 1 / 3)),
            n,
          ];
        }),
        v(g, function (l, t) {
          var i = t.props,
            a = t.cache,
            r = t.to,
            h = t.from;
          (f.fn[l] = function (t) {
            if ((r && !this[a] && (this[a] = r(this._rgba)), t === u))
              return this[a].slice();
            var e,
              s = c.type(t),
              n = "array" === s || "object" === s ? t : arguments,
              o = this[a].slice();
            return (
              v(i, function (t, e) {
                var i = n["object" === s ? t : e.idx];
                null == i && (i = o[e.idx]), (o[e.idx] = d(i, e));
              }),
              h ? (((e = f(h(o)))[a] = o), e) : f(o)
            );
          }),
            v(i, function (a, r) {
              f.fn[a] ||
                (f.fn[a] = function (t) {
                  var e,
                    i = c.type(t),
                    s = "alpha" === a ? (this._hsla ? "hsla" : "rgba") : l,
                    n = this[s](),
                    o = n[r.idx];
                  return "undefined" === i
                    ? o
                    : ("function" === i &&
                        ((t = t.call(this, o)), (i = c.type(t))),
                      null == t && r.empty
                        ? this
                        : ("string" === i &&
                            (e = p.exec(t)) &&
                            (t =
                              o + parseFloat(e[2]) * ("+" === e[1] ? 1 : -1)),
                          (n[r.idx] = t),
                          this[s](n)));
                });
            });
        }),
        (f.hook = function (t) {
          var e = t.split(" ");
          v(e, function (t, o) {
            (c.cssHooks[o] = {
              set: function (t, e) {
                var i,
                  s,
                  n = "";
                if (
                  "transparent" !== e &&
                  ("string" !== c.type(e) || (i = r(e)))
                ) {
                  if (((e = f(i || e)), !a.rgba && 1 !== e._rgba[3])) {
                    for (
                      s = "backgroundColor" === o ? t.parentNode : t;
                      ("" === n || "transparent" === n) && s && s.style;

                    )
                      try {
                        (n = c.css(s, "backgroundColor")), (s = s.parentNode);
                      } catch (t) {}
                    e = e.blend(n && "transparent" !== n ? n : "_default");
                  }
                  e = e.toRgbaString();
                }
                try {
                  t.style[o] = e;
                } catch (t) {}
              },
            }),
              (c.fx.step[o] = function (t) {
                t.colorInit ||
                  ((t.start = f(t.elem, o)),
                  (t.end = f(t.end)),
                  (t.colorInit = !0)),
                  c.cssHooks[o].set(t.elem, t.start.transition(t.end, t.pos));
              });
          });
        }),
        f.hook(
          "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"
        ),
        (c.cssHooks.borderColor = {
          expand: function (i) {
            var s = {};
            return (
              v(["Top", "Right", "Bottom", "Left"], function (t, e) {
                s["border" + e + "Color"] = i;
              }),
              s
            );
          },
        }),
        (h = c.Color.names =
          {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff",
          });
    })(c),
    (function () {
      function a(t) {
        var e,
          i,
          s = t.ownerDocument.defaultView
            ? t.ownerDocument.defaultView.getComputedStyle(t, null)
            : t.currentStyle,
          n = {};
        if (s && s.length && s[0] && s[s[0]])
          for (i = s.length; i--; )
            "string" == typeof s[(e = s[i])] && (n[S.camelCase(e)] = s[e]);
        else for (e in s) "string" == typeof s[e] && (n[e] = s[e]);
        return n;
      }
      var o,
        n,
        r,
        l = ["add", "remove", "toggle"],
        h = {
          border: 1,
          borderBottom: 1,
          borderColor: 1,
          borderLeft: 1,
          borderRight: 1,
          borderTop: 1,
          borderWidth: 1,
          margin: 1,
          padding: 1,
        };
      S.each(
        [
          "borderLeftStyle",
          "borderRightStyle",
          "borderBottomStyle",
          "borderTopStyle",
        ],
        function (t, e) {
          S.fx.step[e] = function (t) {
            (("none" !== t.end && !t.setAttr) || (1 === t.pos && !t.setAttr)) &&
              (c.style(t.elem, e, t.end), (t.setAttr = !0));
          };
        }
      ),
        S.fn.addBack ||
          (S.fn.addBack = function (t) {
            return this.add(
              null == t ? this.prevObject : this.prevObject.filter(t)
            );
          }),
        (S.effects.animateClass = function (n, t, e, i) {
          var o = S.speed(t, e, i);
          return this.queue(function () {
            var t,
              i = S(this),
              e = i.attr("class") || "",
              s = o.children ? i.find("*").addBack() : i;
            (s = s.map(function () {
              return { el: S(this), start: a(this) };
            })),
              (t = function () {
                S.each(l, function (t, e) {
                  n[e] && i[e + "Class"](n[e]);
                });
              })(),
              (s = s.map(function () {
                return (
                  (this.end = a(this.el[0])),
                  (this.diff = (function (t, e) {
                    var i,
                      s,
                      n = {};
                    for (i in e)
                      (s = e[i]),
                        t[i] !== s &&
                          (h[i] ||
                            ((S.fx.step[i] || !isNaN(parseFloat(s))) &&
                              (n[i] = s)));
                    return n;
                  })(this.start, this.end)),
                  this
                );
              })),
              i.attr("class", e),
              (s = s.map(function () {
                var t = this,
                  e = S.Deferred(),
                  i = S.extend({}, o, {
                    queue: !1,
                    complete: function () {
                      e.resolve(t);
                    },
                  });
                return this.el.animate(this.diff, i), e.promise();
              })),
              S.when.apply(S, s.get()).done(function () {
                t(),
                  S.each(arguments, function () {
                    var e = this.el;
                    S.each(this.diff, function (t) {
                      e.css(t, "");
                    });
                  }),
                  o.complete.call(i[0]);
              });
          });
        }),
        S.fn.extend({
          addClass:
            ((r = S.fn.addClass),
            function (t, e, i, s) {
              return e
                ? S.effects.animateClass.call(this, { add: t }, e, i, s)
                : r.apply(this, arguments);
            }),
          removeClass:
            ((n = S.fn.removeClass),
            function (t, e, i, s) {
              return 1 < arguments.length
                ? S.effects.animateClass.call(this, { remove: t }, e, i, s)
                : n.apply(this, arguments);
            }),
          toggleClass:
            ((o = S.fn.toggleClass),
            function (t, e, i, s, n) {
              return "boolean" == typeof e || void 0 === e
                ? i
                  ? S.effects.animateClass.call(
                      this,
                      e ? { add: t } : { remove: t },
                      i,
                      s,
                      n
                    )
                  : o.apply(this, arguments)
                : S.effects.animateClass.call(this, { toggle: t }, e, i, s);
            }),
          switchClass: function (t, e, i, s, n) {
            return S.effects.animateClass.call(
              this,
              { add: e, remove: t },
              i,
              s,
              n
            );
          },
        });
    })(),
    (function () {
      function c(t, e, i, s) {
        return (
          S.isPlainObject(t) && (t = (e = t).effect),
          (t = { effect: t }),
          null == e && (e = {}),
          S.isFunction(e) && ((s = e), (i = null), (e = {})),
          ("number" == typeof e || S.fx.speeds[e]) &&
            ((s = i), (i = e), (e = {})),
          S.isFunction(i) && ((s = i), (i = null)),
          e && S.extend(t, e),
          (i = i || e.duration),
          (t.duration = S.fx.off
            ? 0
            : "number" == typeof i
            ? i
            : i in S.fx.speeds
            ? S.fx.speeds[i]
            : S.fx.speeds._default),
          (t.complete = s || e.complete),
          t
        );
      }
      function i(t) {
        return (
          !(t && "number" != typeof t && !S.fx.speeds[t]) ||
          ("string" == typeof t && !S.effects.effect[t]) ||
          !!S.isFunction(t) ||
          ("object" == typeof t && !t.effect)
        );
      }
      function e(t, e) {
        var i = e.outerWidth(),
          s = e.outerHeight(),
          n =
            /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(
              t
            ) || ["", 0, i, s, 0];
        return {
          top: parseFloat(n[1]) || 0,
          right: "auto" === n[2] ? i : parseFloat(n[2]),
          bottom: "auto" === n[3] ? s : parseFloat(n[3]),
          left: parseFloat(n[4]) || 0,
        };
      }
      var s, n, o, a;
      S.expr &&
        S.expr.filters &&
        S.expr.filters.animated &&
        (S.expr.filters.animated =
          ((a = S.expr.filters.animated),
          function (t) {
            return !!S(t).data(p) || a(t);
          })),
        !1 !== S.uiBackCompat &&
          S.extend(S.effects, {
            save: function (t, e) {
              for (var i = 0, s = e.length; i < s; i++)
                null !== e[i] && t.data(h + e[i], t[0].style[e[i]]);
            },
            restore: function (t, e) {
              for (var i, s = 0, n = e.length; s < n; s++)
                null !== e[s] && ((i = t.data(h + e[s])), t.css(e[s], i));
            },
            setMode: function (t, e) {
              return (
                "toggle" === e && (e = t.is(":hidden") ? "show" : "hide"), e
              );
            },
            createWrapper: function (i) {
              if (i.parent().is(".ui-effects-wrapper")) return i.parent();
              var s = {
                  width: i.outerWidth(!0),
                  height: i.outerHeight(!0),
                  float: i.css("float"),
                },
                t = S("<div></div>").addClass("ui-effects-wrapper").css({
                  fontSize: "100%",
                  background: "transparent",
                  border: "none",
                  margin: 0,
                  padding: 0,
                }),
                e = { width: i.width(), height: i.height() },
                n = document.activeElement;
              try {
                n.id;
              } catch (t) {
                n = document.body;
              }
              return (
                i.wrap(t),
                (i[0] === n || S.contains(i[0], n)) && S(n).trigger("focus"),
                (t = i.parent()),
                "static" === i.css("position")
                  ? (t.css({ position: "relative" }),
                    i.css({ position: "relative" }))
                  : (S.extend(s, {
                      position: i.css("position"),
                      zIndex: i.css("z-index"),
                    }),
                    S.each(["top", "left", "bottom", "right"], function (t, e) {
                      (s[e] = i.css(e)),
                        isNaN(parseInt(s[e], 10)) && (s[e] = "auto");
                    }),
                    i.css({
                      position: "relative",
                      top: 0,
                      left: 0,
                      right: "auto",
                      bottom: "auto",
                    })),
                i.css(e),
                t.css(s).show()
              );
            },
            removeWrapper: function (t) {
              var e = document.activeElement;
              return (
                t.parent().is(".ui-effects-wrapper") &&
                  (t.parent().replaceWith(t),
                  (t[0] === e || S.contains(t[0], e)) && S(e).trigger("focus")),
                t
              );
            },
          }),
        S.extend(S.effects, {
          version: "1.12.1",
          define: function (t, e, i) {
            return (
              i || ((i = e), (e = "effect")),
              (S.effects.effect[t] = i),
              (S.effects.effect[t].mode = e),
              i
            );
          },
          scaledDimensions: function (t, e, i) {
            if (0 === e)
              return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
            var s = "horizontal" !== i ? (e || 100) / 100 : 1,
              n = "vertical" !== i ? (e || 100) / 100 : 1;
            return {
              height: t.height() * n,
              width: t.width() * s,
              outerHeight: t.outerHeight() * n,
              outerWidth: t.outerWidth() * s,
            };
          },
          clipToBox: function (t) {
            return {
              width: t.clip.right - t.clip.left,
              height: t.clip.bottom - t.clip.top,
              left: t.clip.left,
              top: t.clip.top,
            };
          },
          unshift: function (t, e, i) {
            var s = t.queue();
            1 < e && s.splice.apply(s, [1, 0].concat(s.splice(e, i))),
              t.dequeue();
          },
          saveStyle: function (t) {
            t.data(d, t[0].style.cssText);
          },
          restoreStyle: function (t) {
            (t[0].style.cssText = t.data(d) || ""), t.removeData(d);
          },
          mode: function (t, e) {
            var i = t.is(":hidden");
            return (
              "toggle" === e && (e = i ? "show" : "hide"),
              (i ? "hide" === e : "show" === e) && (e = "none"),
              e
            );
          },
          getBaseline: function (t, e) {
            var i, s;
            switch (t[0]) {
              case "top":
                i = 0;
                break;
              case "middle":
                i = 0.5;
                break;
              case "bottom":
                i = 1;
                break;
              default:
                i = t[0] / e.height;
            }
            switch (t[1]) {
              case "left":
                s = 0;
                break;
              case "center":
                s = 0.5;
                break;
              case "right":
                s = 1;
                break;
              default:
                s = t[1] / e.width;
            }
            return { x: s, y: i };
          },
          createPlaceholder: function (t) {
            var e,
              i = t.css("position"),
              s = t.position();
            return (
              t
                .css({
                  marginTop: t.css("marginTop"),
                  marginBottom: t.css("marginBottom"),
                  marginLeft: t.css("marginLeft"),
                  marginRight: t.css("marginRight"),
                })
                .outerWidth(t.outerWidth())
                .outerHeight(t.outerHeight()),
              /^(static|relative)/.test(i) &&
                ((i = "absolute"),
                (e = S("<" + t[0].nodeName + ">")
                  .insertAfter(t)
                  .css({
                    display: /^(inline|ruby)/.test(t.css("display"))
                      ? "inline-block"
                      : "block",
                    visibility: "hidden",
                    marginTop: t.css("marginTop"),
                    marginBottom: t.css("marginBottom"),
                    marginLeft: t.css("marginLeft"),
                    marginRight: t.css("marginRight"),
                    float: t.css("float"),
                  })
                  .outerWidth(t.outerWidth())
                  .outerHeight(t.outerHeight())
                  .addClass("ui-effects-placeholder")),
                t.data(h + "placeholder", e)),
              t.css({ position: i, left: s.left, top: s.top }),
              e
            );
          },
          removePlaceholder: function (t) {
            var e = h + "placeholder",
              i = t.data(e);
            i && (i.remove(), t.removeData(e));
          },
          cleanUp: function (t) {
            S.effects.restoreStyle(t), S.effects.removePlaceholder(t);
          },
          setTransition: function (s, t, n, o) {
            return (
              (o = o || {}),
              S.each(t, function (t, e) {
                var i = s.cssUnit(e);
                0 < i[0] && (o[e] = i[0] * n + i[1]);
              }),
              o
            );
          },
        }),
        S.fn.extend({
          effect: function () {
            function t(t) {
              function e() {
                S.isFunction(a) && a.call(i[0]), S.isFunction(t) && t();
              }
              var i = S(this);
              (s.mode = l.shift()),
                !1 === S.uiBackCompat || o
                  ? "none" === s.mode
                    ? (i[r](), e())
                    : n.call(i[0], s, function () {
                        i.removeData(p),
                          S.effects.cleanUp(i),
                          "hide" === s.mode && i.hide(),
                          e();
                      })
                  : (i.is(":hidden") ? "hide" === r : "show" === r)
                  ? (i[r](), e())
                  : n.call(i[0], s, e);
            }
            var s = c.apply(this, arguments),
              n = S.effects.effect[s.effect],
              o = n.mode,
              e = s.queue,
              i = e || "fx",
              a = s.complete,
              r = s.mode,
              l = [],
              h = function (t) {
                var e = S(this),
                  i = S.effects.mode(e, r) || o;
                e.data(p, !0),
                  l.push(i),
                  o && ("show" === i || (i === o && "hide" === i)) && e.show(),
                  (o && "none" === i) || S.effects.saveStyle(e),
                  S.isFunction(t) && t();
              };
            return S.fx.off || !n
              ? r
                ? this[r](s.duration, a)
                : this.each(function () {
                    a && a.call(this);
                  })
              : !1 === e
              ? this.each(h).each(t)
              : this.queue(i, h).queue(i, t);
          },
          show:
            ((o = S.fn.show),
            function (t) {
              if (i(t)) return o.apply(this, arguments);
              var e = c.apply(this, arguments);
              return (e.mode = "show"), this.effect.call(this, e);
            }),
          hide:
            ((n = S.fn.hide),
            function (t) {
              if (i(t)) return n.apply(this, arguments);
              var e = c.apply(this, arguments);
              return (e.mode = "hide"), this.effect.call(this, e);
            }),
          toggle:
            ((s = S.fn.toggle),
            function (t) {
              if (i(t) || "boolean" == typeof t)
                return s.apply(this, arguments);
              var e = c.apply(this, arguments);
              return (e.mode = "toggle"), this.effect.call(this, e);
            }),
          cssUnit: function (t) {
            var i = this.css(t),
              s = [];
            return (
              S.each(["em", "px", "%", "pt"], function (t, e) {
                0 < i.indexOf(e) && (s = [parseFloat(i), e]);
              }),
              s
            );
          },
          cssClip: function (t) {
            return t
              ? this.css(
                  "clip",
                  "rect(" +
                    t.top +
                    "px " +
                    t.right +
                    "px " +
                    t.bottom +
                    "px " +
                    t.left +
                    "px)"
                )
              : e(this.css("clip"), this);
          },
          transfer: function (t, e) {
            var i = S(this),
              s = S(t.to),
              n = "fixed" === s.css("position"),
              o = S("body"),
              a = n ? o.scrollTop() : 0,
              r = n ? o.scrollLeft() : 0,
              l = s.offset(),
              h = {
                top: l.top - a,
                left: l.left - r,
                height: s.innerHeight(),
                width: s.innerWidth(),
              },
              c = i.offset(),
              u = S("<div class='ui-effects-transfer'></div>")
                .appendTo("body")
                .addClass(t.className)
                .css({
                  top: c.top - a,
                  left: c.left - r,
                  height: i.innerHeight(),
                  width: i.innerWidth(),
                  position: n ? "fixed" : "absolute",
                })
                .animate(h, t.duration, t.easing, function () {
                  u.remove(), S.isFunction(e) && e();
                });
          },
        }),
        (S.fx.step.clip = function (t) {
          t.clipInit ||
            ((t.start = S(t.elem).cssClip()),
            "string" == typeof t.end && (t.end = e(t.end, t.elem)),
            (t.clipInit = !0)),
            S(t.elem).cssClip({
              top: t.pos * (t.end.top - t.start.top) + t.start.top,
              right: t.pos * (t.end.right - t.start.right) + t.start.right,
              bottom: t.pos * (t.end.bottom - t.start.bottom) + t.start.bottom,
              left: t.pos * (t.end.left - t.start.left) + t.start.left,
            });
        });
    })(),
    (l = {}),
    S.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, t) {
      l[t] = function (t) {
        return Math.pow(t, e + 2);
      };
    }),
    S.extend(l, {
      Sine: function (t) {
        return 1 - Math.cos((t * Math.PI) / 2);
      },
      Circ: function (t) {
        return 1 - Math.sqrt(1 - t * t);
      },
      Elastic: function (t) {
        return 0 === t || 1 === t
          ? t
          : -Math.pow(2, 8 * (t - 1)) *
              Math.sin(((80 * (t - 1) - 7.5) * Math.PI) / 15);
      },
      Back: function (t) {
        return t * t * (3 * t - 2);
      },
      Bounce: function (t) {
        for (var e, i = 4; ((e = Math.pow(2, --i)) - 1) / 11 > t; );
        return (
          1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * e - 2) / 22 - t, 2)
        );
      },
    }),
    S.each(l, function (t, e) {
      (S.easing["easeIn" + t] = e),
        (S.easing["easeOut" + t] = function (t) {
          return 1 - e(1 - t);
        }),
        (S.easing["easeInOut" + t] = function (t) {
          return t < 0.5 ? e(2 * t) / 2 : 1 - e(-2 * t + 2) / 2;
        });
    });
  var f, g;
  S.effects;
  S.effects.define("blind", "hide", function (t, e) {
    var i = {
        up: ["bottom", "top"],
        vertical: ["bottom", "top"],
        down: ["top", "bottom"],
        left: ["right", "left"],
        horizontal: ["right", "left"],
        right: ["left", "right"],
      },
      s = S(this),
      n = t.direction || "up",
      o = s.cssClip(),
      a = { clip: S.extend({}, o) },
      r = S.effects.createPlaceholder(s);
    (a.clip[i[n][0]] = a.clip[i[n][1]]),
      "show" === t.mode &&
        (s.cssClip(a.clip), r && r.css(S.effects.clipToBox(a)), (a.clip = o)),
      r && r.animate(S.effects.clipToBox(a), t.duration, t.easing),
      s.animate(a, {
        queue: !1,
        duration: t.duration,
        easing: t.easing,
        complete: e,
      });
  }),
    S.effects.define("bounce", function (t, e) {
      var i,
        s,
        n,
        o = S(this),
        a = t.mode,
        r = "hide" === a,
        l = "show" === a,
        h = t.direction || "up",
        c = t.distance,
        u = t.times || 5,
        d = 2 * u + (l || r ? 1 : 0),
        p = t.duration / d,
        f = t.easing,
        g = "up" === h || "down" === h ? "top" : "left",
        m = "up" === h || "left" === h,
        v = 0,
        _ = o.queue().length;
      for (
        S.effects.createPlaceholder(o),
          n = o.css(g),
          c || (c = o["top" === g ? "outerHeight" : "outerWidth"]() / 3),
          l &&
            (((s = { opacity: 1 })[g] = n),
            o
              .css("opacity", 0)
              .css(g, m ? 2 * -c : 2 * c)
              .animate(s, p, f)),
          r && (c /= Math.pow(2, u - 1)),
          (s = {})[g] = n;
        v < u;
        v++
      )
        ((i = {})[g] = (m ? "-=" : "+=") + c),
          o.animate(i, p, f).animate(s, p, f),
          (c = r ? 2 * c : c / 2);
      r &&
        (((i = { opacity: 0 })[g] = (m ? "-=" : "+=") + c), o.animate(i, p, f)),
        o.queue(e),
        S.effects.unshift(o, _, d + 1);
    }),
    S.effects.define("clip", "hide", function (t, e) {
      var i,
        s = {},
        n = S(this),
        o = t.direction || "vertical",
        a = "both" === o,
        r = a || "horizontal" === o,
        l = a || "vertical" === o;
      (i = n.cssClip()),
        (s.clip = {
          top: l ? (i.bottom - i.top) / 2 : i.top,
          right: r ? (i.right - i.left) / 2 : i.right,
          bottom: l ? (i.bottom - i.top) / 2 : i.bottom,
          left: r ? (i.right - i.left) / 2 : i.left,
        }),
        S.effects.createPlaceholder(n),
        "show" === t.mode && (n.cssClip(s.clip), (s.clip = i)),
        n.animate(s, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    S.effects.define("drop", "hide", function (t, e) {
      var i,
        s = S(this),
        n = "show" === t.mode,
        o = t.direction || "left",
        a = "up" === o || "down" === o ? "top" : "left",
        r = "up" === o || "left" === o ? "-=" : "+=",
        l = "+=" === r ? "-=" : "+=",
        h = { opacity: 0 };
      S.effects.createPlaceholder(s),
        (i =
          t.distance || s["top" === a ? "outerHeight" : "outerWidth"](!0) / 2),
        (h[a] = r + i),
        n && (s.css(h), (h[a] = l + i), (h.opacity = 1)),
        s.animate(h, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    S.effects.define("explode", "hide", function (t, e) {
      function i() {
        m.push(this),
          m.length === h * c &&
            (u.css({ visibility: "visible" }), S(m).remove(), e());
      }
      var s,
        n,
        o,
        a,
        r,
        l,
        h = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,
        c = h,
        u = S(this),
        d = "show" === t.mode,
        p = u.show().css("visibility", "hidden").offset(),
        f = Math.ceil(u.outerWidth() / c),
        g = Math.ceil(u.outerHeight() / h),
        m = [];
      for (s = 0; s < h; s++)
        for (a = p.top + s * g, l = s - (h - 1) / 2, n = 0; n < c; n++)
          (o = p.left + n * f),
            (r = n - (c - 1) / 2),
            u
              .clone()
              .appendTo("body")
              .wrap("<div></div>")
              .css({
                position: "absolute",
                visibility: "visible",
                left: -n * f,
                top: -s * g,
              })
              .parent()
              .addClass("ui-effects-explode")
              .css({
                position: "absolute",
                overflow: "hidden",
                width: f,
                height: g,
                left: o + (d ? r * f : 0),
                top: a + (d ? l * g : 0),
                opacity: d ? 0 : 1,
              })
              .animate(
                {
                  left: o + (d ? 0 : r * f),
                  top: a + (d ? 0 : l * g),
                  opacity: d ? 1 : 0,
                },
                t.duration || 500,
                t.easing,
                i
              );
    }),
    S.effects.define("fade", "toggle", function (t, e) {
      var i = "show" === t.mode;
      S(this)
        .css("opacity", i ? 0 : 1)
        .animate(
          { opacity: i ? 1 : 0 },
          { queue: !1, duration: t.duration, easing: t.easing, complete: e }
        );
    }),
    S.effects.define("fold", "hide", function (e, t) {
      var i = S(this),
        s = e.mode,
        n = "show" === s,
        o = "hide" === s,
        a = e.size || 15,
        r = /([0-9]+)%/.exec(a),
        l = !!e.horizFirst ? ["right", "bottom"] : ["bottom", "right"],
        h = e.duration / 2,
        c = S.effects.createPlaceholder(i),
        u = i.cssClip(),
        d = { clip: S.extend({}, u) },
        p = { clip: S.extend({}, u) },
        f = [u[l[0]], u[l[1]]],
        g = i.queue().length;
      r && (a = (parseInt(r[1], 10) / 100) * f[o ? 0 : 1]),
        (d.clip[l[0]] = a),
        (p.clip[l[0]] = a),
        (p.clip[l[1]] = 0),
        n &&
          (i.cssClip(p.clip), c && c.css(S.effects.clipToBox(p)), (p.clip = u)),
        i
          .queue(function (t) {
            c &&
              c
                .animate(S.effects.clipToBox(d), h, e.easing)
                .animate(S.effects.clipToBox(p), h, e.easing),
              t();
          })
          .animate(d, h, e.easing)
          .animate(p, h, e.easing)
          .queue(t),
        S.effects.unshift(i, g, 4);
    }),
    S.effects.define("highlight", "show", function (t, e) {
      var i = S(this),
        s = { backgroundColor: i.css("backgroundColor") };
      "hide" === t.mode && (s.opacity = 0),
        S.effects.saveStyle(i),
        i
          .css({
            backgroundImage: "none",
            backgroundColor: t.color || "#ffff99",
          })
          .animate(s, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: e,
          });
    }),
    S.effects.define("size", function (n, e) {
      var t,
        o,
        i,
        s = S(this),
        a = ["fontSize"],
        r = [
          "borderTopWidth",
          "borderBottomWidth",
          "paddingTop",
          "paddingBottom",
        ],
        l = [
          "borderLeftWidth",
          "borderRightWidth",
          "paddingLeft",
          "paddingRight",
        ],
        h = n.mode,
        c = "effect" !== h,
        u = n.scale || "both",
        d = n.origin || ["middle", "center"],
        p = s.css("position"),
        f = s.position(),
        g = S.effects.scaledDimensions(s),
        m = n.from || g,
        v = n.to || S.effects.scaledDimensions(s, 0);
      S.effects.createPlaceholder(s),
        "show" === h && ((i = m), (m = v), (v = i)),
        (o = {
          from: { y: m.height / g.height, x: m.width / g.width },
          to: { y: v.height / g.height, x: v.width / g.width },
        }),
        ("box" === u || "both" === u) &&
          (o.from.y !== o.to.y &&
            ((m = S.effects.setTransition(s, r, o.from.y, m)),
            (v = S.effects.setTransition(s, r, o.to.y, v))),
          o.from.x !== o.to.x &&
            ((m = S.effects.setTransition(s, l, o.from.x, m)),
            (v = S.effects.setTransition(s, l, o.to.x, v)))),
        ("content" === u || "both" === u) &&
          o.from.y !== o.to.y &&
          ((m = S.effects.setTransition(s, a, o.from.y, m)),
          (v = S.effects.setTransition(s, a, o.to.y, v))),
        d &&
          ((t = S.effects.getBaseline(d, g)),
          (m.top = (g.outerHeight - m.outerHeight) * t.y + f.top),
          (m.left = (g.outerWidth - m.outerWidth) * t.x + f.left),
          (v.top = (g.outerHeight - v.outerHeight) * t.y + f.top),
          (v.left = (g.outerWidth - v.outerWidth) * t.x + f.left)),
        s.css(m),
        ("content" === u || "both" === u) &&
          ((r = r.concat(["marginTop", "marginBottom"]).concat(a)),
          (l = l.concat(["marginLeft", "marginRight"])),
          s.find("*[width]").each(function () {
            var t = S(this),
              e = S.effects.scaledDimensions(t),
              i = {
                height: e.height * o.from.y,
                width: e.width * o.from.x,
                outerHeight: e.outerHeight * o.from.y,
                outerWidth: e.outerWidth * o.from.x,
              },
              s = {
                height: e.height * o.to.y,
                width: e.width * o.to.x,
                outerHeight: e.height * o.to.y,
                outerWidth: e.width * o.to.x,
              };
            o.from.y !== o.to.y &&
              ((i = S.effects.setTransition(t, r, o.from.y, i)),
              (s = S.effects.setTransition(t, r, o.to.y, s))),
              o.from.x !== o.to.x &&
                ((i = S.effects.setTransition(t, l, o.from.x, i)),
                (s = S.effects.setTransition(t, l, o.to.x, s))),
              c && S.effects.saveStyle(t),
              t.css(i),
              t.animate(s, n.duration, n.easing, function () {
                c && S.effects.restoreStyle(t);
              });
          })),
        s.animate(v, {
          queue: !1,
          duration: n.duration,
          easing: n.easing,
          complete: function () {
            var t = s.offset();
            0 === v.opacity && s.css("opacity", m.opacity),
              c ||
                (s.css("position", "static" === p ? "relative" : p).offset(t),
                S.effects.saveStyle(s)),
              e();
          },
        });
    }),
    S.effects.define("scale", function (t, e) {
      var i = S(this),
        s = t.mode,
        n =
          parseInt(t.percent, 10) ||
          (0 === parseInt(t.percent, 10) ? 0 : "effect" !== s ? 0 : 100),
        o = S.extend(
          !0,
          {
            from: S.effects.scaledDimensions(i),
            to: S.effects.scaledDimensions(i, n, t.direction || "both"),
            origin: t.origin || ["middle", "center"],
          },
          t
        );
      t.fade && ((o.from.opacity = 1), (o.to.opacity = 0)),
        S.effects.effect.size.call(this, o, e);
    }),
    S.effects.define("puff", "hide", function (t, e) {
      var i = S.extend(!0, {}, t, {
        fade: !0,
        percent: parseInt(t.percent, 10) || 150,
      });
      S.effects.effect.scale.call(this, i, e);
    }),
    S.effects.define("pulsate", "show", function (t, e) {
      var i = S(this),
        s = t.mode,
        n = "show" === s,
        o = n || "hide" === s,
        a = 2 * (t.times || 5) + (o ? 1 : 0),
        r = t.duration / a,
        l = 0,
        h = 1,
        c = i.queue().length;
      for (
        (n || !i.is(":visible")) && (i.css("opacity", 0).show(), (l = 1));
        h < a;
        h++
      )
        i.animate({ opacity: l }, r, t.easing), (l = 1 - l);
      i.animate({ opacity: l }, r, t.easing),
        i.queue(e),
        S.effects.unshift(i, c, a + 1);
    }),
    S.effects.define("shake", function (t, e) {
      var i = 1,
        s = S(this),
        n = t.direction || "left",
        o = t.distance || 20,
        a = t.times || 3,
        r = 2 * a + 1,
        l = Math.round(t.duration / r),
        h = "up" === n || "down" === n ? "top" : "left",
        c = "up" === n || "left" === n,
        u = {},
        d = {},
        p = {},
        f = s.queue().length;
      for (
        S.effects.createPlaceholder(s),
          u[h] = (c ? "-=" : "+=") + o,
          d[h] = (c ? "+=" : "-=") + 2 * o,
          p[h] = (c ? "-=" : "+=") + 2 * o,
          s.animate(u, l, t.easing);
        i < a;
        i++
      )
        s.animate(d, l, t.easing).animate(p, l, t.easing);
      s
        .animate(d, l, t.easing)
        .animate(u, l / 2, t.easing)
        .queue(e),
        S.effects.unshift(s, f, r + 1);
    }),
    S.effects.define("slide", "show", function (t, e) {
      var i,
        s,
        n = S(this),
        o = {
          up: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          right: ["left", "right"],
        },
        a = t.mode,
        r = t.direction || "left",
        l = "up" === r || "down" === r ? "top" : "left",
        h = "up" === r || "left" === r,
        c = t.distance || n["top" === l ? "outerHeight" : "outerWidth"](!0),
        u = {};
      S.effects.createPlaceholder(n),
        (i = n.cssClip()),
        (s = n.position()[l]),
        (u[l] = (h ? -1 : 1) * c + s),
        (u.clip = n.cssClip()),
        (u.clip[o[r][1]] = u.clip[o[r][0]]),
        "show" === a &&
          (n.cssClip(u.clip), n.css(l, u[l]), (u.clip = i), (u[l] = s)),
        n.animate(u, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    !1 !== S.uiBackCompat &&
      S.effects.define("transfer", function (t, e) {
        S(this).transfer(t, e);
      }),
    (S.ui.focusable = function (t, e) {
      var i,
        s,
        n,
        o,
        a,
        r = t.nodeName.toLowerCase();
      return "area" === r
        ? ((s = (i = t.parentNode).name),
          !(!t.href || !s || "map" !== i.nodeName.toLowerCase()) &&
            0 < (n = S("img[usemap='#" + s + "']")).length &&
            n.is(":visible"))
        : (/^(input|select|textarea|button|object)$/.test(r)
            ? (o = !t.disabled) &&
              (a = S(t).closest("fieldset")[0]) &&
              (o = !a.disabled)
            : (o = ("a" === r && t.href) || e),
          o &&
            S(t).is(":visible") &&
            (function (t) {
              for (var e = t.css("visibility"); "inherit" === e; )
                e = (t = t.parent()).css("visibility");
              return "hidden" !== e;
            })(S(t)));
    }),
    S.extend(S.expr[":"], {
      focusable: function (t) {
        return S.ui.focusable(t, null != S.attr(t, "tabindex"));
      },
    }),
    S.ui.focusable,
    (S.fn.form = function () {
      return "string" == typeof this[0].form
        ? this.closest("form")
        : S(this[0].form);
    }),
    (S.ui.formResetMixin = {
      _formResetHandler: function () {
        var e = S(this);
        setTimeout(function () {
          var t = e.data("ui-form-reset-instances");
          S.each(t, function () {
            this.refresh();
          });
        });
      },
      _bindFormResetHandler: function () {
        if (((this.form = this.element.form()), this.form.length)) {
          var t = this.form.data("ui-form-reset-instances") || [];
          t.length ||
            this.form.on("reset.ui-form-reset", this._formResetHandler),
            t.push(this),
            this.form.data("ui-form-reset-instances", t);
        }
      },
      _unbindFormResetHandler: function () {
        if (this.form.length) {
          var t = this.form.data("ui-form-reset-instances");
          t.splice(S.inArray(this, t), 1),
            t.length
              ? this.form.data("ui-form-reset-instances", t)
              : this.form
                  .removeData("ui-form-reset-instances")
                  .off("reset.ui-form-reset");
        }
      },
    }),
    "1.7" === S.fn.jquery.substring(0, 3) &&
      (S.each(["Width", "Height"], function (t, i) {
        function s(t, e, i, s) {
          return (
            S.each(n, function () {
              (e -= parseFloat(S.css(t, "padding" + this)) || 0),
                i &&
                  (e -= parseFloat(S.css(t, "border" + this + "Width")) || 0),
                s && (e -= parseFloat(S.css(t, "margin" + this)) || 0);
            }),
            e
          );
        }
        var n = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"],
          o = i.toLowerCase(),
          a = {
            innerWidth: S.fn.innerWidth,
            innerHeight: S.fn.innerHeight,
            outerWidth: S.fn.outerWidth,
            outerHeight: S.fn.outerHeight,
          };
        (S.fn["inner" + i] = function (t) {
          return void 0 === t
            ? a["inner" + i].call(this)
            : this.each(function () {
                S(this).css(o, s(this, t) + "px");
              });
        }),
          (S.fn["outer" + i] = function (t, e) {
            return "number" != typeof t
              ? a["outer" + i].call(this, t)
              : this.each(function () {
                  S(this).css(o, s(this, t, !0, e) + "px");
                });
          });
      }),
      (S.fn.addBack = function (t) {
        return this.add(
          null == t ? this.prevObject : this.prevObject.filter(t)
        );
      })),
    (S.ui.keyCode = {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38,
    }),
    (S.ui.escapeSelector =
      ((g = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g),
      function (t) {
        return t.replace(g, "\\$1");
      })),
    (S.fn.labels = function () {
      var t, e, i, s, n;
      return this[0].labels && this[0].labels.length
        ? this.pushStack(this[0].labels)
        : ((s = this.eq(0).parents("label")),
          (i = this.attr("id")) &&
            ((n = (t = this.eq(0).parents().last()).add(
              t.length ? t.siblings() : this.siblings()
            )),
            (e = "label[for='" + S.ui.escapeSelector(i) + "']"),
            (s = s.add(n.find(e).addBack(e)))),
          this.pushStack(s));
    }),
    (S.fn.scrollParent = function (t) {
      var e = this.css("position"),
        i = "absolute" === e,
        s = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
        n = this.parents()
          .filter(function () {
            var t = S(this);
            return (
              (!i || "static" !== t.css("position")) &&
              s.test(
                t.css("overflow") + t.css("overflow-y") + t.css("overflow-x")
              )
            );
          })
          .eq(0);
      return "fixed" !== e && n.length
        ? n
        : S(this[0].ownerDocument || document);
    }),
    S.extend(S.expr[":"], {
      tabbable: function (t) {
        var e = S.attr(t, "tabindex"),
          i = null != e;
        return (!i || 0 <= e) && S.ui.focusable(t, i);
      },
    }),
    S.fn.extend({
      uniqueId:
        ((f = 0),
        function () {
          return this.each(function () {
            this.id || (this.id = "ui-id-" + ++f);
          });
        }),
      removeUniqueId: function () {
        return this.each(function () {
          /^ui-id-\d+$/.test(this.id) && S(this).removeAttr("id");
        });
      },
    }),
    S.widget("ui.accordion", {
      version: "1.12.1",
      options: {
        active: 0,
        animate: {},
        classes: {
          "ui-accordion-header": "ui-corner-top",
          "ui-accordion-header-collapsed": "ui-corner-all",
          "ui-accordion-content": "ui-corner-bottom",
        },
        collapsible: !1,
        event: "click",
        header: "> li > :first-child, > :not(li):even",
        heightStyle: "auto",
        icons: {
          activeHeader: "ui-icon-triangle-1-s",
          header: "ui-icon-triangle-1-e",
        },
        activate: null,
        beforeActivate: null,
      },
      hideProps: {
        borderTopWidth: "hide",
        borderBottomWidth: "hide",
        paddingTop: "hide",
        paddingBottom: "hide",
        height: "hide",
      },
      showProps: {
        borderTopWidth: "show",
        borderBottomWidth: "show",
        paddingTop: "show",
        paddingBottom: "show",
        height: "show",
      },
      _create: function () {
        var t = this.options;
        (this.prevShow = this.prevHide = S()),
          this._addClass("ui-accordion", "ui-widget ui-helper-reset"),
          this.element.attr("role", "tablist"),
          t.collapsible ||
            (!1 !== t.active && null != t.active) ||
            (t.active = 0),
          this._processPanels(),
          t.active < 0 && (t.active += this.headers.length),
          this._refresh();
      },
      _getCreateEventData: function () {
        return {
          header: this.active,
          panel: this.active.length ? this.active.next() : S(),
        };
      },
      _createIcons: function () {
        var t,
          e,
          i = this.options.icons;
        i &&
          ((t = S("<span>")),
          this._addClass(t, "ui-accordion-header-icon", "ui-icon " + i.header),
          t.prependTo(this.headers),
          (e = this.active.children(".ui-accordion-header-icon")),
          this._removeClass(e, i.header)
            ._addClass(e, null, i.activeHeader)
            ._addClass(this.headers, "ui-accordion-icons"));
      },
      _destroyIcons: function () {
        this._removeClass(this.headers, "ui-accordion-icons"),
          this.headers.children(".ui-accordion-header-icon").remove();
      },
      _destroy: function () {
        var t;
        this.element.removeAttr("role"),
          this.headers
            .removeAttr(
              "role aria-expanded aria-selected aria-controls tabIndex"
            )
            .removeUniqueId(),
          this._destroyIcons(),
          (t = this.headers
            .next()
            .css("display", "")
            .removeAttr("role aria-hidden aria-labelledby")
            .removeUniqueId()),
          "content" !== this.options.heightStyle && t.css("height", "");
      },
      _setOption: function (t, e) {
        return "active" === t
          ? void this._activate(e)
          : ("event" === t &&
              (this.options.event &&
                this._off(this.headers, this.options.event),
              this._setupEvents(e)),
            this._super(t, e),
            "collapsible" !== t ||
              e ||
              !1 !== this.options.active ||
              this._activate(0),
            void (
              "icons" === t && (this._destroyIcons(), e && this._createIcons())
            ));
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this.element.attr("aria-disabled", t),
          this._toggleClass(null, "ui-state-disabled", !!t),
          this._toggleClass(
            this.headers.add(this.headers.next()),
            null,
            "ui-state-disabled",
            !!t
          );
      },
      _keydown: function (t) {
        if (!t.altKey && !t.ctrlKey) {
          var e = S.ui.keyCode,
            i = this.headers.length,
            s = this.headers.index(t.target),
            n = !1;
          switch (t.keyCode) {
            case e.RIGHT:
            case e.DOWN:
              n = this.headers[(s + 1) % i];
              break;
            case e.LEFT:
            case e.UP:
              n = this.headers[(s - 1 + i) % i];
              break;
            case e.SPACE:
            case e.ENTER:
              this._eventHandler(t);
              break;
            case e.HOME:
              n = this.headers[0];
              break;
            case e.END:
              n = this.headers[i - 1];
          }
          n &&
            (S(t.target).attr("tabIndex", -1),
            S(n).attr("tabIndex", 0),
            S(n).trigger("focus"),
            t.preventDefault());
        }
      },
      _panelKeyDown: function (t) {
        t.keyCode === S.ui.keyCode.UP &&
          t.ctrlKey &&
          S(t.currentTarget).prev().trigger("focus");
      },
      refresh: function () {
        var t = this.options;
        this._processPanels(),
          (!1 === t.active && !0 === t.collapsible) || !this.headers.length
            ? ((t.active = !1), (this.active = S()))
            : !1 === t.active
            ? this._activate(0)
            : this.active.length && !S.contains(this.element[0], this.active[0])
            ? this.headers.length ===
              this.headers.find(".ui-state-disabled").length
              ? ((t.active = !1), (this.active = S()))
              : this._activate(Math.max(0, t.active - 1))
            : (t.active = this.headers.index(this.active)),
          this._destroyIcons(),
          this._refresh();
      },
      _processPanels: function () {
        var t = this.headers,
          e = this.panels;
        (this.headers = this.element.find(this.options.header)),
          this._addClass(
            this.headers,
            "ui-accordion-header ui-accordion-header-collapsed",
            "ui-state-default"
          ),
          (this.panels = this.headers
            .next()
            .filter(":not(.ui-accordion-content-active)")
            .hide()),
          this._addClass(
            this.panels,
            "ui-accordion-content",
            "ui-helper-reset ui-widget-content"
          ),
          e && (this._off(t.not(this.headers)), this._off(e.not(this.panels)));
      },
      _refresh: function () {
        var i,
          t = this.options,
          e = t.heightStyle,
          s = this.element.parent();
        (this.active = this._findActive(t.active)),
          this._addClass(
            this.active,
            "ui-accordion-header-active",
            "ui-state-active"
          )._removeClass(this.active, "ui-accordion-header-collapsed"),
          this._addClass(this.active.next(), "ui-accordion-content-active"),
          this.active.next().show(),
          this.headers
            .attr("role", "tab")
            .each(function () {
              var t = S(this),
                e = t.uniqueId().attr("id"),
                i = t.next(),
                s = i.uniqueId().attr("id");
              t.attr("aria-controls", s), i.attr("aria-labelledby", e);
            })
            .next()
            .attr("role", "tabpanel"),
          this.headers
            .not(this.active)
            .attr({
              "aria-selected": "false",
              "aria-expanded": "false",
              tabIndex: -1,
            })
            .next()
            .attr({ "aria-hidden": "true" })
            .hide(),
          this.active.length
            ? this.active
                .attr({
                  "aria-selected": "true",
                  "aria-expanded": "true",
                  tabIndex: 0,
                })
                .next()
                .attr({ "aria-hidden": "false" })
            : this.headers.eq(0).attr("tabIndex", 0),
          this._createIcons(),
          this._setupEvents(t.event),
          "fill" === e
            ? ((i = s.height()),
              this.element.siblings(":visible").each(function () {
                var t = S(this),
                  e = t.css("position");
                "absolute" !== e && "fixed" !== e && (i -= t.outerHeight(!0));
              }),
              this.headers.each(function () {
                i -= S(this).outerHeight(!0);
              }),
              this.headers
                .next()
                .each(function () {
                  S(this).height(
                    Math.max(0, i - S(this).innerHeight() + S(this).height())
                  );
                })
                .css("overflow", "auto"))
            : "auto" === e &&
              ((i = 0),
              this.headers
                .next()
                .each(function () {
                  var t = S(this).is(":visible");
                  t || S(this).show(),
                    (i = Math.max(i, S(this).css("height", "").height())),
                    t || S(this).hide();
                })
                .height(i));
      },
      _activate: function (t) {
        var e = this._findActive(t)[0];
        e !== this.active[0] &&
          ((e = e || this.active[0]),
          this._eventHandler({
            target: e,
            currentTarget: e,
            preventDefault: S.noop,
          }));
      },
      _findActive: function (t) {
        return "number" == typeof t ? this.headers.eq(t) : S();
      },
      _setupEvents: function (t) {
        var i = { keydown: "_keydown" };
        t &&
          S.each(t.split(" "), function (t, e) {
            i[e] = "_eventHandler";
          }),
          this._off(this.headers.add(this.headers.next())),
          this._on(this.headers, i),
          this._on(this.headers.next(), { keydown: "_panelKeyDown" }),
          this._hoverable(this.headers),
          this._focusable(this.headers);
      },
      _eventHandler: function (t) {
        var e,
          i,
          s = this.options,
          n = this.active,
          o = S(t.currentTarget),
          a = o[0] === n[0],
          r = a && s.collapsible,
          l = r ? S() : o.next(),
          h = n.next(),
          c = {
            oldHeader: n,
            oldPanel: h,
            newHeader: r ? S() : o,
            newPanel: l,
          };
        t.preventDefault(),
          (a && !s.collapsible) ||
            !1 === this._trigger("beforeActivate", t, c) ||
            ((s.active = !r && this.headers.index(o)),
            (this.active = a ? S() : o),
            this._toggle(c),
            this._removeClass(
              n,
              "ui-accordion-header-active",
              "ui-state-active"
            ),
            s.icons &&
              ((e = n.children(".ui-accordion-header-icon")),
              this._removeClass(e, null, s.icons.activeHeader)._addClass(
                e,
                null,
                s.icons.header
              )),
            a ||
              (this._removeClass(o, "ui-accordion-header-collapsed")._addClass(
                o,
                "ui-accordion-header-active",
                "ui-state-active"
              ),
              s.icons &&
                ((i = o.children(".ui-accordion-header-icon")),
                this._removeClass(i, null, s.icons.header)._addClass(
                  i,
                  null,
                  s.icons.activeHeader
                )),
              this._addClass(o.next(), "ui-accordion-content-active")));
      },
      _toggle: function (t) {
        var e = t.newPanel,
          i = this.prevShow.length ? this.prevShow : t.oldPanel;
        this.prevShow.add(this.prevHide).stop(!0, !0),
          (this.prevShow = e),
          (this.prevHide = i),
          this.options.animate
            ? this._animate(e, i, t)
            : (i.hide(), e.show(), this._toggleComplete(t)),
          i.attr({ "aria-hidden": "true" }),
          i.prev().attr({ "aria-selected": "false", "aria-expanded": "false" }),
          e.length && i.length
            ? i.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
            : e.length &&
              this.headers
                .filter(function () {
                  return 0 === parseInt(S(this).attr("tabIndex"), 10);
                })
                .attr("tabIndex", -1),
          e.attr("aria-hidden", "false").prev().attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _animate: function (t, i, e) {
        var s,
          n,
          o,
          a = this,
          r = 0,
          l = t.css("box-sizing"),
          h = t.length && (!i.length || t.index() < i.index()),
          c = this.options.animate || {},
          u = (h && c.down) || c,
          d = function () {
            a._toggleComplete(e);
          };
        return (
          "number" == typeof u && (o = u),
          "string" == typeof u && (n = u),
          (n = n || u.easing || c.easing),
          (o = o || u.duration || c.duration),
          i.length
            ? t.length
              ? ((s = t.show().outerHeight()),
                i.animate(this.hideProps, {
                  duration: o,
                  easing: n,
                  step: function (t, e) {
                    e.now = Math.round(t);
                  },
                }),
                void t.hide().animate(this.showProps, {
                  duration: o,
                  easing: n,
                  complete: d,
                  step: function (t, e) {
                    (e.now = Math.round(t)),
                      "height" !== e.prop
                        ? "content-box" === l && (r += e.now)
                        : "content" !== a.options.heightStyle &&
                          ((e.now = Math.round(s - i.outerHeight() - r)),
                          (r = 0));
                  },
                }))
              : i.animate(this.hideProps, o, n, d)
            : t.animate(this.showProps, o, n, d)
        );
      },
      _toggleComplete: function (t) {
        var e = t.oldPanel,
          i = e.prev();
        this._removeClass(e, "ui-accordion-content-active"),
          this._removeClass(i, "ui-accordion-header-active")._addClass(
            i,
            "ui-accordion-header-collapsed"
          ),
          e.length && (e.parent()[0].className = e.parent()[0].className),
          this._trigger("activate", null, t);
      },
    }),
    (S.ui.safeActiveElement = function (e) {
      var i;
      try {
        i = e.activeElement;
      } catch (t) {
        i = e.body;
      }
      return i || (i = e.body), i.nodeName || (i = e.body), i;
    }),
    S.widget("ui.menu", {
      version: "1.12.1",
      defaultElement: "<ul>",
      delay: 300,
      options: {
        icons: { submenu: "ui-icon-caret-1-e" },
        items: "> *",
        menus: "ul",
        position: { my: "left top", at: "right top" },
        role: "menu",
        blur: null,
        focus: null,
        select: null,
      },
      _create: function () {
        (this.activeMenu = this.element),
          (this.mouseHandled = !1),
          this.element
            .uniqueId()
            .attr({ role: this.options.role, tabIndex: 0 }),
          this._addClass("ui-menu", "ui-widget ui-widget-content"),
          this._on({
            "mousedown .ui-menu-item": function (t) {
              t.preventDefault();
            },
            "click .ui-menu-item": function (t) {
              var e = S(t.target),
                i = S(S.ui.safeActiveElement(this.document[0]));
              !this.mouseHandled &&
                e.not(".ui-state-disabled").length &&
                (this.select(t),
                t.isPropagationStopped() || (this.mouseHandled = !0),
                e.has(".ui-menu").length
                  ? this.expand(t)
                  : !this.element.is(":focus") &&
                    i.closest(".ui-menu").length &&
                    (this.element.trigger("focus", [!0]),
                    this.active &&
                      1 === this.active.parents(".ui-menu").length &&
                      clearTimeout(this.timer)));
            },
            "mouseenter .ui-menu-item": function (t) {
              if (!this.previousFilter) {
                var e = S(t.target).closest(".ui-menu-item"),
                  i = S(t.currentTarget);
                e[0] === i[0] &&
                  (this._removeClass(
                    i.siblings().children(".ui-state-active"),
                    null,
                    "ui-state-active"
                  ),
                  this.focus(t, i));
              }
            },
            mouseleave: "collapseAll",
            "mouseleave .ui-menu": "collapseAll",
            focus: function (t, e) {
              var i =
                this.active || this.element.find(this.options.items).eq(0);
              e || this.focus(t, i);
            },
            blur: function (t) {
              this._delay(function () {
                !S.contains(
                  this.element[0],
                  S.ui.safeActiveElement(this.document[0])
                ) && this.collapseAll(t);
              });
            },
            keydown: "_keydown",
          }),
          this.refresh(),
          this._on(this.document, {
            click: function (t) {
              this._closeOnDocumentClick(t) && this.collapseAll(t),
                (this.mouseHandled = !1);
            },
          });
      },
      _destroy: function () {
        var t = this.element
          .find(".ui-menu-item")
          .removeAttr("role aria-disabled")
          .children(".ui-menu-item-wrapper")
          .removeUniqueId()
          .removeAttr("tabIndex role aria-haspopup");
        this.element
          .removeAttr("aria-activedescendant")
          .find(".ui-menu")
          .addBack()
          .removeAttr(
            "role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex"
          )
          .removeUniqueId()
          .show(),
          t.children().each(function () {
            var t = S(this);
            t.data("ui-menu-submenu-caret") && t.remove();
          });
      },
      _keydown: function (t) {
        var e,
          i,
          s,
          n,
          o = !0;
        switch (t.keyCode) {
          case S.ui.keyCode.PAGE_UP:
            this.previousPage(t);
            break;
          case S.ui.keyCode.PAGE_DOWN:
            this.nextPage(t);
            break;
          case S.ui.keyCode.HOME:
            this._move("first", "first", t);
            break;
          case S.ui.keyCode.END:
            this._move("last", "last", t);
            break;
          case S.ui.keyCode.UP:
            this.previous(t);
            break;
          case S.ui.keyCode.DOWN:
            this.next(t);
            break;
          case S.ui.keyCode.LEFT:
            this.collapse(t);
            break;
          case S.ui.keyCode.RIGHT:
            this.active &&
              !this.active.is(".ui-state-disabled") &&
              this.expand(t);
            break;
          case S.ui.keyCode.ENTER:
          case S.ui.keyCode.SPACE:
            this._activate(t);
            break;
          case S.ui.keyCode.ESCAPE:
            this.collapse(t);
            break;
          default:
            (o = !1),
              (i = this.previousFilter || ""),
              (n = !1),
              (s =
                96 <= t.keyCode && t.keyCode <= 105
                  ? "" + (t.keyCode - 96)
                  : String.fromCharCode(t.keyCode)),
              clearTimeout(this.filterTimer),
              s === i ? (n = !0) : (s = i + s),
              (e = this._filterMenuItems(s)),
              (e =
                n && -1 !== e.index(this.active.next())
                  ? this.active.nextAll(".ui-menu-item")
                  : e).length ||
                ((s = String.fromCharCode(t.keyCode)),
                (e = this._filterMenuItems(s))),
              e.length
                ? (this.focus(t, e),
                  (this.previousFilter = s),
                  (this.filterTimer = this._delay(function () {
                    delete this.previousFilter;
                  }, 1e3)))
                : delete this.previousFilter;
        }
        o && t.preventDefault();
      },
      _activate: function (t) {
        this.active &&
          !this.active.is(".ui-state-disabled") &&
          (this.active.children("[aria-haspopup='true']").length
            ? this.expand(t)
            : this.select(t));
      },
      refresh: function () {
        var t,
          e,
          i,
          s,
          n = this,
          o = this.options.icons.submenu,
          a = this.element.find(this.options.menus);
        this._toggleClass(
          "ui-menu-icons",
          null,
          !!this.element.find(".ui-icon").length
        ),
          (e = a
            .filter(":not(.ui-menu)")
            .hide()
            .attr({
              role: this.options.role,
              "aria-hidden": "true",
              "aria-expanded": "false",
            })
            .each(function () {
              var t = S(this),
                e = t.prev(),
                i = S("<span>").data("ui-menu-submenu-caret", !0);
              n._addClass(i, "ui-menu-icon", "ui-icon " + o),
                e.attr("aria-haspopup", "true").prepend(i),
                t.attr("aria-labelledby", e.attr("id"));
            })),
          this._addClass(e, "ui-menu", "ui-widget ui-widget-content ui-front"),
          (t = a.add(this.element).find(this.options.items))
            .not(".ui-menu-item")
            .each(function () {
              var t = S(this);
              n._isDivider(t) &&
                n._addClass(t, "ui-menu-divider", "ui-widget-content");
            }),
          (s = (i = t.not(".ui-menu-item, .ui-menu-divider"))
            .children()
            .not(".ui-menu")
            .uniqueId()
            .attr({ tabIndex: -1, role: this._itemRole() })),
          this._addClass(i, "ui-menu-item")._addClass(
            s,
            "ui-menu-item-wrapper"
          ),
          t.filter(".ui-state-disabled").attr("aria-disabled", "true"),
          this.active &&
            !S.contains(this.element[0], this.active[0]) &&
            this.blur();
      },
      _itemRole: function () {
        return { menu: "menuitem", listbox: "option" }[this.options.role];
      },
      _setOption: function (t, e) {
        if ("icons" === t) {
          var i = this.element.find(".ui-menu-icon");
          this._removeClass(i, null, this.options.icons.submenu)._addClass(
            i,
            null,
            e.submenu
          );
        }
        this._super(t, e);
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this.element.attr("aria-disabled", t + ""),
          this._toggleClass(null, "ui-state-disabled", !!t);
      },
      focus: function (t, e) {
        var i, s, n;
        this.blur(t, t && "focus" === t.type),
          this._scrollIntoView(e),
          (this.active = e.first()),
          (s = this.active.children(".ui-menu-item-wrapper")),
          this._addClass(s, null, "ui-state-active"),
          this.options.role &&
            this.element.attr("aria-activedescendant", s.attr("id")),
          (n = this.active
            .parent()
            .closest(".ui-menu-item")
            .children(".ui-menu-item-wrapper")),
          this._addClass(n, null, "ui-state-active"),
          t && "keydown" === t.type
            ? this._close()
            : (this.timer = this._delay(function () {
                this._close();
              }, this.delay)),
          (i = e.children(".ui-menu")).length &&
            t &&
            /^mouse/.test(t.type) &&
            this._startOpening(i),
          (this.activeMenu = e.parent()),
          this._trigger("focus", t, { item: e });
      },
      _scrollIntoView: function (t) {
        var e, i, s, n, o, a;
        this._hasScroll() &&
          ((e = parseFloat(S.css(this.activeMenu[0], "borderTopWidth")) || 0),
          (i = parseFloat(S.css(this.activeMenu[0], "paddingTop")) || 0),
          (s = t.offset().top - this.activeMenu.offset().top - e - i),
          (n = this.activeMenu.scrollTop()),
          (o = this.activeMenu.height()),
          (a = t.outerHeight()),
          s < 0
            ? this.activeMenu.scrollTop(n + s)
            : o < s + a && this.activeMenu.scrollTop(n + s - o + a));
      },
      blur: function (t, e) {
        e || clearTimeout(this.timer),
          this.active &&
            (this._removeClass(
              this.active.children(".ui-menu-item-wrapper"),
              null,
              "ui-state-active"
            ),
            this._trigger("blur", t, { item: this.active }),
            (this.active = null));
      },
      _startOpening: function (t) {
        clearTimeout(this.timer),
          "true" === t.attr("aria-hidden") &&
            (this.timer = this._delay(function () {
              this._close(), this._open(t);
            }, this.delay));
      },
      _open: function (t) {
        var e = S.extend({ of: this.active }, this.options.position);
        clearTimeout(this.timer),
          this.element
            .find(".ui-menu")
            .not(t.parents(".ui-menu"))
            .hide()
            .attr("aria-hidden", "true"),
          t
            .show()
            .removeAttr("aria-hidden")
            .attr("aria-expanded", "true")
            .position(e);
      },
      collapseAll: function (e, i) {
        clearTimeout(this.timer),
          (this.timer = this._delay(function () {
            var t = i
              ? this.element
              : S(e && e.target).closest(this.element.find(".ui-menu"));
            t.length || (t = this.element),
              this._close(t),
              this.blur(e),
              this._removeClass(
                t.find(".ui-state-active"),
                null,
                "ui-state-active"
              ),
              (this.activeMenu = t);
          }, this.delay));
      },
      _close: function (t) {
        t || (t = this.active ? this.active.parent() : this.element),
          t
            .find(".ui-menu")
            .hide()
            .attr("aria-hidden", "true")
            .attr("aria-expanded", "false");
      },
      _closeOnDocumentClick: function (t) {
        return !S(t.target).closest(".ui-menu").length;
      },
      _isDivider: function (t) {
        return !/[^\-\u2014\u2013\s]/.test(t.text());
      },
      collapse: function (t) {
        var e =
          this.active &&
          this.active.parent().closest(".ui-menu-item", this.element);
        e && e.length && (this._close(), this.focus(t, e));
      },
      expand: function (t) {
        var e =
          this.active &&
          this.active.children(".ui-menu ").find(this.options.items).first();
        e &&
          e.length &&
          (this._open(e.parent()),
          this._delay(function () {
            this.focus(t, e);
          }));
      },
      next: function (t) {
        this._move("next", "first", t);
      },
      previous: function (t) {
        this._move("prev", "last", t);
      },
      isFirstItem: function () {
        return this.active && !this.active.prevAll(".ui-menu-item").length;
      },
      isLastItem: function () {
        return this.active && !this.active.nextAll(".ui-menu-item").length;
      },
      _move: function (t, e, i) {
        var s;
        this.active &&
          (s =
            "first" === t || "last" === t
              ? this.active["first" === t ? "prevAll" : "nextAll"](
                  ".ui-menu-item"
                ).eq(-1)
              : this.active[t + "All"](".ui-menu-item").eq(0)),
          (s && s.length && this.active) ||
            (s = this.activeMenu.find(this.options.items)[e]()),
          this.focus(i, s);
      },
      nextPage: function (t) {
        var e, i, s;
        return this.active
          ? void (
              this.isLastItem() ||
              (this._hasScroll()
                ? ((i = this.active.offset().top),
                  (s = this.element.height()),
                  this.active.nextAll(".ui-menu-item").each(function () {
                    return (e = S(this)).offset().top - i - s < 0;
                  }),
                  this.focus(t, e))
                : this.focus(
                    t,
                    this.activeMenu
                      .find(this.options.items)
                      [this.active ? "last" : "first"]()
                  ))
            )
          : void this.next(t);
      },
      previousPage: function (t) {
        var e, i, s;
        return this.active
          ? void (
              this.isFirstItem() ||
              (this._hasScroll()
                ? ((i = this.active.offset().top),
                  (s = this.element.height()),
                  this.active.prevAll(".ui-menu-item").each(function () {
                    return 0 < (e = S(this)).offset().top - i + s;
                  }),
                  this.focus(t, e))
                : this.focus(
                    t,
                    this.activeMenu.find(this.options.items).first()
                  ))
            )
          : void this.next(t);
      },
      _hasScroll: function () {
        return this.element.outerHeight() < this.element.prop("scrollHeight");
      },
      select: function (t) {
        this.active = this.active || S(t.target).closest(".ui-menu-item");
        var e = { item: this.active };
        this.active.has(".ui-menu").length || this.collapseAll(t, !0),
          this._trigger("select", t, e);
      },
      _filterMenuItems: function (t) {
        var e = t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"),
          i = RegExp("^" + e, "i");
        return this.activeMenu
          .find(this.options.items)
          .filter(".ui-menu-item")
          .filter(function () {
            return i.test(
              S.trim(S(this).children(".ui-menu-item-wrapper").text())
            );
          });
      },
    }),
    S.widget("ui.autocomplete", {
      version: "1.12.1",
      defaultElement: "<input>",
      options: {
        appendTo: null,
        autoFocus: !1,
        delay: 300,
        minLength: 1,
        position: { my: "left top", at: "left bottom", collision: "none" },
        source: null,
        change: null,
        close: null,
        focus: null,
        open: null,
        response: null,
        search: null,
        select: null,
      },
      requestIndex: 0,
      pending: 0,
      _create: function () {
        var i,
          s,
          n,
          t = this.element[0].nodeName.toLowerCase(),
          e = "textarea" === t,
          o = "input" === t;
        (this.isMultiLine = e || (!o && this._isContentEditable(this.element))),
          (this.valueMethod = this.element[e || o ? "val" : "text"]),
          (this.isNewMenu = !0),
          this._addClass("ui-autocomplete-input"),
          this.element.attr("autocomplete", "off"),
          this._on(this.element, {
            keydown: function (t) {
              if (this.element.prop("readOnly")) s = n = i = !0;
              else {
                s = n = i = !1;
                var e = S.ui.keyCode;
                switch (t.keyCode) {
                  case e.PAGE_UP:
                    (i = !0), this._move("previousPage", t);
                    break;
                  case e.PAGE_DOWN:
                    (i = !0), this._move("nextPage", t);
                    break;
                  case e.UP:
                    (i = !0), this._keyEvent("previous", t);
                    break;
                  case e.DOWN:
                    (i = !0), this._keyEvent("next", t);
                    break;
                  case e.ENTER:
                    this.menu.active &&
                      ((i = !0), t.preventDefault(), this.menu.select(t));
                    break;
                  case e.TAB:
                    this.menu.active && this.menu.select(t);
                    break;
                  case e.ESCAPE:
                    this.menu.element.is(":visible") &&
                      (this.isMultiLine || this._value(this.term),
                      this.close(t),
                      t.preventDefault());
                    break;
                  default:
                    (s = !0), this._searchTimeout(t);
                }
              }
            },
            keypress: function (t) {
              if (i)
                return (
                  (i = !1),
                  void (
                    (!this.isMultiLine || this.menu.element.is(":visible")) &&
                    t.preventDefault()
                  )
                );
              if (!s) {
                var e = S.ui.keyCode;
                switch (t.keyCode) {
                  case e.PAGE_UP:
                    this._move("previousPage", t);
                    break;
                  case e.PAGE_DOWN:
                    this._move("nextPage", t);
                    break;
                  case e.UP:
                    this._keyEvent("previous", t);
                    break;
                  case e.DOWN:
                    this._keyEvent("next", t);
                }
              }
            },
            input: function (t) {
              return n
                ? ((n = !1), void t.preventDefault())
                : void this._searchTimeout(t);
            },
            focus: function () {
              (this.selectedItem = null), (this.previous = this._value());
            },
            blur: function (t) {
              return this.cancelBlur
                ? void delete this.cancelBlur
                : (clearTimeout(this.searching),
                  this.close(t),
                  void this._change(t));
            },
          }),
          this._initSource(),
          (this.menu = S("<ul>")
            .appendTo(this._appendTo())
            .menu({ role: null })
            .hide()
            .menu("instance")),
          this._addClass(this.menu.element, "ui-autocomplete", "ui-front"),
          this._on(this.menu.element, {
            mousedown: function (t) {
              t.preventDefault(),
                (this.cancelBlur = !0),
                this._delay(function () {
                  delete this.cancelBlur,
                    this.element[0] !==
                      S.ui.safeActiveElement(this.document[0]) &&
                      this.element.trigger("focus");
                });
            },
            menufocus: function (t, e) {
              var i, s;
              return this.isNewMenu &&
                ((this.isNewMenu = !1),
                t.originalEvent && /^mouse/.test(t.originalEvent.type))
                ? (this.menu.blur(),
                  void this.document.one("mousemove", function () {
                    S(t.target).trigger(t.originalEvent);
                  }))
                : ((s = e.item.data("ui-autocomplete-item")),
                  !1 !== this._trigger("focus", t, { item: s }) &&
                    t.originalEvent &&
                    /^key/.test(t.originalEvent.type) &&
                    this._value(s.value),
                  void (
                    (i = e.item.attr("aria-label") || s.value) &&
                    S.trim(i).length &&
                    (this.liveRegion.children().hide(),
                    S("<div>").text(i).appendTo(this.liveRegion))
                  ));
            },
            menuselect: function (t, e) {
              var i = e.item.data("ui-autocomplete-item"),
                s = this.previous;
              this.element[0] !== S.ui.safeActiveElement(this.document[0]) &&
                (this.element.trigger("focus"),
                (this.previous = s),
                this._delay(function () {
                  (this.previous = s), (this.selectedItem = i);
                })),
                !1 !== this._trigger("select", t, { item: i }) &&
                  this._value(i.value),
                (this.term = this._value()),
                this.close(t),
                (this.selectedItem = i);
            },
          }),
          (this.liveRegion = S("<div>", {
            role: "status",
            "aria-live": "assertive",
            "aria-relevant": "additions",
          }).appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          this._on(this.window, {
            beforeunload: function () {
              this.element.removeAttr("autocomplete");
            },
          });
      },
      _destroy: function () {
        clearTimeout(this.searching),
          this.element.removeAttr("autocomplete"),
          this.menu.element.remove(),
          this.liveRegion.remove();
      },
      _setOption: function (t, e) {
        this._super(t, e),
          "source" === t && this._initSource(),
          "appendTo" === t && this.menu.element.appendTo(this._appendTo()),
          "disabled" === t && e && this.xhr && this.xhr.abort();
      },
      _isEventTargetInWidget: function (t) {
        var e = this.menu.element[0];
        return (
          t.target === this.element[0] ||
          t.target === e ||
          S.contains(e, t.target)
        );
      },
      _closeOnClickOutside: function (t) {
        this._isEventTargetInWidget(t) || this.close();
      },
      _appendTo: function () {
        var t = this.options.appendTo;
        return (
          t &&
            (t = t.jquery || t.nodeType ? S(t) : this.document.find(t).eq(0)),
          (t && t[0]) || (t = this.element.closest(".ui-front, dialog")),
          t.length || (t = this.document[0].body),
          t
        );
      },
      _initSource: function () {
        var i,
          s,
          n = this;
        S.isArray(this.options.source)
          ? ((i = this.options.source),
            (this.source = function (t, e) {
              e(S.ui.autocomplete.filter(i, t.term));
            }))
          : "string" == typeof this.options.source
          ? ((s = this.options.source),
            (this.source = function (t, e) {
              n.xhr && n.xhr.abort(),
                (n.xhr = S.ajax({
                  url: s,
                  data: t,
                  dataType: "json",
                  success: function (t) {
                    e(t);
                  },
                  error: function () {
                    e([]);
                  },
                }));
            }))
          : (this.source = this.options.source);
      },
      _searchTimeout: function (s) {
        clearTimeout(this.searching),
          (this.searching = this._delay(function () {
            var t = this.term === this._value(),
              e = this.menu.element.is(":visible"),
              i = s.altKey || s.ctrlKey || s.metaKey || s.shiftKey;
            (!t || (t && !e && !i)) &&
              ((this.selectedItem = null), this.search(null, s));
          }, this.options.delay));
      },
      search: function (t, e) {
        return (
          (t = null != t ? t : this._value()),
          (this.term = this._value()),
          t.length < this.options.minLength
            ? this.close(e)
            : !1 !== this._trigger("search", e)
            ? this._search(t)
            : void 0
        );
      },
      _search: function (t) {
        this.pending++,
          this._addClass("ui-autocomplete-loading"),
          (this.cancelSearch = !1),
          this.source({ term: t }, this._response());
      },
      _response: function () {
        var e = ++this.requestIndex;
        return S.proxy(function (t) {
          e === this.requestIndex && this.__response(t),
            this.pending--,
            this.pending || this._removeClass("ui-autocomplete-loading");
        }, this);
      },
      __response: function (t) {
        t && (t = this._normalize(t)),
          this._trigger("response", null, { content: t }),
          !this.options.disabled && t && t.length && !this.cancelSearch
            ? (this._suggest(t), this._trigger("open"))
            : this._close();
      },
      close: function (t) {
        (this.cancelSearch = !0), this._close(t);
      },
      _close: function (t) {
        this._off(this.document, "mousedown"),
          this.menu.element.is(":visible") &&
            (this.menu.element.hide(),
            this.menu.blur(),
            (this.isNewMenu = !0),
            this._trigger("close", t));
      },
      _change: function (t) {
        this.previous !== this._value() &&
          this._trigger("change", t, { item: this.selectedItem });
      },
      _normalize: function (t) {
        return t.length && t[0].label && t[0].value
          ? t
          : S.map(t, function (t) {
              return "string" == typeof t
                ? { label: t, value: t }
                : S.extend({}, t, {
                    label: t.label || t.value,
                    value: t.value || t.label,
                  });
            });
      },
      _suggest: function (t) {
        var e = this.menu.element.empty();
        this._renderMenu(e, t),
          (this.isNewMenu = !0),
          this.menu.refresh(),
          e.show(),
          this._resizeMenu(),
          e.position(S.extend({ of: this.element }, this.options.position)),
          this.options.autoFocus && this.menu.next(),
          this._on(this.document, { mousedown: "_closeOnClickOutside" });
      },
      _resizeMenu: function () {
        var t = this.menu.element;
        t.outerWidth(
          Math.max(t.width("").outerWidth() + 1, this.element.outerWidth())
        );
      },
      _renderMenu: function (i, t) {
        var s = this;
        S.each(t, function (t, e) {
          s._renderItemData(i, e);
        });
      },
      _renderItemData: function (t, e) {
        return this._renderItem(t, e).data("ui-autocomplete-item", e);
      },
      _renderItem: function (t, e) {
        return S("<li>").append(S("<div>").text(e.label)).appendTo(t);
      },
      _move: function (t, e) {
        return this.menu.element.is(":visible")
          ? (this.menu.isFirstItem() && /^previous/.test(t)) ||
            (this.menu.isLastItem() && /^next/.test(t))
            ? (this.isMultiLine || this._value(this.term),
              void this.menu.blur())
            : void this.menu[t](e)
          : void this.search(null, e);
      },
      widget: function () {
        return this.menu.element;
      },
      _value: function () {
        return this.valueMethod.apply(this.element, arguments);
      },
      _keyEvent: function (t, e) {
        (!this.isMultiLine || this.menu.element.is(":visible")) &&
          (this._move(t, e), e.preventDefault());
      },
      _isContentEditable: function (t) {
        if (!t.length) return !1;
        var e = t.prop("contentEditable");
        return "inherit" === e
          ? this._isContentEditable(t.parent())
          : "true" === e;
      },
    }),
    S.extend(S.ui.autocomplete, {
      escapeRegex: function (t) {
        return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
      },
      filter: function (t, e) {
        var i = RegExp(S.ui.autocomplete.escapeRegex(e), "i");
        return S.grep(t, function (t) {
          return i.test(t.label || t.value || t);
        });
      },
    }),
    S.widget("ui.autocomplete", S.ui.autocomplete, {
      options: {
        messages: {
          noResults: "No search results.",
          results: function (t) {
            return (
              t +
              (1 < t ? " results are" : " result is") +
              " available, use up and down arrow keys to navigate."
            );
          },
        },
      },
      __response: function (t) {
        var e;
        this._superApply(arguments),
          this.options.disabled ||
            this.cancelSearch ||
            ((e =
              t && t.length
                ? this.options.messages.results(t.length)
                : this.options.messages.noResults),
            this.liveRegion.children().hide(),
            S("<div>").text(e).appendTo(this.liveRegion));
      },
    }),
    S.ui.autocomplete;
  var m,
    v,
    _ = /ui-corner-([a-z]){2,6}/g;
  S.widget("ui.controlgroup", {
    version: "1.12.1",
    defaultElement: "<div>",
    options: {
      direction: "horizontal",
      disabled: null,
      onlyVisible: !0,
      items: {
        button:
          "input[type=button], input[type=submit], input[type=reset], button, a",
        controlgroupLabel: ".ui-controlgroup-label",
        checkboxradio: "input[type='checkbox'], input[type='radio']",
        selectmenu: "select",
        spinner: ".ui-spinner-input",
      },
    },
    _create: function () {
      this._enhance();
    },
    _enhance: function () {
      this.element.attr("role", "toolbar"), this.refresh();
    },
    _destroy: function () {
      this._callChildMethod("destroy"),
        this.childWidgets.removeData("ui-controlgroup-data"),
        this.element.removeAttr("role"),
        this.options.items.controlgroupLabel &&
          this.element
            .find(this.options.items.controlgroupLabel)
            .find(".ui-controlgroup-label-contents")
            .contents()
            .unwrap();
    },
    _initWidgets: function () {
      var a = this,
        r = [];
      S.each(this.options.items, function (n, t) {
        var e,
          o = {};
        return t
          ? "controlgroupLabel" === n
            ? ((e = a.element.find(t)).each(function () {
                var t = S(this);
                t.children(".ui-controlgroup-label-contents").length ||
                  t
                    .contents()
                    .wrapAll(
                      "<span class='ui-controlgroup-label-contents'></span>"
                    );
              }),
              a._addClass(
                e,
                null,
                "ui-widget ui-widget-content ui-state-default"
              ),
              void (r = r.concat(e.get())))
            : void (
                S.fn[n] &&
                ((o = a["_" + n + "Options"]
                  ? a["_" + n + "Options"]("middle")
                  : { classes: {} }),
                a.element.find(t).each(function () {
                  var t = S(this),
                    e = t[n]("instance"),
                    i = S.widget.extend({}, o);
                  if ("button" !== n || !t.parent(".ui-spinner").length) {
                    e || (e = t[n]()[n]("instance")),
                      e && (i.classes = a._resolveClassesValues(i.classes, e)),
                      t[n](i);
                    var s = t[n]("widget");
                    S.data(s[0], "ui-controlgroup-data", e || t[n]("instance")),
                      r.push(s[0]);
                  }
                }))
              )
          : void 0;
      }),
        (this.childWidgets = S(S.unique(r))),
        this._addClass(this.childWidgets, "ui-controlgroup-item");
    },
    _callChildMethod: function (e) {
      this.childWidgets.each(function () {
        var t = S(this).data("ui-controlgroup-data");
        t && t[e] && t[e]();
      });
    },
    _updateCornerClass: function (t, e) {
      var i = this._buildSimpleOptions(e, "label").classes.label;
      this._removeClass(
        t,
        null,
        "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"
      ),
        this._addClass(t, null, i);
    },
    _buildSimpleOptions: function (t, e) {
      var i = "vertical" === this.options.direction,
        s = { classes: {} };
      return (
        (s.classes[e] = {
          middle: "",
          first: "ui-corner-" + (i ? "top" : "left"),
          last: "ui-corner-" + (i ? "bottom" : "right"),
          only: "ui-corner-all",
        }[t]),
        s
      );
    },
    _spinnerOptions: function (t) {
      var e = this._buildSimpleOptions(t, "ui-spinner");
      return (
        (e.classes["ui-spinner-up"] = ""),
        (e.classes["ui-spinner-down"] = ""),
        e
      );
    },
    _buttonOptions: function (t) {
      return this._buildSimpleOptions(t, "ui-button");
    },
    _checkboxradioOptions: function (t) {
      return this._buildSimpleOptions(t, "ui-checkboxradio-label");
    },
    _selectmenuOptions: function (t) {
      var e = "vertical" === this.options.direction;
      return {
        width: !!e && "auto",
        classes: {
          middle: {
            "ui-selectmenu-button-open": "",
            "ui-selectmenu-button-closed": "",
          },
          first: {
            "ui-selectmenu-button-open": "ui-corner-" + (e ? "top" : "tl"),
            "ui-selectmenu-button-closed": "ui-corner-" + (e ? "top" : "left"),
          },
          last: {
            "ui-selectmenu-button-open": e ? "" : "ui-corner-tr",
            "ui-selectmenu-button-closed":
              "ui-corner-" + (e ? "bottom" : "right"),
          },
          only: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
        }[t],
      };
    },
    _resolveClassesValues: function (i, s) {
      var n = {};
      return (
        S.each(i, function (t) {
          var e = s.options.classes[t] || "";
          (e = S.trim(e.replace(_, ""))),
            (n[t] = (e + " " + i[t]).replace(/\s+/g, " "));
        }),
        n
      );
    },
    _setOption: function (t, e) {
      return (
        "direction" === t &&
          this._removeClass("ui-controlgroup-" + this.options.direction),
        this._super(t, e),
        "disabled" === t
          ? void this._callChildMethod(e ? "disable" : "enable")
          : void this.refresh()
      );
    },
    refresh: function () {
      var n,
        o = this;
      this._addClass(
        "ui-controlgroup ui-controlgroup-" + this.options.direction
      ),
        "horizontal" === this.options.direction &&
          this._addClass(null, "ui-helper-clearfix"),
        this._initWidgets(),
        (n = this.childWidgets),
        this.options.onlyVisible && (n = n.filter(":visible")),
        n.length &&
          (S.each(["first", "last"], function (t, e) {
            var i = n[e]().data("ui-controlgroup-data");
            if (i && o["_" + i.widgetName + "Options"]) {
              var s = o["_" + i.widgetName + "Options"](
                1 === n.length ? "only" : e
              );
              (s.classes = o._resolveClassesValues(s.classes, i)),
                i.element[i.widgetName](s);
            } else o._updateCornerClass(n[e](), e);
          }),
          this._callChildMethod("refresh"));
    },
  }),
    S.widget("ui.checkboxradio", [
      S.ui.formResetMixin,
      {
        version: "1.12.1",
        options: {
          disabled: null,
          label: null,
          icon: !0,
          classes: {
            "ui-checkboxradio-label": "ui-corner-all",
            "ui-checkboxradio-icon": "ui-corner-all",
          },
        },
        _getCreateOptions: function () {
          var t,
            e,
            i = this,
            s = this._super() || {};
          return (
            this._readType(),
            (e = this.element.labels()),
            (this.label = S(e[e.length - 1])),
            this.label.length ||
              S.error("No label found for checkboxradio widget"),
            (this.originalLabel = ""),
            this.label
              .contents()
              .not(this.element[0])
              .each(function () {
                i.originalLabel +=
                  3 === this.nodeType ? S(this).text() : this.outerHTML;
              }),
            this.originalLabel && (s.label = this.originalLabel),
            null != (t = this.element[0].disabled) && (s.disabled = t),
            s
          );
        },
        _create: function () {
          var t = this.element[0].checked;
          this._bindFormResetHandler(),
            null == this.options.disabled &&
              (this.options.disabled = this.element[0].disabled),
            this._setOption("disabled", this.options.disabled),
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"),
            this._addClass(
              this.label,
              "ui-checkboxradio-label",
              "ui-button ui-widget"
            ),
            "radio" === this.type &&
              this._addClass(this.label, "ui-checkboxradio-radio-label"),
            this.options.label && this.options.label !== this.originalLabel
              ? this._updateLabel()
              : this.originalLabel && (this.options.label = this.originalLabel),
            this._enhance(),
            t &&
              (this._addClass(
                this.label,
                "ui-checkboxradio-checked",
                "ui-state-active"
              ),
              this.icon && this._addClass(this.icon, null, "ui-state-hover")),
            this._on({
              change: "_toggleClasses",
              focus: function () {
                this._addClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus"
                );
              },
              blur: function () {
                this._removeClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus"
                );
              },
            });
        },
        _readType: function () {
          var t = this.element[0].nodeName.toLowerCase();
          (this.type = this.element[0].type),
            ("input" === t && /radio|checkbox/.test(this.type)) ||
              S.error(
                "Can't create checkboxradio on element.nodeName=" +
                  t +
                  " and element.type=" +
                  this.type
              );
        },
        _enhance: function () {
          this._updateIcon(this.element[0].checked);
        },
        widget: function () {
          return this.label;
        },
        _getRadioGroup: function () {
          var t = this.element[0].name,
            e = "input[name='" + S.ui.escapeSelector(t) + "']";
          return t
            ? (this.form.length
                ? S(this.form[0].elements).filter(e)
                : S(e).filter(function () {
                    return 0 === S(this).form().length;
                  })
              ).not(this.element)
            : S([]);
        },
        _toggleClasses: function () {
          var t = this.element[0].checked;
          this._toggleClass(
            this.label,
            "ui-checkboxradio-checked",
            "ui-state-active",
            t
          ),
            this.options.icon &&
              "checkbox" === this.type &&
              this._toggleClass(
                this.icon,
                null,
                "ui-icon-check ui-state-checked",
                t
              )._toggleClass(this.icon, null, "ui-icon-blank", !t),
            "radio" === this.type &&
              this._getRadioGroup().each(function () {
                var t = S(this).checkboxradio("instance");
                t &&
                  t._removeClass(
                    t.label,
                    "ui-checkboxradio-checked",
                    "ui-state-active"
                  );
              });
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.icon && (this.icon.remove(), this.iconSpace.remove());
        },
        _setOption: function (t, e) {
          return "label" !== t || e
            ? (this._super(t, e),
              "disabled" === t
                ? (this._toggleClass(this.label, null, "ui-state-disabled", e),
                  void (this.element[0].disabled = e))
                : void this.refresh())
            : void 0;
        },
        _updateIcon: function (t) {
          var e = "ui-icon ui-icon-background ";
          this.options.icon
            ? (this.icon ||
                ((this.icon = S("<span>")),
                (this.iconSpace = S("<span> </span>")),
                this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")),
              "checkbox" === this.type
                ? ((e += t
                    ? "ui-icon-check ui-state-checked"
                    : "ui-icon-blank"),
                  this._removeClass(
                    this.icon,
                    null,
                    t ? "ui-icon-blank" : "ui-icon-check"
                  ))
                : (e += "ui-icon-blank"),
              this._addClass(this.icon, "ui-checkboxradio-icon", e),
              t ||
                this._removeClass(
                  this.icon,
                  null,
                  "ui-icon-check ui-state-checked"
                ),
              this.icon.prependTo(this.label).after(this.iconSpace))
            : void 0 !== this.icon &&
              (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
        },
        _updateLabel: function () {
          var t = this.label.contents().not(this.element[0]);
          this.icon && (t = t.not(this.icon[0])),
            this.iconSpace && (t = t.not(this.iconSpace[0])),
            t.remove(),
            this.label.append(this.options.label);
        },
        refresh: function () {
          var t = this.element[0].checked,
            e = this.element[0].disabled;
          this._updateIcon(t),
            this._toggleClass(
              this.label,
              "ui-checkboxradio-checked",
              "ui-state-active",
              t
            ),
            null !== this.options.label && this._updateLabel(),
            e !== this.options.disabled && this._setOptions({ disabled: e });
        },
      },
    ]),
    S.ui.checkboxradio,
    S.widget("ui.button", {
      version: "1.12.1",
      defaultElement: "<button>",
      options: {
        classes: { "ui-button": "ui-corner-all" },
        disabled: null,
        icon: null,
        iconPosition: "beginning",
        label: null,
        showLabel: !0,
      },
      _getCreateOptions: function () {
        var t,
          e = this._super() || {};
        return (
          (this.isInput = this.element.is("input")),
          null != (t = this.element[0].disabled) && (e.disabled = t),
          (this.originalLabel = this.isInput
            ? this.element.val()
            : this.element.html()),
          this.originalLabel && (e.label = this.originalLabel),
          e
        );
      },
      _create: function () {
        !this.option.showLabel & !this.options.icon &&
          (this.options.showLabel = !0),
          null == this.options.disabled &&
            (this.options.disabled = this.element[0].disabled || !1),
          (this.hasTitle = !!this.element.attr("title")),
          this.options.label &&
            this.options.label !== this.originalLabel &&
            (this.isInput
              ? this.element.val(this.options.label)
              : this.element.html(this.options.label)),
          this._addClass("ui-button", "ui-widget"),
          this._setOption("disabled", this.options.disabled),
          this._enhance(),
          this.element.is("a") &&
            this._on({
              keyup: function (t) {
                t.keyCode === S.ui.keyCode.SPACE &&
                  (t.preventDefault(),
                  this.element[0].click
                    ? this.element[0].click()
                    : this.element.trigger("click"));
              },
            });
      },
      _enhance: function () {
        this.element.is("button") || this.element.attr("role", "button"),
          this.options.icon &&
            (this._updateIcon("icon", this.options.icon),
            this._updateTooltip());
      },
      _updateTooltip: function () {
        (this.title = this.element.attr("title")),
          this.options.showLabel ||
            this.title ||
            this.element.attr("title", this.options.label);
      },
      _updateIcon: function (t, e) {
        var i = "iconPosition" !== t,
          s = i ? this.options.iconPosition : e,
          n = "top" === s || "bottom" === s;
        this.icon
          ? i && this._removeClass(this.icon, null, this.options.icon)
          : ((this.icon = S("<span>")),
            this._addClass(this.icon, "ui-button-icon", "ui-icon"),
            this.options.showLabel || this._addClass("ui-button-icon-only")),
          i && this._addClass(this.icon, null, e),
          this._attachIcon(s),
          n
            ? (this._addClass(this.icon, null, "ui-widget-icon-block"),
              this.iconSpace && this.iconSpace.remove())
            : (this.iconSpace ||
                ((this.iconSpace = S("<span> </span>")),
                this._addClass(this.iconSpace, "ui-button-icon-space")),
              this._removeClass(this.icon, null, "ui-wiget-icon-block"),
              this._attachIconSpace(s));
      },
      _destroy: function () {
        this.element.removeAttr("role"),
          this.icon && this.icon.remove(),
          this.iconSpace && this.iconSpace.remove(),
          this.hasTitle || this.element.removeAttr("title");
      },
      _attachIconSpace: function (t) {
        this.icon[/^(?:end|bottom)/.test(t) ? "before" : "after"](
          this.iconSpace
        );
      },
      _attachIcon: function (t) {
        this.element[/^(?:end|bottom)/.test(t) ? "append" : "prepend"](
          this.icon
        );
      },
      _setOptions: function (t) {
        var e = void 0 === t.showLabel ? this.options.showLabel : t.showLabel,
          i = void 0 === t.icon ? this.options.icon : t.icon;
        e || i || (t.showLabel = !0), this._super(t);
      },
      _setOption: function (t, e) {
        "icon" === t &&
          (e
            ? this._updateIcon(t, e)
            : this.icon &&
              (this.icon.remove(), this.iconSpace && this.iconSpace.remove())),
          "iconPosition" === t && this._updateIcon(t, e),
          "showLabel" === t &&
            (this._toggleClass("ui-button-icon-only", null, !e),
            this._updateTooltip()),
          "label" === t &&
            (this.isInput
              ? this.element.val(e)
              : (this.element.html(e),
                this.icon &&
                  (this._attachIcon(this.options.iconPosition),
                  this._attachIconSpace(this.options.iconPosition)))),
          this._super(t, e),
          "disabled" === t &&
            (this._toggleClass(null, "ui-state-disabled", e),
            (this.element[0].disabled = e) && this.element.blur());
      },
      refresh: function () {
        var t = this.element.is("input, button")
          ? this.element[0].disabled
          : this.element.hasClass("ui-button-disabled");
        t !== this.options.disabled && this._setOptions({ disabled: t }),
          this._updateTooltip();
      },
    }),
    !1 !== S.uiBackCompat &&
      (S.widget("ui.button", S.ui.button, {
        options: { text: !0, icons: { primary: null, secondary: null } },
        _create: function () {
          this.options.showLabel &&
            !this.options.text &&
            (this.options.showLabel = this.options.text),
            !this.options.showLabel &&
              this.options.text &&
              (this.options.text = this.options.showLabel),
            this.options.icon ||
            (!this.options.icons.primary && !this.options.icons.secondary)
              ? this.options.icon &&
                (this.options.icons.primary = this.options.icon)
              : this.options.icons.primary
              ? (this.options.icon = this.options.icons.primary)
              : ((this.options.icon = this.options.icons.secondary),
                (this.options.iconPosition = "end")),
            this._super();
        },
        _setOption: function (t, e) {
          return "text" === t
            ? void this._super("showLabel", e)
            : ("showLabel" === t && (this.options.text = e),
              "icon" === t && (this.options.icons.primary = e),
              "icons" === t &&
                (e.primary
                  ? (this._super("icon", e.primary),
                    this._super("iconPosition", "beginning"))
                  : e.secondary &&
                    (this._super("icon", e.secondary),
                    this._super("iconPosition", "end"))),
              void this._superApply(arguments));
        },
      }),
      (S.fn.button =
        ((m = S.fn.button),
        function () {
          return !this.length ||
            (this.length && "INPUT" !== this[0].tagName) ||
            (this.length &&
              "INPUT" === this[0].tagName &&
              "checkbox" !== this.attr("type") &&
              "radio" !== this.attr("type"))
            ? m.apply(this, arguments)
            : (S.ui.checkboxradio || S.error("Checkboxradio widget missing"),
              0 === arguments.length
                ? this.checkboxradio({ icon: !1 })
                : this.checkboxradio.apply(this, arguments));
        })),
      (S.fn.buttonset = function () {
        return (
          S.ui.controlgroup || S.error("Controlgroup widget missing"),
          "option" === arguments[0] && "items" === arguments[1] && arguments[2]
            ? this.controlgroup.apply(this, [
                arguments[0],
                "items.button",
                arguments[2],
              ])
            : "option" === arguments[0] && "items" === arguments[1]
            ? this.controlgroup.apply(this, [arguments[0], "items.button"])
            : ("object" == typeof arguments[0] &&
                arguments[0].items &&
                (arguments[0].items = { button: arguments[0].items }),
              this.controlgroup.apply(this, arguments))
        );
      })),
    S.ui.button,
    S.extend(S.ui, { datepicker: { version: "1.12.1" } }),
    S.extend(t.prototype, {
      markerClassName: "hasDatepicker",
      maxRows: 4,
      _widgetDatepicker: function () {
        return this.dpDiv;
      },
      setDefaults: function (t) {
        return u(this._defaults, t || {}), this;
      },
      _attachDatepicker: function (t, e) {
        var i, s, n;
        (s = "div" === (i = t.nodeName.toLowerCase()) || "span" === i),
          t.id || ((this.uuid += 1), (t.id = "dp" + this.uuid)),
          ((n = this._newInst(S(t), s)).settings = S.extend({}, e || {})),
          "input" === i
            ? this._connectDatepicker(t, n)
            : s && this._inlineDatepicker(t, n);
      },
      _newInst: function (t, e) {
        return {
          id: t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
          input: t,
          selectedDay: 0,
          selectedMonth: 0,
          selectedYear: 0,
          drawMonth: 0,
          drawYear: 0,
          inline: e,
          dpDiv: e
            ? i(
                S(
                  "<div class='" +
                    this._inlineClass +
                    " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
                )
              )
            : this.dpDiv,
        };
      },
      _connectDatepicker: function (t, e) {
        var i = S(t);
        (e.append = S([])),
          (e.trigger = S([])),
          i.hasClass(this.markerClassName) ||
            (this._attachments(i, e),
            i
              .addClass(this.markerClassName)
              .on("keydown", this._doKeyDown)
              .on("keypress", this._doKeyPress)
              .on("keyup", this._doKeyUp),
            this._autoSize(e),
            S.data(t, "datepicker", e),
            e.settings.disabled && this._disableDatepicker(t));
      },
      _attachments: function (t, e) {
        var i,
          s,
          n,
          o = this._get(e, "appendText"),
          a = this._get(e, "isRTL");
        e.append && e.append.remove(),
          o &&
            ((e.append = S(
              "<span class='" + this._appendClass + "'>" + o + "</span>"
            )),
            t[a ? "before" : "after"](e.append)),
          t.off("focus", this._showDatepicker),
          e.trigger && e.trigger.remove(),
          ("focus" === (i = this._get(e, "showOn")) || "both" === i) &&
            t.on("focus", this._showDatepicker),
          ("button" === i || "both" === i) &&
            ((s = this._get(e, "buttonText")),
            (n = this._get(e, "buttonImage")),
            (e.trigger = S(
              this._get(e, "buttonImageOnly")
                ? S("<img/>")
                    .addClass(this._triggerClass)
                    .attr({ src: n, alt: s, title: s })
                : S("<button type='button'></button>")
                    .addClass(this._triggerClass)
                    .html(
                      n ? S("<img/>").attr({ src: n, alt: s, title: s }) : s
                    )
            )),
            t[a ? "before" : "after"](e.trigger),
            e.trigger.on("click", function () {
              return (
                S.datepicker._datepickerShowing &&
                S.datepicker._lastInput === t[0]
                  ? S.datepicker._hideDatepicker()
                  : (S.datepicker._datepickerShowing &&
                      S.datepicker._lastInput !== t[0] &&
                      S.datepicker._hideDatepicker(),
                    S.datepicker._showDatepicker(t[0])),
                !1
              );
            }));
      },
      _autoSize: function (t) {
        if (this._get(t, "autoSize") && !t.inline) {
          var e,
            i,
            s,
            n,
            o = new Date(2009, 11, 20),
            a = this._get(t, "dateFormat");
          a.match(/[DM]/) &&
            ((e = function (t) {
              for (n = s = i = 0; t.length > n; n++)
                t[n].length > i && ((i = t[n].length), (s = n));
              return s;
            }),
            o.setMonth(
              e(this._get(t, a.match(/MM/) ? "monthNames" : "monthNamesShort"))
            ),
            o.setDate(
              e(this._get(t, a.match(/DD/) ? "dayNames" : "dayNamesShort")) +
                20 -
                o.getDay()
            )),
            t.input.attr("size", this._formatDate(t, o).length);
        }
      },
      _inlineDatepicker: function (t, e) {
        var i = S(t);
        i.hasClass(this.markerClassName) ||
          (i.addClass(this.markerClassName).append(e.dpDiv),
          S.data(t, "datepicker", e),
          this._setDate(e, this._getDefaultDate(e), !0),
          this._updateDatepicker(e),
          this._updateAlternate(e),
          e.settings.disabled && this._disableDatepicker(t),
          e.dpDiv.css("display", "block"));
      },
      _dialogDatepicker: function (t, e, i, s, n) {
        var o,
          a,
          r,
          l,
          h,
          c = this._dialogInst;
        return (
          c ||
            ((this.uuid += 1),
            (o = "dp" + this.uuid),
            (this._dialogInput = S(
              "<input type='text' id='" +
                o +
                "' style='position: absolute; top: -100px; width: 0px;'/>"
            )),
            this._dialogInput.on("keydown", this._doKeyDown),
            S("body").append(this._dialogInput),
            ((c = this._dialogInst =
              this._newInst(this._dialogInput, !1)).settings = {}),
            S.data(this._dialogInput[0], "datepicker", c)),
          u(c.settings, s || {}),
          (e = e && e.constructor === Date ? this._formatDate(c, e) : e),
          this._dialogInput.val(e),
          (this._pos = n ? (n.length ? n : [n.pageX, n.pageY]) : null),
          this._pos ||
            ((a = document.documentElement.clientWidth),
            (r = document.documentElement.clientHeight),
            (l =
              document.documentElement.scrollLeft || document.body.scrollLeft),
            (h = document.documentElement.scrollTop || document.body.scrollTop),
            (this._pos = [a / 2 - 100 + l, r / 2 - 150 + h])),
          this._dialogInput
            .css("left", this._pos[0] + 20 + "px")
            .css("top", this._pos[1] + "px"),
          (c.settings.onSelect = i),
          (this._inDialog = !0),
          this.dpDiv.addClass(this._dialogClass),
          this._showDatepicker(this._dialogInput[0]),
          S.blockUI && S.blockUI(this.dpDiv),
          S.data(this._dialogInput[0], "datepicker", c),
          this
        );
      },
      _destroyDatepicker: function (t) {
        var e,
          i = S(t),
          s = S.data(t, "datepicker");
        i.hasClass(this.markerClassName) &&
          ((e = t.nodeName.toLowerCase()),
          S.removeData(t, "datepicker"),
          "input" === e
            ? (s.append.remove(),
              s.trigger.remove(),
              i
                .removeClass(this.markerClassName)
                .off("focus", this._showDatepicker)
                .off("keydown", this._doKeyDown)
                .off("keypress", this._doKeyPress)
                .off("keyup", this._doKeyUp))
            : ("div" === e || "span" === e) &&
              i.removeClass(this.markerClassName).empty(),
          v === s && (v = null));
      },
      _enableDatepicker: function (e) {
        var t,
          i,
          s = S(e),
          n = S.data(e, "datepicker");
        s.hasClass(this.markerClassName) &&
          ("input" === (t = e.nodeName.toLowerCase())
            ? ((e.disabled = !1),
              n.trigger
                .filter("button")
                .each(function () {
                  this.disabled = !1;
                })
                .end()
                .filter("img")
                .css({ opacity: "1.0", cursor: "" }))
            : ("div" === t || "span" === t) &&
              ((i = s.children("." + this._inlineClass))
                .children()
                .removeClass("ui-state-disabled"),
              i
                .find("select.ui-datepicker-month, select.ui-datepicker-year")
                .prop("disabled", !1)),
          (this._disabledInputs = S.map(this._disabledInputs, function (t) {
            return t === e ? null : t;
          })));
      },
      _disableDatepicker: function (e) {
        var t,
          i,
          s = S(e),
          n = S.data(e, "datepicker");
        s.hasClass(this.markerClassName) &&
          ("input" === (t = e.nodeName.toLowerCase())
            ? ((e.disabled = !0),
              n.trigger
                .filter("button")
                .each(function () {
                  this.disabled = !0;
                })
                .end()
                .filter("img")
                .css({ opacity: "0.5", cursor: "default" }))
            : ("div" === t || "span" === t) &&
              ((i = s.children("." + this._inlineClass))
                .children()
                .addClass("ui-state-disabled"),
              i
                .find("select.ui-datepicker-month, select.ui-datepicker-year")
                .prop("disabled", !0)),
          (this._disabledInputs = S.map(this._disabledInputs, function (t) {
            return t === e ? null : t;
          })),
          (this._disabledInputs[this._disabledInputs.length] = e));
      },
      _isDisabledDatepicker: function (t) {
        if (!t) return !1;
        for (var e = 0; this._disabledInputs.length > e; e++)
          if (this._disabledInputs[e] === t) return !0;
        return !1;
      },
      _getInst: function (t) {
        try {
          return S.data(t, "datepicker");
        } catch (t) {
          throw "Missing instance data for this datepicker";
        }
      },
      _optionDatepicker: function (t, e, i) {
        var s,
          n,
          o,
          a,
          r = this._getInst(t);
        return 2 === arguments.length && "string" == typeof e
          ? "defaults" === e
            ? S.extend({}, S.datepicker._defaults)
            : r
            ? "all" === e
              ? S.extend({}, r.settings)
              : this._get(r, e)
            : null
          : ((s = e || {}),
            "string" == typeof e && ((s = {})[e] = i),
            void (
              r &&
              (this._curInst === r && this._hideDatepicker(),
              (n = this._getDateDatepicker(t, !0)),
              (o = this._getMinMaxDate(r, "min")),
              (a = this._getMinMaxDate(r, "max")),
              u(r.settings, s),
              null !== o &&
                void 0 !== s.dateFormat &&
                void 0 === s.minDate &&
                (r.settings.minDate = this._formatDate(r, o)),
              null !== a &&
                void 0 !== s.dateFormat &&
                void 0 === s.maxDate &&
                (r.settings.maxDate = this._formatDate(r, a)),
              "disabled" in s &&
                (s.disabled
                  ? this._disableDatepicker(t)
                  : this._enableDatepicker(t)),
              this._attachments(S(t), r),
              this._autoSize(r),
              this._setDate(r, n),
              this._updateAlternate(r),
              this._updateDatepicker(r))
            ));
      },
      _changeDatepicker: function (t, e, i) {
        this._optionDatepicker(t, e, i);
      },
      _refreshDatepicker: function (t) {
        var e = this._getInst(t);
        e && this._updateDatepicker(e);
      },
      _setDateDatepicker: function (t, e) {
        var i = this._getInst(t);
        i &&
          (this._setDate(i, e),
          this._updateDatepicker(i),
          this._updateAlternate(i));
      },
      _getDateDatepicker: function (t, e) {
        var i = this._getInst(t);
        return (
          i && !i.inline && this._setDateFromField(i, e),
          i ? this._getDate(i) : null
        );
      },
      _doKeyDown: function (t) {
        var e,
          i,
          s,
          n = S.datepicker._getInst(t.target),
          o = !0,
          a = n.dpDiv.is(".ui-datepicker-rtl");
        if (((n._keyEvent = !0), S.datepicker._datepickerShowing))
          switch (t.keyCode) {
            case 9:
              S.datepicker._hideDatepicker(), (o = !1);
              break;
            case 13:
              return (
                (s = S(
                  "td." +
                    S.datepicker._dayOverClass +
                    ":not(." +
                    S.datepicker._currentClass +
                    ")",
                  n.dpDiv
                ))[0] &&
                  S.datepicker._selectDay(
                    t.target,
                    n.selectedMonth,
                    n.selectedYear,
                    s[0]
                  ),
                (e = S.datepicker._get(n, "onSelect"))
                  ? ((i = S.datepicker._formatDate(n)),
                    e.apply(n.input ? n.input[0] : null, [i, n]))
                  : S.datepicker._hideDatepicker(),
                !1
              );
            case 27:
              S.datepicker._hideDatepicker();
              break;
            case 33:
              S.datepicker._adjustDate(
                t.target,
                t.ctrlKey
                  ? -S.datepicker._get(n, "stepBigMonths")
                  : -S.datepicker._get(n, "stepMonths"),
                "M"
              );
              break;
            case 34:
              S.datepicker._adjustDate(
                t.target,
                t.ctrlKey
                  ? +S.datepicker._get(n, "stepBigMonths")
                  : +S.datepicker._get(n, "stepMonths"),
                "M"
              );
              break;
            case 35:
              (t.ctrlKey || t.metaKey) && S.datepicker._clearDate(t.target),
                (o = t.ctrlKey || t.metaKey);
              break;
            case 36:
              (t.ctrlKey || t.metaKey) && S.datepicker._gotoToday(t.target),
                (o = t.ctrlKey || t.metaKey);
              break;
            case 37:
              (t.ctrlKey || t.metaKey) &&
                S.datepicker._adjustDate(t.target, a ? 1 : -1, "D"),
                (o = t.ctrlKey || t.metaKey),
                t.originalEvent.altKey &&
                  S.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? -S.datepicker._get(n, "stepBigMonths")
                      : -S.datepicker._get(n, "stepMonths"),
                    "M"
                  );
              break;
            case 38:
              (t.ctrlKey || t.metaKey) &&
                S.datepicker._adjustDate(t.target, -7, "D"),
                (o = t.ctrlKey || t.metaKey);
              break;
            case 39:
              (t.ctrlKey || t.metaKey) &&
                S.datepicker._adjustDate(t.target, a ? -1 : 1, "D"),
                (o = t.ctrlKey || t.metaKey),
                t.originalEvent.altKey &&
                  S.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? +S.datepicker._get(n, "stepBigMonths")
                      : +S.datepicker._get(n, "stepMonths"),
                    "M"
                  );
              break;
            case 40:
              (t.ctrlKey || t.metaKey) &&
                S.datepicker._adjustDate(t.target, 7, "D"),
                (o = t.ctrlKey || t.metaKey);
              break;
            default:
              o = !1;
          }
        else
          36 === t.keyCode && t.ctrlKey
            ? S.datepicker._showDatepicker(this)
            : (o = !1);
        o && (t.preventDefault(), t.stopPropagation());
      },
      _doKeyPress: function (t) {
        var e,
          i,
          s = S.datepicker._getInst(t.target);
        return S.datepicker._get(s, "constrainInput")
          ? ((e = S.datepicker._possibleChars(
              S.datepicker._get(s, "dateFormat")
            )),
            (i = String.fromCharCode(
              null == t.charCode ? t.keyCode : t.charCode
            )),
            t.ctrlKey || t.metaKey || i < " " || !e || -1 < e.indexOf(i))
          : void 0;
      },
      _doKeyUp: function (t) {
        var e = S.datepicker._getInst(t.target);
        if (e.input.val() !== e.lastVal)
          try {
            S.datepicker.parseDate(
              S.datepicker._get(e, "dateFormat"),
              e.input ? e.input.val() : null,
              S.datepicker._getFormatConfig(e)
            ) &&
              (S.datepicker._setDateFromField(e),
              S.datepicker._updateAlternate(e),
              S.datepicker._updateDatepicker(e));
          } catch (t) {}
        return !0;
      },
      _showDatepicker: function (t) {
        var e, i, s, n, o, a, r;
        ("input" !== (t = t.target || t).nodeName.toLowerCase() &&
          (t = S("input", t.parentNode)[0]),
        S.datepicker._isDisabledDatepicker(t) ||
          S.datepicker._lastInput === t) ||
          ((e = S.datepicker._getInst(t)),
          S.datepicker._curInst &&
            S.datepicker._curInst !== e &&
            (S.datepicker._curInst.dpDiv.stop(!0, !0),
            e &&
              S.datepicker._datepickerShowing &&
              S.datepicker._hideDatepicker(S.datepicker._curInst.input[0])),
          !1 !==
            (s = (i = S.datepicker._get(e, "beforeShow"))
              ? i.apply(t, [t, e])
              : {}) &&
            (u(e.settings, s),
            (e.lastVal = null),
            (S.datepicker._lastInput = t),
            S.datepicker._setDateFromField(e),
            S.datepicker._inDialog && (t.value = ""),
            S.datepicker._pos ||
              ((S.datepicker._pos = S.datepicker._findPos(t)),
              (S.datepicker._pos[1] += t.offsetHeight)),
            (n = !1),
            S(t)
              .parents()
              .each(function () {
                return !(n |= "fixed" === S(this).css("position"));
              }),
            (o = { left: S.datepicker._pos[0], top: S.datepicker._pos[1] }),
            (S.datepicker._pos = null),
            e.dpDiv.empty(),
            e.dpDiv.css({
              position: "absolute",
              display: "block",
              top: "-1000px",
            }),
            S.datepicker._updateDatepicker(e),
            (o = S.datepicker._checkOffset(e, o, n)),
            e.dpDiv.css({
              position:
                S.datepicker._inDialog && S.blockUI
                  ? "static"
                  : n
                  ? "fixed"
                  : "absolute",
              display: "none",
              left: o.left + "px",
              top: o.top + "px",
            }),
            e.inline ||
              ((a = S.datepicker._get(e, "showAnim")),
              (r = S.datepicker._get(e, "duration")),
              e.dpDiv.css(
                "z-index",
                (function (t) {
                  for (var e, i; t.length && t[0] !== document; ) {
                    if (
                      ("absolute" === (e = t.css("position")) ||
                        "relative" === e ||
                        "fixed" === e) &&
                      ((i = parseInt(t.css("zIndex"), 10)),
                      !isNaN(i) && 0 !== i)
                    )
                      return i;
                    t = t.parent();
                  }
                  return 0;
                })(S(t)) + 1
              ),
              (S.datepicker._datepickerShowing = !0),
              S.effects && S.effects.effect[a]
                ? e.dpDiv.show(a, S.datepicker._get(e, "showOptions"), r)
                : e.dpDiv[a || "show"](a ? r : null),
              S.datepicker._shouldFocusInput(e) && e.input.trigger("focus"),
              (S.datepicker._curInst = e))));
      },
      _updateDatepicker: function (t) {
        (this.maxRows = 4),
          (v = t).dpDiv.empty().append(this._generateHTML(t)),
          this._attachHandlers(t);
        var e,
          i = this._getNumberOfMonths(t),
          s = i[1],
          n = t.dpDiv.find("." + this._dayOverClass + " a");
        0 < n.length && o.apply(n.get(0)),
          t.dpDiv
            .removeClass(
              "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"
            )
            .width(""),
          1 < s &&
            t.dpDiv
              .addClass("ui-datepicker-multi-" + s)
              .css("width", 17 * s + "em"),
          t.dpDiv[(1 !== i[0] || 1 !== i[1] ? "add" : "remove") + "Class"](
            "ui-datepicker-multi"
          ),
          t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"](
            "ui-datepicker-rtl"
          ),
          t === S.datepicker._curInst &&
            S.datepicker._datepickerShowing &&
            S.datepicker._shouldFocusInput(t) &&
            t.input.trigger("focus"),
          t.yearshtml &&
            ((e = t.yearshtml),
            setTimeout(function () {
              e === t.yearshtml &&
                t.yearshtml &&
                t.dpDiv
                  .find("select.ui-datepicker-year:first")
                  .replaceWith(t.yearshtml),
                (e = t.yearshtml = null);
            }, 0));
      },
      _shouldFocusInput: function (t) {
        return (
          t.input &&
          t.input.is(":visible") &&
          !t.input.is(":disabled") &&
          !t.input.is(":focus")
        );
      },
      _checkOffset: function (t, e, i) {
        var s = t.dpDiv.outerWidth(),
          n = t.dpDiv.outerHeight(),
          o = t.input ? t.input.outerWidth() : 0,
          a = t.input ? t.input.outerHeight() : 0,
          r =
            document.documentElement.clientWidth +
            (i ? 0 : S(document).scrollLeft()),
          l =
            document.documentElement.clientHeight +
            (i ? 0 : S(document).scrollTop());
        return (
          (e.left -= this._get(t, "isRTL") ? s - o : 0),
          (e.left -=
            i && e.left === t.input.offset().left
              ? S(document).scrollLeft()
              : 0),
          (e.top -=
            i && e.top === t.input.offset().top + a
              ? S(document).scrollTop()
              : 0),
          (e.left -= Math.min(
            e.left,
            e.left + s > r && s < r ? Math.abs(e.left + s - r) : 0
          )),
          (e.top -= Math.min(
            e.top,
            e.top + n > l && n < l ? Math.abs(n + a) : 0
          )),
          e
        );
      },
      _findPos: function (t) {
        for (
          var e, i = this._getInst(t), s = this._get(i, "isRTL");
          t &&
          ("hidden" === t.type || 1 !== t.nodeType || S.expr.filters.hidden(t));

        )
          t = t[s ? "previousSibling" : "nextSibling"];
        return [(e = S(t).offset()).left, e.top];
      },
      _hideDatepicker: function (t) {
        var e,
          i,
          s,
          n,
          o = this._curInst;
        !o ||
          (t && o !== S.data(t, "datepicker")) ||
          (this._datepickerShowing &&
            ((e = this._get(o, "showAnim")),
            (i = this._get(o, "duration")),
            (s = function () {
              S.datepicker._tidyDialog(o);
            }),
            S.effects && (S.effects.effect[e] || S.effects[e])
              ? o.dpDiv.hide(e, S.datepicker._get(o, "showOptions"), i, s)
              : o.dpDiv[
                  "slideDown" === e
                    ? "slideUp"
                    : "fadeIn" === e
                    ? "fadeOut"
                    : "hide"
                ](e ? i : null, s),
            e || s(),
            (this._datepickerShowing = !1),
            (n = this._get(o, "onClose")) &&
              n.apply(o.input ? o.input[0] : null, [
                o.input ? o.input.val() : "",
                o,
              ]),
            (this._lastInput = null),
            this._inDialog &&
              (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px",
              }),
              S.blockUI && (S.unblockUI(), S("body").append(this.dpDiv))),
            (this._inDialog = !1)));
      },
      _tidyDialog: function (t) {
        t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
      },
      _checkExternalClick: function (t) {
        if (S.datepicker._curInst) {
          var e = S(t.target),
            i = S.datepicker._getInst(e[0]);
          ((e[0].id !== S.datepicker._mainDivId &&
            0 === e.parents("#" + S.datepicker._mainDivId).length &&
            !e.hasClass(S.datepicker.markerClassName) &&
            !e.closest("." + S.datepicker._triggerClass).length &&
            S.datepicker._datepickerShowing &&
            (!S.datepicker._inDialog || !S.blockUI)) ||
            (e.hasClass(S.datepicker.markerClassName) &&
              S.datepicker._curInst !== i)) &&
            S.datepicker._hideDatepicker();
        }
      },
      _adjustDate: function (t, e, i) {
        var s = S(t),
          n = this._getInst(s[0]);
        this._isDisabledDatepicker(s[0]) ||
          (this._adjustInstDate(
            n,
            e + ("M" === i ? this._get(n, "showCurrentAtPos") : 0),
            i
          ),
          this._updateDatepicker(n));
      },
      _gotoToday: function (t) {
        var e,
          i = S(t),
          s = this._getInst(i[0]);
        this._get(s, "gotoCurrent") && s.currentDay
          ? ((s.selectedDay = s.currentDay),
            (s.drawMonth = s.selectedMonth = s.currentMonth),
            (s.drawYear = s.selectedYear = s.currentYear))
          : ((e = new Date()),
            (s.selectedDay = e.getDate()),
            (s.drawMonth = s.selectedMonth = e.getMonth()),
            (s.drawYear = s.selectedYear = e.getFullYear())),
          this._notifyChange(s),
          this._adjustDate(i);
      },
      _selectMonthYear: function (t, e, i) {
        var s = S(t),
          n = this._getInst(s[0]);
        (n["selected" + ("M" === i ? "Month" : "Year")] = n[
          "draw" + ("M" === i ? "Month" : "Year")
        ] =
          parseInt(e.options[e.selectedIndex].value, 10)),
          this._notifyChange(n),
          this._adjustDate(s);
      },
      _selectDay: function (t, e, i, s) {
        var n,
          o = S(t);
        S(s).hasClass(this._unselectableClass) ||
          this._isDisabledDatepicker(o[0]) ||
          (((n = this._getInst(o[0])).selectedDay = n.currentDay =
            S("a", s).html()),
          (n.selectedMonth = n.currentMonth = e),
          (n.selectedYear = n.currentYear = i),
          this._selectDate(
            t,
            this._formatDate(n, n.currentDay, n.currentMonth, n.currentYear)
          ));
      },
      _clearDate: function (t) {
        var e = S(t);
        this._selectDate(e, "");
      },
      _selectDate: function (t, e) {
        var i,
          s = S(t),
          n = this._getInst(s[0]);
        (e = null != e ? e : this._formatDate(n)),
          n.input && n.input.val(e),
          this._updateAlternate(n),
          (i = this._get(n, "onSelect"))
            ? i.apply(n.input ? n.input[0] : null, [e, n])
            : n.input && n.input.trigger("change"),
          n.inline
            ? this._updateDatepicker(n)
            : (this._hideDatepicker(),
              (this._lastInput = n.input[0]),
              "object" != typeof n.input[0] && n.input.trigger("focus"),
              (this._lastInput = null));
      },
      _updateAlternate: function (t) {
        var e,
          i,
          s,
          n = this._get(t, "altField");
        n &&
          ((e = this._get(t, "altFormat") || this._get(t, "dateFormat")),
          (i = this._getDate(t)),
          (s = this.formatDate(e, i, this._getFormatConfig(t))),
          S(n).val(s));
      },
      noWeekends: function (t) {
        var e = t.getDay();
        return [0 < e && e < 6, ""];
      },
      iso8601Week: function (t) {
        var e,
          i = new Date(t.getTime());
        return (
          i.setDate(i.getDate() + 4 - (i.getDay() || 7)),
          (e = i.getTime()),
          i.setMonth(0),
          i.setDate(1),
          Math.floor(Math.round((e - i) / 864e5) / 7) + 1
        );
      },
      parseDate: function (i, o, t) {
        if (null == i || null == o) throw "Invalid arguments";
        if ("" === (o = "object" == typeof o ? "" + o : o + "")) return null;
        var s,
          e,
          n,
          a,
          r = 0,
          l = (t ? t.shortYearCutoff : null) || this._defaults.shortYearCutoff,
          h =
            "string" != typeof l
              ? l
              : (new Date().getFullYear() % 100) + parseInt(l, 10),
          c = (t ? t.dayNamesShort : null) || this._defaults.dayNamesShort,
          u = (t ? t.dayNames : null) || this._defaults.dayNames,
          d = (t ? t.monthNamesShort : null) || this._defaults.monthNamesShort,
          p = (t ? t.monthNames : null) || this._defaults.monthNames,
          f = -1,
          g = -1,
          m = -1,
          v = -1,
          _ = !1,
          b = function (t) {
            var e = i.length > s + 1 && i.charAt(s + 1) === t;
            return e && s++, e;
          },
          y = function (t) {
            var e = b(t),
              i =
                "@" === t
                  ? 14
                  : "!" === t
                  ? 20
                  : "y" === t && e
                  ? 4
                  : "o" === t
                  ? 3
                  : 2,
              s = RegExp("^\\d{" + ("y" === t ? i : 1) + "," + i + "}"),
              n = o.substring(r).match(s);
            if (!n) throw "Missing number at position " + r;
            return (r += n[0].length), parseInt(n[0], 10);
          },
          w = function (t, e, i) {
            var s = -1,
              n = S.map(b(t) ? i : e, function (t, e) {
                return [[e, t]];
              }).sort(function (t, e) {
                return -(t[1].length - e[1].length);
              });
            if (
              (S.each(n, function (t, e) {
                var i = e[1];
                return o.substr(r, i.length).toLowerCase() === i.toLowerCase()
                  ? ((s = e[0]), (r += i.length), !1)
                  : void 0;
              }),
              -1 !== s)
            )
              return s + 1;
            throw "Unknown name at position " + r;
          },
          x = function () {
            if (o.charAt(r) !== i.charAt(s))
              throw "Unexpected literal at position " + r;
            r++;
          };
        for (s = 0; i.length > s; s++)
          if (_) "'" !== i.charAt(s) || b("'") ? x() : (_ = !1);
          else
            switch (i.charAt(s)) {
              case "d":
                m = y("d");
                break;
              case "D":
                w("D", c, u);
                break;
              case "o":
                v = y("o");
                break;
              case "m":
                g = y("m");
                break;
              case "M":
                g = w("M", d, p);
                break;
              case "y":
                f = y("y");
                break;
              case "@":
                (f = (a = new Date(y("@"))).getFullYear()),
                  (g = a.getMonth() + 1),
                  (m = a.getDate());
                break;
              case "!":
                (f = (a = new Date(
                  (y("!") - this._ticksTo1970) / 1e4
                )).getFullYear()),
                  (g = a.getMonth() + 1),
                  (m = a.getDate());
                break;
              case "'":
                b("'") ? x() : (_ = !0);
                break;
              default:
                x();
            }
        if (o.length > r && ((n = o.substr(r)), !/^\s+/.test(n)))
          throw "Extra/unparsed characters found in date: " + n;
        if (
          (-1 === f
            ? (f = new Date().getFullYear())
            : f < 100 &&
              (f +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (f <= h ? 0 : -100)),
          -1 < v)
        )
          for (g = 1, m = v; !(m <= (e = this._getDaysInMonth(f, g - 1))); )
            g++, (m -= e);
        if (
          (a = this._daylightSavingAdjust(
            new Date(f, g - 1, m)
          )).getFullYear() !== f ||
          a.getMonth() + 1 !== g ||
          a.getDate() !== m
        )
          throw "Invalid date";
        return a;
      },
      ATOM: "yy-mm-dd",
      COOKIE: "D, dd M yy",
      ISO_8601: "yy-mm-dd",
      RFC_822: "D, d M y",
      RFC_850: "DD, dd-M-y",
      RFC_1036: "D, d M y",
      RFC_1123: "D, d M yy",
      RFC_2822: "D, d M yy",
      RSS: "D, d M y",
      TICKS: "!",
      TIMESTAMP: "@",
      W3C: "yy-mm-dd",
      _ticksTo1970:
        864e9 *
        (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
      formatDate: function (i, t, e) {
        if (!t) return "";
        var s,
          n = (e ? e.dayNamesShort : null) || this._defaults.dayNamesShort,
          o = (e ? e.dayNames : null) || this._defaults.dayNames,
          a = (e ? e.monthNamesShort : null) || this._defaults.monthNamesShort,
          r = (e ? e.monthNames : null) || this._defaults.monthNames,
          l = function (t) {
            var e = i.length > s + 1 && i.charAt(s + 1) === t;
            return e && s++, e;
          },
          h = function (t, e, i) {
            var s = "" + e;
            if (l(t)) for (; i > s.length; ) s = "0" + s;
            return s;
          },
          c = function (t, e, i, s) {
            return l(t) ? s[e] : i[e];
          },
          u = "",
          d = !1;
        if (t)
          for (s = 0; i.length > s; s++)
            if (d)
              "'" !== i.charAt(s) || l("'") ? (u += i.charAt(s)) : (d = !1);
            else
              switch (i.charAt(s)) {
                case "d":
                  u += h("d", t.getDate(), 2);
                  break;
                case "D":
                  u += c("D", t.getDay(), n, o);
                  break;
                case "o":
                  u += h(
                    "o",
                    Math.round(
                      (new Date(
                        t.getFullYear(),
                        t.getMonth(),
                        t.getDate()
                      ).getTime() -
                        new Date(t.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  u += h("m", t.getMonth() + 1, 2);
                  break;
                case "M":
                  u += c("M", t.getMonth(), a, r);
                  break;
                case "y":
                  u += l("y")
                    ? t.getFullYear()
                    : (t.getFullYear() % 100 < 10 ? "0" : "") +
                      (t.getFullYear() % 100);
                  break;
                case "@":
                  u += t.getTime();
                  break;
                case "!":
                  u += 1e4 * t.getTime() + this._ticksTo1970;
                  break;
                case "'":
                  l("'") ? (u += "'") : (d = !0);
                  break;
                default:
                  u += i.charAt(s);
              }
        return u;
      },
      _possibleChars: function (i) {
        var s,
          t = "",
          e = !1,
          n = function (t) {
            var e = i.length > s + 1 && i.charAt(s + 1) === t;
            return e && s++, e;
          };
        for (s = 0; i.length > s; s++)
          if (e) "'" !== i.charAt(s) || n("'") ? (t += i.charAt(s)) : (e = !1);
          else
            switch (i.charAt(s)) {
              case "d":
              case "m":
              case "y":
              case "@":
                t += "0123456789";
                break;
              case "D":
              case "M":
                return null;
              case "'":
                n("'") ? (t += "'") : (e = !0);
                break;
              default:
                t += i.charAt(s);
            }
        return t;
      },
      _get: function (t, e) {
        return void 0 !== t.settings[e] ? t.settings[e] : this._defaults[e];
      },
      _setDateFromField: function (t, e) {
        if (t.input.val() !== t.lastVal) {
          var i = this._get(t, "dateFormat"),
            s = (t.lastVal = t.input ? t.input.val() : null),
            n = this._getDefaultDate(t),
            o = n,
            a = this._getFormatConfig(t);
          try {
            o = this.parseDate(i, s, a) || n;
          } catch (t) {
            s = e ? "" : s;
          }
          (t.selectedDay = o.getDate()),
            (t.drawMonth = t.selectedMonth = o.getMonth()),
            (t.drawYear = t.selectedYear = o.getFullYear()),
            (t.currentDay = s ? o.getDate() : 0),
            (t.currentMonth = s ? o.getMonth() : 0),
            (t.currentYear = s ? o.getFullYear() : 0),
            this._adjustInstDate(t);
        }
      },
      _getDefaultDate: function (t) {
        return this._restrictMinMax(
          t,
          this._determineDate(t, this._get(t, "defaultDate"), new Date())
        );
      },
      _determineDate: function (r, t, e) {
        var i,
          s,
          n =
            null == t || "" === t
              ? e
              : "string" == typeof t
              ? (function (t) {
                  try {
                    return S.datepicker.parseDate(
                      S.datepicker._get(r, "dateFormat"),
                      t,
                      S.datepicker._getFormatConfig(r)
                    );
                  } catch (t) {}
                  for (
                    var e =
                        (t.toLowerCase().match(/^c/)
                          ? S.datepicker._getDate(r)
                          : null) || new Date(),
                      i = e.getFullYear(),
                      s = e.getMonth(),
                      n = e.getDate(),
                      o = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                      a = o.exec(t);
                    a;

                  ) {
                    switch (a[2] || "d") {
                      case "d":
                      case "D":
                        n += parseInt(a[1], 10);
                        break;
                      case "w":
                      case "W":
                        n += 7 * parseInt(a[1], 10);
                        break;
                      case "m":
                      case "M":
                        (s += parseInt(a[1], 10)),
                          (n = Math.min(n, S.datepicker._getDaysInMonth(i, s)));
                        break;
                      case "y":
                      case "Y":
                        (i += parseInt(a[1], 10)),
                          (n = Math.min(n, S.datepicker._getDaysInMonth(i, s)));
                    }
                    a = o.exec(t);
                  }
                  return new Date(i, s, n);
                })(t)
              : "number" == typeof t
              ? isNaN(t)
                ? e
                : ((i = t), (s = new Date()).setDate(s.getDate() + i), s)
              : new Date(t.getTime());
        return (
          (n = n && "Invalid Date" == "" + n ? e : n) &&
            (n.setHours(0),
            n.setMinutes(0),
            n.setSeconds(0),
            n.setMilliseconds(0)),
          this._daylightSavingAdjust(n)
        );
      },
      _daylightSavingAdjust: function (t) {
        return t
          ? (t.setHours(12 < t.getHours() ? t.getHours() + 2 : 0), t)
          : null;
      },
      _setDate: function (t, e, i) {
        var s = !e,
          n = t.selectedMonth,
          o = t.selectedYear,
          a = this._restrictMinMax(t, this._determineDate(t, e, new Date()));
        (t.selectedDay = t.currentDay = a.getDate()),
          (t.drawMonth = t.selectedMonth = t.currentMonth = a.getMonth()),
          (t.drawYear = t.selectedYear = t.currentYear = a.getFullYear()),
          (n === t.selectedMonth && o === t.selectedYear) ||
            i ||
            this._notifyChange(t),
          this._adjustInstDate(t),
          t.input && t.input.val(s ? "" : this._formatDate(t));
      },
      _getDate: function (t) {
        return !t.currentYear || (t.input && "" === t.input.val())
          ? null
          : this._daylightSavingAdjust(
              new Date(t.currentYear, t.currentMonth, t.currentDay)
            );
      },
      _attachHandlers: function (t) {
        var e = this._get(t, "stepMonths"),
          i = "#" + t.id.replace(/\\\\/g, "\\");
        t.dpDiv.find("[data-handler]").map(function () {
          var t = {
            prev: function () {
              S.datepicker._adjustDate(i, -e, "M");
            },
            next: function () {
              S.datepicker._adjustDate(i, +e, "M");
            },
            hide: function () {
              S.datepicker._hideDatepicker();
            },
            today: function () {
              S.datepicker._gotoToday(i);
            },
            selectDay: function () {
              return (
                S.datepicker._selectDay(
                  i,
                  +this.getAttribute("data-month"),
                  +this.getAttribute("data-year"),
                  this
                ),
                !1
              );
            },
            selectMonth: function () {
              return S.datepicker._selectMonthYear(i, this, "M"), !1;
            },
            selectYear: function () {
              return S.datepicker._selectMonthYear(i, this, "Y"), !1;
            },
          };
          S(this).on(
            this.getAttribute("data-event"),
            t[this.getAttribute("data-handler")]
          );
        });
      },
      _generateHTML: function (t) {
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l,
          h,
          c,
          u,
          d,
          p,
          f,
          g,
          m,
          v,
          _,
          b,
          y,
          w,
          x,
          k,
          C,
          D,
          S,
          T,
          I,
          N,
          P,
          M,
          E,
          H,
          A,
          O,
          z,
          F,
          W,
          L,
          R = new Date(),
          j = this._daylightSavingAdjust(
            new Date(R.getFullYear(), R.getMonth(), R.getDate())
          ),
          B = this._get(t, "isRTL"),
          q = this._get(t, "showButtonPanel"),
          Y = this._get(t, "hideIfNoPrevNext"),
          $ = this._get(t, "navigationAsDateFormat"),
          K = this._getNumberOfMonths(t),
          U = this._get(t, "showCurrentAtPos"),
          V = this._get(t, "stepMonths"),
          X = 1 !== K[0] || 1 !== K[1],
          G = this._daylightSavingAdjust(
            t.currentDay
              ? new Date(t.currentYear, t.currentMonth, t.currentDay)
              : new Date(9999, 9, 9)
          ),
          Q = this._getMinMaxDate(t, "min"),
          J = this._getMinMaxDate(t, "max"),
          Z = t.drawMonth - U,
          tt = t.drawYear;
        if ((Z < 0 && ((Z += 12), tt--), J))
          for (
            e = this._daylightSavingAdjust(
              new Date(
                J.getFullYear(),
                J.getMonth() - K[0] * K[1] + 1,
                J.getDate()
              )
            ),
              e = Q && e < Q ? Q : e;
            this._daylightSavingAdjust(new Date(tt, Z, 1)) > e;

          )
            --Z < 0 && ((Z = 11), tt--);
        for (
          t.drawMonth = Z,
            t.drawYear = tt,
            i = this._get(t, "prevText"),
            i = $
              ? this.formatDate(
                  i,
                  this._daylightSavingAdjust(new Date(tt, Z - V, 1)),
                  this._getFormatConfig(t)
                )
              : i,
            s = this._canAdjustMonth(t, -1, tt, Z)
              ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" +
                i +
                "'><span class='ui-icon ui-icon-circle-triangle-" +
                (B ? "e" : "w") +
                "'>" +
                i +
                "</span></a>"
              : Y
              ? ""
              : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" +
                i +
                "'><span class='ui-icon ui-icon-circle-triangle-" +
                (B ? "e" : "w") +
                "'>" +
                i +
                "</span></a>",
            n = this._get(t, "nextText"),
            n = $
              ? this.formatDate(
                  n,
                  this._daylightSavingAdjust(new Date(tt, Z + V, 1)),
                  this._getFormatConfig(t)
                )
              : n,
            o = this._canAdjustMonth(t, 1, tt, Z)
              ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" +
                n +
                "'><span class='ui-icon ui-icon-circle-triangle-" +
                (B ? "w" : "e") +
                "'>" +
                n +
                "</span></a>"
              : Y
              ? ""
              : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" +
                n +
                "'><span class='ui-icon ui-icon-circle-triangle-" +
                (B ? "w" : "e") +
                "'>" +
                n +
                "</span></a>",
            a = this._get(t, "currentText"),
            r = this._get(t, "gotoCurrent") && t.currentDay ? G : j,
            a = $ ? this.formatDate(a, r, this._getFormatConfig(t)) : a,
            l = t.inline
              ? ""
              : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
                this._get(t, "closeText") +
                "</button>",
            h = q
              ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" +
                (B ? l : "") +
                (this._isInRange(t, r)
                  ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" +
                    a +
                    "</button>"
                  : "") +
                (B ? "" : l) +
                "</div>"
              : "",
            c = parseInt(this._get(t, "firstDay"), 10),
            c = isNaN(c) ? 0 : c,
            u = this._get(t, "showWeek"),
            d = this._get(t, "dayNames"),
            p = this._get(t, "dayNamesMin"),
            f = this._get(t, "monthNames"),
            g = this._get(t, "monthNamesShort"),
            m = this._get(t, "beforeShowDay"),
            v = this._get(t, "showOtherMonths"),
            _ = this._get(t, "selectOtherMonths"),
            b = this._getDefaultDate(t),
            y = "",
            x = 0;
          K[0] > x;
          x++
        ) {
          for (k = "", this.maxRows = 4, C = 0; K[1] > C; C++) {
            if (
              ((D = this._daylightSavingAdjust(new Date(tt, Z, t.selectedDay))),
              (S = " ui-corner-all"),
              (T = ""),
              X)
            ) {
              if (((T += "<div class='ui-datepicker-group"), 1 < K[1]))
                switch (C) {
                  case 0:
                    (T += " ui-datepicker-group-first"),
                      (S = " ui-corner-" + (B ? "right" : "left"));
                    break;
                  case K[1] - 1:
                    (T += " ui-datepicker-group-last"),
                      (S = " ui-corner-" + (B ? "left" : "right"));
                    break;
                  default:
                    (T += " ui-datepicker-group-middle"), (S = "");
                }
              T += "'>";
            }
            for (
              T +=
                "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
                S +
                "'>" +
                (/all|left/.test(S) && 0 === x ? (B ? o : s) : "") +
                (/all|right/.test(S) && 0 === x ? (B ? s : o) : "") +
                this._generateMonthYearHeader(
                  t,
                  Z,
                  tt,
                  Q,
                  J,
                  0 < x || 0 < C,
                  f,
                  g
                ) +
                "</div><table class='ui-datepicker-calendar'><thead><tr>",
                I = u
                  ? "<th class='ui-datepicker-week-col'>" +
                    this._get(t, "weekHeader") +
                    "</th>"
                  : "",
                w = 0;
              w < 7;
              w++
            )
              I +=
                "<th scope='col'" +
                (5 <= (w + c + 6) % 7
                  ? " class='ui-datepicker-week-end'"
                  : "") +
                "><span title='" +
                d[(N = (w + c) % 7)] +
                "'>" +
                p[N] +
                "</span></th>";
            for (
              T += I + "</tr></thead><tbody>",
                P = this._getDaysInMonth(tt, Z),
                tt === t.selectedYear &&
                  Z === t.selectedMonth &&
                  (t.selectedDay = Math.min(t.selectedDay, P)),
                M = (this._getFirstDayOfMonth(tt, Z) - c + 7) % 7,
                E = Math.ceil((M + P) / 7),
                H = X && this.maxRows > E ? this.maxRows : E,
                this.maxRows = H,
                A = this._daylightSavingAdjust(new Date(tt, Z, 1 - M)),
                O = 0;
              O < H;
              O++
            ) {
              for (
                T += "<tr>",
                  z = u
                    ? "<td class='ui-datepicker-week-col'>" +
                      this._get(t, "calculateWeek")(A) +
                      "</td>"
                    : "",
                  w = 0;
                w < 7;
                w++
              )
                (F = m ? m.apply(t.input ? t.input[0] : null, [A]) : [!0, ""]),
                  (L =
                    ((W = A.getMonth() !== Z) && !_) ||
                    !F[0] ||
                    (Q && A < Q) ||
                    (J && J < A)),
                  (z +=
                    "<td class='" +
                    (5 <= (w + c + 6) % 7 ? " ui-datepicker-week-end" : "") +
                    (W ? " ui-datepicker-other-month" : "") +
                    ((A.getTime() === D.getTime() &&
                      Z === t.selectedMonth &&
                      t._keyEvent) ||
                    (b.getTime() === A.getTime() && b.getTime() === D.getTime())
                      ? " " + this._dayOverClass
                      : "") +
                    (L
                      ? " " + this._unselectableClass + " ui-state-disabled"
                      : "") +
                    (W && !v
                      ? ""
                      : " " +
                        F[1] +
                        (A.getTime() === G.getTime()
                          ? " " + this._currentClass
                          : "") +
                        (A.getTime() === j.getTime()
                          ? " ui-datepicker-today"
                          : "")) +
                    "'" +
                    ((W && !v) || !F[2]
                      ? ""
                      : " title='" + F[2].replace(/'/g, "&#39;") + "'") +
                    (L
                      ? ""
                      : " data-handler='selectDay' data-event='click' data-month='" +
                        A.getMonth() +
                        "' data-year='" +
                        A.getFullYear() +
                        "'") +
                    ">" +
                    (W && !v
                      ? "&#xa0;"
                      : L
                      ? "<span class='ui-state-default'>" +
                        A.getDate() +
                        "</span>"
                      : "<a class='ui-state-default" +
                        (A.getTime() === j.getTime()
                          ? " ui-state-highlight"
                          : "") +
                        (A.getTime() === G.getTime()
                          ? " ui-state-active"
                          : "") +
                        (W ? " ui-priority-secondary" : "") +
                        "' href='#'>" +
                        A.getDate() +
                        "</a>") +
                    "</td>"),
                  A.setDate(A.getDate() + 1),
                  (A = this._daylightSavingAdjust(A));
              T += z + "</tr>";
            }
            11 < ++Z && ((Z = 0), tt++),
              (k += T +=
                "</tbody></table>" +
                (X
                  ? "</div>" +
                    (0 < K[0] && C === K[1] - 1
                      ? "<div class='ui-datepicker-row-break'></div>"
                      : "")
                  : ""));
          }
          y += k;
        }
        return (y += h), (t._keyEvent = !1), y;
      },
      _generateMonthYearHeader: function (t, e, i, s, n, o, a, r) {
        var l,
          h,
          c,
          u,
          d,
          p,
          f,
          g,
          m = this._get(t, "changeMonth"),
          v = this._get(t, "changeYear"),
          _ = this._get(t, "showMonthAfterYear"),
          b = "<div class='ui-datepicker-title'>",
          y = "";
        if (o || !m)
          y += "<span class='ui-datepicker-month'>" + a[e] + "</span>";
        else {
          for (
            l = s && s.getFullYear() === i,
              h = n && n.getFullYear() === i,
              y +=
                "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",
              c = 0;
            c < 12;
            c++
          )
            (!l || c >= s.getMonth()) &&
              (!h || n.getMonth() >= c) &&
              (y +=
                "<option value='" +
                c +
                "'" +
                (c === e ? " selected='selected'" : "") +
                ">" +
                r[c] +
                "</option>");
          y += "</select>";
        }
        if ((_ || (b += y + (!o && m && v ? "" : "&#xa0;")), !t.yearshtml))
          if (((t.yearshtml = ""), o || !v))
            b += "<span class='ui-datepicker-year'>" + i + "</span>";
          else {
            for (
              u = this._get(t, "yearRange").split(":"),
                d = new Date().getFullYear(),
                f = (p = function (t) {
                  var e = t.match(/c[+\-].*/)
                    ? i + parseInt(t.substring(1), 10)
                    : t.match(/[+\-].*/)
                    ? d + parseInt(t, 10)
                    : parseInt(t, 10);
                  return isNaN(e) ? d : e;
                })(u[0]),
                g = Math.max(f, p(u[1] || "")),
                f = s ? Math.max(f, s.getFullYear()) : f,
                g = n ? Math.min(g, n.getFullYear()) : g,
                t.yearshtml +=
                  "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
              f <= g;
              f++
            )
              t.yearshtml +=
                "<option value='" +
                f +
                "'" +
                (f === i ? " selected='selected'" : "") +
                ">" +
                f +
                "</option>";
            (t.yearshtml += "</select>"),
              (b += t.yearshtml),
              (t.yearshtml = null);
          }
        return (
          (b += this._get(t, "yearSuffix")),
          _ && (b += (!o && m && v ? "" : "&#xa0;") + y),
          b + "</div>"
        );
      },
      _adjustInstDate: function (t, e, i) {
        var s = t.selectedYear + ("Y" === i ? e : 0),
          n = t.selectedMonth + ("M" === i ? e : 0),
          o =
            Math.min(t.selectedDay, this._getDaysInMonth(s, n)) +
            ("D" === i ? e : 0),
          a = this._restrictMinMax(
            t,
            this._daylightSavingAdjust(new Date(s, n, o))
          );
        (t.selectedDay = a.getDate()),
          (t.drawMonth = t.selectedMonth = a.getMonth()),
          (t.drawYear = t.selectedYear = a.getFullYear()),
          ("M" === i || "Y" === i) && this._notifyChange(t);
      },
      _restrictMinMax: function (t, e) {
        var i = this._getMinMaxDate(t, "min"),
          s = this._getMinMaxDate(t, "max"),
          n = i && e < i ? i : e;
        return s && s < n ? s : n;
      },
      _notifyChange: function (t) {
        var e = this._get(t, "onChangeMonthYear");
        e &&
          e.apply(t.input ? t.input[0] : null, [
            t.selectedYear,
            t.selectedMonth + 1,
            t,
          ]);
      },
      _getNumberOfMonths: function (t) {
        var e = this._get(t, "numberOfMonths");
        return null == e ? [1, 1] : "number" == typeof e ? [1, e] : e;
      },
      _getMinMaxDate: function (t, e) {
        return this._determineDate(t, this._get(t, e + "Date"), null);
      },
      _getDaysInMonth: function (t, e) {
        return 32 - this._daylightSavingAdjust(new Date(t, e, 32)).getDate();
      },
      _getFirstDayOfMonth: function (t, e) {
        return new Date(t, e, 1).getDay();
      },
      _canAdjustMonth: function (t, e, i, s) {
        var n = this._getNumberOfMonths(t),
          o = this._daylightSavingAdjust(
            new Date(i, s + (e < 0 ? e : n[0] * n[1]), 1)
          );
        return (
          e < 0 &&
            o.setDate(this._getDaysInMonth(o.getFullYear(), o.getMonth())),
          this._isInRange(t, o)
        );
      },
      _isInRange: function (t, e) {
        var i,
          s,
          n = this._getMinMaxDate(t, "min"),
          o = this._getMinMaxDate(t, "max"),
          a = null,
          r = null,
          l = this._get(t, "yearRange");
        return (
          l &&
            ((i = l.split(":")),
            (s = new Date().getFullYear()),
            (a = parseInt(i[0], 10)),
            (r = parseInt(i[1], 10)),
            i[0].match(/[+\-].*/) && (a += s),
            i[1].match(/[+\-].*/) && (r += s)),
          (!n || e.getTime() >= n.getTime()) &&
            (!o || e.getTime() <= o.getTime()) &&
            (!a || e.getFullYear() >= a) &&
            (!r || r >= e.getFullYear())
        );
      },
      _getFormatConfig: function (t) {
        var e = this._get(t, "shortYearCutoff");
        return {
          shortYearCutoff: (e =
            "string" != typeof e
              ? e
              : (new Date().getFullYear() % 100) + parseInt(e, 10)),
          dayNamesShort: this._get(t, "dayNamesShort"),
          dayNames: this._get(t, "dayNames"),
          monthNamesShort: this._get(t, "monthNamesShort"),
          monthNames: this._get(t, "monthNames"),
        };
      },
      _formatDate: function (t, e, i, s) {
        e ||
          ((t.currentDay = t.selectedDay),
          (t.currentMonth = t.selectedMonth),
          (t.currentYear = t.selectedYear));
        var n = e
          ? "object" == typeof e
            ? e
            : this._daylightSavingAdjust(new Date(s, i, e))
          : this._daylightSavingAdjust(
              new Date(t.currentYear, t.currentMonth, t.currentDay)
            );
        return this.formatDate(
          this._get(t, "dateFormat"),
          n,
          this._getFormatConfig(t)
        );
      },
    }),
    (S.fn.datepicker = function (t) {
      if (!this.length) return this;
      S.datepicker.initialized ||
        (S(document).on("mousedown", S.datepicker._checkExternalClick),
        (S.datepicker.initialized = !0)),
        0 === S("#" + S.datepicker._mainDivId).length &&
          S("body").append(S.datepicker.dpDiv);
      var e = Array.prototype.slice.call(arguments, 1);
      return "string" != typeof t ||
        ("isDisabled" !== t && "getDate" !== t && "widget" !== t)
        ? "option" === t &&
          2 === arguments.length &&
          "string" == typeof arguments[1]
          ? S.datepicker["_" + t + "Datepicker"].apply(
              S.datepicker,
              [this[0]].concat(e)
            )
          : this.each(function () {
              "string" == typeof t
                ? S.datepicker["_" + t + "Datepicker"].apply(
                    S.datepicker,
                    [this].concat(e)
                  )
                : S.datepicker._attachDatepicker(this, t);
            })
        : S.datepicker["_" + t + "Datepicker"].apply(
            S.datepicker,
            [this[0]].concat(e)
          );
    }),
    (S.datepicker = new t()),
    (S.datepicker.initialized = !1),
    (S.datepicker.uuid = new Date().getTime()),
    (S.datepicker.version = "1.12.1"),
    S.datepicker,
    (S.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));
  var b = !1;
  S(document).on("mouseup", function () {
    b = !1;
  }),
    S.widget("ui.mouse", {
      version: "1.12.1",
      options: {
        cancel: "input, textarea, button, select, option",
        distance: 1,
        delay: 0,
      },
      _mouseInit: function () {
        var e = this;
        this.element
          .on("mousedown." + this.widgetName, function (t) {
            return e._mouseDown(t);
          })
          .on("click." + this.widgetName, function (t) {
            return !0 === S.data(t.target, e.widgetName + ".preventClickEvent")
              ? (S.removeData(t.target, e.widgetName + ".preventClickEvent"),
                t.stopImmediatePropagation(),
                !1)
              : void 0;
          }),
          (this.started = !1);
      },
      _mouseDestroy: function () {
        this.element.off("." + this.widgetName),
          this._mouseMoveDelegate &&
            this.document
              .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
              .off("mouseup." + this.widgetName, this._mouseUpDelegate);
      },
      _mouseDown: function (t) {
        if (!b) {
          (this._mouseMoved = !1),
            this._mouseStarted && this._mouseUp(t),
            (this._mouseDownEvent = t);
          var e = this,
            i = 1 === t.which,
            s =
              !("string" != typeof this.options.cancel || !t.target.nodeName) &&
              S(t.target).closest(this.options.cancel).length;
          return (
            i &&
              !s &&
              this._mouseCapture(t) &&
              ((this.mouseDelayMet = !this.options.delay),
              this.mouseDelayMet ||
                (this._mouseDelayTimer = setTimeout(function () {
                  e.mouseDelayMet = !0;
                }, this.options.delay)),
              this._mouseDistanceMet(t) &&
              this._mouseDelayMet(t) &&
              ((this._mouseStarted = !1 !== this._mouseStart(t)),
              !this._mouseStarted)
                ? t.preventDefault()
                : (!0 ===
                    S.data(t.target, this.widgetName + ".preventClickEvent") &&
                    S.removeData(
                      t.target,
                      this.widgetName + ".preventClickEvent"
                    ),
                  (this._mouseMoveDelegate = function (t) {
                    return e._mouseMove(t);
                  }),
                  (this._mouseUpDelegate = function (t) {
                    return e._mouseUp(t);
                  }),
                  this.document
                    .on("mousemove." + this.widgetName, this._mouseMoveDelegate)
                    .on("mouseup." + this.widgetName, this._mouseUpDelegate),
                  t.preventDefault(),
                  (b = !0))),
            !0
          );
        }
      },
      _mouseMove: function (t) {
        if (this._mouseMoved) {
          if (
            S.ui.ie &&
            (!document.documentMode || document.documentMode < 9) &&
            !t.button
          )
            return this._mouseUp(t);
          if (!t.which)
            if (
              t.originalEvent.altKey ||
              t.originalEvent.ctrlKey ||
              t.originalEvent.metaKey ||
              t.originalEvent.shiftKey
            )
              this.ignoreMissingWhich = !0;
            else if (!this.ignoreMissingWhich) return this._mouseUp(t);
        }
        return (
          (t.which || t.button) && (this._mouseMoved = !0),
          this._mouseStarted
            ? (this._mouseDrag(t), t.preventDefault())
            : (this._mouseDistanceMet(t) &&
                this._mouseDelayMet(t) &&
                ((this._mouseStarted =
                  !1 !== this._mouseStart(this._mouseDownEvent, t)),
                this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
              !this._mouseStarted)
        );
      },
      _mouseUp: function (t) {
        this.document
          .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
          .off("mouseup." + this.widgetName, this._mouseUpDelegate),
          this._mouseStarted &&
            ((this._mouseStarted = !1),
            t.target === this._mouseDownEvent.target &&
              S.data(t.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(t)),
          this._mouseDelayTimer &&
            (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer),
          (this.ignoreMissingWhich = !1),
          (b = !1),
          t.preventDefault();
      },
      _mouseDistanceMet: function (t) {
        return (
          Math.max(
            Math.abs(this._mouseDownEvent.pageX - t.pageX),
            Math.abs(this._mouseDownEvent.pageY - t.pageY)
          ) >= this.options.distance
        );
      },
      _mouseDelayMet: function () {
        return this.mouseDelayMet;
      },
      _mouseStart: function () {},
      _mouseDrag: function () {},
      _mouseStop: function () {},
      _mouseCapture: function () {
        return !0;
      },
    }),
    (S.ui.plugin = {
      add: function (t, e, i) {
        var s,
          n = S.ui[t].prototype;
        for (s in i)
          (n.plugins[s] = n.plugins[s] || []), n.plugins[s].push([e, i[s]]);
      },
      call: function (t, e, i, s) {
        var n,
          o = t.plugins[e];
        if (
          o &&
          (s ||
            (t.element[0].parentNode &&
              11 !== t.element[0].parentNode.nodeType))
        )
          for (n = 0; o.length > n; n++)
            t.options[o[n][0]] && o[n][1].apply(t.element, i);
      },
    }),
    (S.ui.safeBlur = function (t) {
      t && "body" !== t.nodeName.toLowerCase() && S(t).trigger("blur");
    }),
    S.widget("ui.draggable", S.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "drag",
      options: {
        addClasses: !0,
        appendTo: "parent",
        axis: !1,
        connectToSortable: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        iframeFix: !1,
        opacity: !1,
        refreshPositions: !1,
        revert: !1,
        revertDuration: 500,
        scope: "default",
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        snap: !1,
        snapMode: "both",
        snapTolerance: 20,
        stack: !1,
        zIndex: !1,
        drag: null,
        start: null,
        stop: null,
      },
      _create: function () {
        "original" === this.options.helper && this._setPositionRelative(),
          this.options.addClasses && this._addClass("ui-draggable"),
          this._setHandleClassName(),
          this._mouseInit();
      },
      _setOption: function (t, e) {
        this._super(t, e),
          "handle" === t &&
            (this._removeHandleClassName(), this._setHandleClassName());
      },
      _destroy: function () {
        return (this.helper || this.element).is(".ui-draggable-dragging")
          ? void (this.destroyOnClear = !0)
          : (this._removeHandleClassName(), void this._mouseDestroy());
      },
      _mouseCapture: function (t) {
        var e = this.options;
        return (
          !(
            this.helper ||
            e.disabled ||
            0 < S(t.target).closest(".ui-resizable-handle").length
          ) &&
          ((this.handle = this._getHandle(t)),
          !!this.handle &&
            (this._blurActiveElement(t),
            this._blockFrames(!0 === e.iframeFix ? "iframe" : e.iframeFix),
            !0))
        );
      },
      _blockFrames: function (t) {
        this.iframeBlocks = this.document.find(t).map(function () {
          var t = S(this);
          return S("<div>")
            .css("position", "absolute")
            .appendTo(t.parent())
            .outerWidth(t.outerWidth())
            .outerHeight(t.outerHeight())
            .offset(t.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _blurActiveElement: function (t) {
        var e = S.ui.safeActiveElement(this.document[0]);
        S(t.target).closest(e).length || S.ui.safeBlur(e);
      },
      _mouseStart: function (t) {
        var e = this.options;
        return (
          (this.helper = this._createHelper(t)),
          this._addClass(this.helper, "ui-draggable-dragging"),
          this._cacheHelperProportions(),
          S.ui.ddmanager && (S.ui.ddmanager.current = this),
          this._cacheMargins(),
          (this.cssPosition = this.helper.css("position")),
          (this.scrollParent = this.helper.scrollParent(!0)),
          (this.offsetParent = this.helper.offsetParent()),
          (this.hasFixedAncestor =
            0 <
            this.helper.parents().filter(function () {
              return "fixed" === S(this).css("position");
            }).length),
          (this.positionAbs = this.element.offset()),
          this._refreshOffsets(t),
          (this.originalPosition = this.position =
            this._generatePosition(t, !1)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt),
          this._setContainment(),
          !1 === this._trigger("start", t)
            ? (this._clear(), !1)
            : (this._cacheHelperProportions(),
              S.ui.ddmanager &&
                !e.dropBehaviour &&
                S.ui.ddmanager.prepareOffsets(this, t),
              this._mouseDrag(t, !0),
              S.ui.ddmanager && S.ui.ddmanager.dragStart(this, t),
              !0)
        );
      },
      _refreshOffsets: function (t) {
        (this.offset = {
          top: this.positionAbs.top - this.margins.top,
          left: this.positionAbs.left - this.margins.left,
          scroll: !1,
          parent: this._getParentOffset(),
          relative: this._getRelativeOffset(),
        }),
          (this.offset.click = {
            left: t.pageX - this.offset.left,
            top: t.pageY - this.offset.top,
          });
      },
      _mouseDrag: function (t, e) {
        if (
          (this.hasFixedAncestor &&
            (this.offset.parent = this._getParentOffset()),
          (this.position = this._generatePosition(t, !0)),
          (this.positionAbs = this._convertPositionTo("absolute")),
          !e)
        ) {
          var i = this._uiHash();
          if (!1 === this._trigger("drag", t, i))
            return this._mouseUp(new S.Event("mouseup", t)), !1;
          this.position = i.position;
        }
        return (
          (this.helper[0].style.left = this.position.left + "px"),
          (this.helper[0].style.top = this.position.top + "px"),
          S.ui.ddmanager && S.ui.ddmanager.drag(this, t),
          !1
        );
      },
      _mouseStop: function (t) {
        var e = this,
          i = !1;
        return (
          S.ui.ddmanager &&
            !this.options.dropBehaviour &&
            (i = S.ui.ddmanager.drop(this, t)),
          this.dropped && ((i = this.dropped), (this.dropped = !1)),
          ("invalid" === this.options.revert && !i) ||
          ("valid" === this.options.revert && i) ||
          !0 === this.options.revert ||
          (S.isFunction(this.options.revert) &&
            this.options.revert.call(this.element, i))
            ? S(this.helper).animate(
                this.originalPosition,
                parseInt(this.options.revertDuration, 10),
                function () {
                  !1 !== e._trigger("stop", t) && e._clear();
                }
              )
            : !1 !== this._trigger("stop", t) && this._clear(),
          !1
        );
      },
      _mouseUp: function (t) {
        return (
          this._unblockFrames(),
          S.ui.ddmanager && S.ui.ddmanager.dragStop(this, t),
          this.handleElement.is(t.target) && this.element.trigger("focus"),
          S.ui.mouse.prototype._mouseUp.call(this, t)
        );
      },
      cancel: function () {
        return (
          this.helper.is(".ui-draggable-dragging")
            ? this._mouseUp(new S.Event("mouseup", { target: this.element[0] }))
            : this._clear(),
          this
        );
      },
      _getHandle: function (t) {
        return (
          !this.options.handle ||
          !!S(t.target).closest(this.element.find(this.options.handle)).length
        );
      },
      _setHandleClassName: function () {
        (this.handleElement = this.options.handle
          ? this.element.find(this.options.handle)
          : this.element),
          this._addClass(this.handleElement, "ui-draggable-handle");
      },
      _removeHandleClassName: function () {
        this._removeClass(this.handleElement, "ui-draggable-handle");
      },
      _createHelper: function (t) {
        var e = this.options,
          i = S.isFunction(e.helper),
          s = i
            ? S(e.helper.apply(this.element[0], [t]))
            : "clone" === e.helper
            ? this.element.clone().removeAttr("id")
            : this.element;
        return (
          s.parents("body").length ||
            s.appendTo(
              "parent" === e.appendTo ? this.element[0].parentNode : e.appendTo
            ),
          i && s[0] === this.element[0] && this._setPositionRelative(),
          s[0] === this.element[0] ||
            /(fixed|absolute)/.test(s.css("position")) ||
            s.css("position", "absolute"),
          s
        );
      },
      _setPositionRelative: function () {
        /^(?:r|a|f)/.test(this.element.css("position")) ||
          (this.element[0].style.position = "relative");
      },
      _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")),
          S.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }),
          "left" in t && (this.offset.click.left = t.left + this.margins.left),
          "right" in t &&
            (this.offset.click.left =
              this.helperProportions.width - t.right + this.margins.left),
          "top" in t && (this.offset.click.top = t.top + this.margins.top),
          "bottom" in t &&
            (this.offset.click.top =
              this.helperProportions.height - t.bottom + this.margins.top);
      },
      _isRootNode: function (t) {
        return /(html|body)/i.test(t.tagName) || t === this.document[0];
      },
      _getParentOffset: function () {
        var t = this.offsetParent.offset(),
          e = this.document[0];
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== e &&
            S.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          this._isRootNode(this.offsetParent[0]) && (t = { top: 0, left: 0 }),
          {
            top:
              t.top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
        var t = this.element.position(),
          e = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            t.top -
            (parseInt(this.helper.css("top"), 10) || 0) +
            (e ? 0 : this.scrollParent.scrollTop()),
          left:
            t.left -
            (parseInt(this.helper.css("left"), 10) || 0) +
            (e ? 0 : this.scrollParent.scrollLeft()),
        };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.element.css("marginLeft"), 10) || 0,
          top: parseInt(this.element.css("marginTop"), 10) || 0,
          right: parseInt(this.element.css("marginRight"), 10) || 0,
          bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          e,
          i,
          s = this.options,
          n = this.document[0];
        return (
          (this.relativeContainer = null),
          s.containment
            ? "window" === s.containment
              ? void (this.containment = [
                  S(window).scrollLeft() -
                    this.offset.relative.left -
                    this.offset.parent.left,
                  S(window).scrollTop() -
                    this.offset.relative.top -
                    this.offset.parent.top,
                  S(window).scrollLeft() +
                    S(window).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  S(window).scrollTop() +
                    (S(window).height() || n.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
              : "document" === s.containment
              ? void (this.containment = [
                  0,
                  0,
                  S(n).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  (S(n).height() || n.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
              : s.containment.constructor === Array
              ? void (this.containment = s.containment)
              : ("parent" === s.containment &&
                  (s.containment = this.helper[0].parentNode),
                void (
                  (i = (e = S(s.containment))[0]) &&
                  ((t = /(scroll|auto)/.test(e.css("overflow"))),
                  (this.containment = [
                    (parseInt(e.css("borderLeftWidth"), 10) || 0) +
                      (parseInt(e.css("paddingLeft"), 10) || 0),
                    (parseInt(e.css("borderTopWidth"), 10) || 0) +
                      (parseInt(e.css("paddingTop"), 10) || 0),
                    (t
                      ? Math.max(i.scrollWidth, i.offsetWidth)
                      : i.offsetWidth) -
                      (parseInt(e.css("borderRightWidth"), 10) || 0) -
                      (parseInt(e.css("paddingRight"), 10) || 0) -
                      this.helperProportions.width -
                      this.margins.left -
                      this.margins.right,
                    (t
                      ? Math.max(i.scrollHeight, i.offsetHeight)
                      : i.offsetHeight) -
                      (parseInt(e.css("borderBottomWidth"), 10) || 0) -
                      (parseInt(e.css("paddingBottom"), 10) || 0) -
                      this.helperProportions.height -
                      this.margins.top -
                      this.margins.bottom,
                  ]),
                  (this.relativeContainer = e))
                ))
            : void (this.containment = null)
        );
      },
      _convertPositionTo: function (t, e) {
        e || (e = this.position);
        var i = "absolute" === t ? 1 : -1,
          s = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            e.top +
            this.offset.relative.top * i +
            this.offset.parent.top * i -
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.top
              : s
              ? 0
              : this.offset.scroll.top) *
              i,
          left:
            e.left +
            this.offset.relative.left * i +
            this.offset.parent.left * i -
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.left
              : s
              ? 0
              : this.offset.scroll.left) *
              i,
        };
      },
      _generatePosition: function (t, e) {
        var i,
          s,
          n,
          o,
          a = this.options,
          r = this._isRootNode(this.scrollParent[0]),
          l = t.pageX,
          h = t.pageY;
        return (
          (r && this.offset.scroll) ||
            (this.offset.scroll = {
              top: this.scrollParent.scrollTop(),
              left: this.scrollParent.scrollLeft(),
            }),
          e &&
            (this.containment &&
              (this.relativeContainer
                ? ((s = this.relativeContainer.offset()),
                  (i = [
                    this.containment[0] + s.left,
                    this.containment[1] + s.top,
                    this.containment[2] + s.left,
                    this.containment[3] + s.top,
                  ]))
                : (i = this.containment),
              t.pageX - this.offset.click.left < i[0] &&
                (l = i[0] + this.offset.click.left),
              t.pageY - this.offset.click.top < i[1] &&
                (h = i[1] + this.offset.click.top),
              t.pageX - this.offset.click.left > i[2] &&
                (l = i[2] + this.offset.click.left),
              t.pageY - this.offset.click.top > i[3] &&
                (h = i[3] + this.offset.click.top)),
            a.grid &&
              ((n = a.grid[1]
                ? this.originalPageY +
                  Math.round((h - this.originalPageY) / a.grid[1]) * a.grid[1]
                : this.originalPageY),
              (h = i
                ? n - this.offset.click.top >= i[1] ||
                  n - this.offset.click.top > i[3]
                  ? n
                  : n - this.offset.click.top >= i[1]
                  ? n - a.grid[1]
                  : n + a.grid[1]
                : n),
              (o = a.grid[0]
                ? this.originalPageX +
                  Math.round((l - this.originalPageX) / a.grid[0]) * a.grid[0]
                : this.originalPageX),
              (l = i
                ? o - this.offset.click.left >= i[0] ||
                  o - this.offset.click.left > i[2]
                  ? o
                  : o - this.offset.click.left >= i[0]
                  ? o - a.grid[0]
                  : o + a.grid[0]
                : o)),
            "y" === a.axis && (l = this.originalPageX),
            "x" === a.axis && (h = this.originalPageY)),
          {
            top:
              h -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.offset.scroll.top
                : r
                ? 0
                : this.offset.scroll.top),
            left:
              l -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.offset.scroll.left
                : r
                ? 0
                : this.offset.scroll.left),
          }
        );
      },
      _clear: function () {
        this._removeClass(this.helper, "ui-draggable-dragging"),
          this.helper[0] === this.element[0] ||
            this.cancelHelperRemoval ||
            this.helper.remove(),
          (this.helper = null),
          (this.cancelHelperRemoval = !1),
          this.destroyOnClear && this.destroy();
      },
      _trigger: function (t, e, i) {
        return (
          (i = i || this._uiHash()),
          S.ui.plugin.call(this, t, [e, i, this], !0),
          /^(drag|start|stop)/.test(t) &&
            ((this.positionAbs = this._convertPositionTo("absolute")),
            (i.offset = this.positionAbs)),
          S.Widget.prototype._trigger.call(this, t, e, i)
        );
      },
      plugins: {},
      _uiHash: function () {
        return {
          helper: this.helper,
          position: this.position,
          originalPosition: this.originalPosition,
          offset: this.positionAbs,
        };
      },
    }),
    S.ui.plugin.add("draggable", "connectToSortable", {
      start: function (e, t, i) {
        var s = S.extend({}, t, { item: i.element });
        (i.sortables = []),
          S(i.options.connectToSortable).each(function () {
            var t = S(this).sortable("instance");
            t &&
              !t.options.disabled &&
              (i.sortables.push(t),
              t.refreshPositions(),
              t._trigger("activate", e, s));
          });
      },
      stop: function (e, t, i) {
        var s = S.extend({}, t, { item: i.element });
        (i.cancelHelperRemoval = !1),
          S.each(i.sortables, function () {
            var t = this;
            t.isOver
              ? ((t.isOver = 0),
                (i.cancelHelperRemoval = !0),
                (t.cancelHelperRemoval = !1),
                (t._storedCSS = {
                  position: t.placeholder.css("position"),
                  top: t.placeholder.css("top"),
                  left: t.placeholder.css("left"),
                }),
                t._mouseStop(e),
                (t.options.helper = t.options._helper))
              : ((t.cancelHelperRemoval = !0), t._trigger("deactivate", e, s));
          });
      },
      drag: function (i, s, n) {
        S.each(n.sortables, function () {
          var t = !1,
            e = this;
          (e.positionAbs = n.positionAbs),
            (e.helperProportions = n.helperProportions),
            (e.offset.click = n.offset.click),
            e._intersectsWith(e.containerCache) &&
              ((t = !0),
              S.each(n.sortables, function () {
                return (
                  (this.positionAbs = n.positionAbs),
                  (this.helperProportions = n.helperProportions),
                  (this.offset.click = n.offset.click),
                  this !== e &&
                    this._intersectsWith(this.containerCache) &&
                    S.contains(e.element[0], this.element[0]) &&
                    (t = !1),
                  t
                );
              })),
            t
              ? (e.isOver ||
                  ((e.isOver = 1),
                  (n._parent = s.helper.parent()),
                  (e.currentItem = s.helper
                    .appendTo(e.element)
                    .data("ui-sortable-item", !0)),
                  (e.options._helper = e.options.helper),
                  (e.options.helper = function () {
                    return s.helper[0];
                  }),
                  (i.target = e.currentItem[0]),
                  e._mouseCapture(i, !0),
                  e._mouseStart(i, !0, !0),
                  (e.offset.click.top = n.offset.click.top),
                  (e.offset.click.left = n.offset.click.left),
                  (e.offset.parent.left -=
                    n.offset.parent.left - e.offset.parent.left),
                  (e.offset.parent.top -=
                    n.offset.parent.top - e.offset.parent.top),
                  n._trigger("toSortable", i),
                  (n.dropped = e.element),
                  S.each(n.sortables, function () {
                    this.refreshPositions();
                  }),
                  (n.currentItem = n.element),
                  (e.fromOutside = n)),
                e.currentItem && (e._mouseDrag(i), (s.position = e.position)))
              : e.isOver &&
                ((e.isOver = 0),
                (e.cancelHelperRemoval = !0),
                (e.options._revert = e.options.revert),
                (e.options.revert = !1),
                e._trigger("out", i, e._uiHash(e)),
                e._mouseStop(i, !0),
                (e.options.revert = e.options._revert),
                (e.options.helper = e.options._helper),
                e.placeholder && e.placeholder.remove(),
                s.helper.appendTo(n._parent),
                n._refreshOffsets(i),
                (s.position = n._generatePosition(i, !0)),
                n._trigger("fromSortable", i),
                (n.dropped = !1),
                S.each(n.sortables, function () {
                  this.refreshPositions();
                }));
        });
      },
    }),
    S.ui.plugin.add("draggable", "cursor", {
      start: function (t, e, i) {
        var s = S("body"),
          n = i.options;
        s.css("cursor") && (n._cursor = s.css("cursor")),
          s.css("cursor", n.cursor);
      },
      stop: function (t, e, i) {
        var s = i.options;
        s._cursor && S("body").css("cursor", s._cursor);
      },
    }),
    S.ui.plugin.add("draggable", "opacity", {
      start: function (t, e, i) {
        var s = S(e.helper),
          n = i.options;
        s.css("opacity") && (n._opacity = s.css("opacity")),
          s.css("opacity", n.opacity);
      },
      stop: function (t, e, i) {
        var s = i.options;
        s._opacity && S(e.helper).css("opacity", s._opacity);
      },
    }),
    S.ui.plugin.add("draggable", "scroll", {
      start: function (t, e, i) {
        i.scrollParentNotHidden ||
          (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
          i.scrollParentNotHidden[0] !== i.document[0] &&
            "HTML" !== i.scrollParentNotHidden[0].tagName &&
            (i.overflowOffset = i.scrollParentNotHidden.offset());
      },
      drag: function (t, e, i) {
        var s = i.options,
          n = !1,
          o = i.scrollParentNotHidden[0],
          a = i.document[0];
        o !== a && "HTML" !== o.tagName
          ? ((s.axis && "x" === s.axis) ||
              (i.overflowOffset.top + o.offsetHeight - t.pageY <
              s.scrollSensitivity
                ? (o.scrollTop = n = o.scrollTop + s.scrollSpeed)
                : t.pageY - i.overflowOffset.top < s.scrollSensitivity &&
                  (o.scrollTop = n = o.scrollTop - s.scrollSpeed)),
            (s.axis && "y" === s.axis) ||
              (i.overflowOffset.left + o.offsetWidth - t.pageX <
              s.scrollSensitivity
                ? (o.scrollLeft = n = o.scrollLeft + s.scrollSpeed)
                : t.pageX - i.overflowOffset.left < s.scrollSensitivity &&
                  (o.scrollLeft = n = o.scrollLeft - s.scrollSpeed)))
          : ((s.axis && "x" === s.axis) ||
              (t.pageY - S(a).scrollTop() < s.scrollSensitivity
                ? (n = S(a).scrollTop(S(a).scrollTop() - s.scrollSpeed))
                : S(window).height() - (t.pageY - S(a).scrollTop()) <
                    s.scrollSensitivity &&
                  (n = S(a).scrollTop(S(a).scrollTop() + s.scrollSpeed))),
            (s.axis && "y" === s.axis) ||
              (t.pageX - S(a).scrollLeft() < s.scrollSensitivity
                ? (n = S(a).scrollLeft(S(a).scrollLeft() - s.scrollSpeed))
                : S(window).width() - (t.pageX - S(a).scrollLeft()) <
                    s.scrollSensitivity &&
                  (n = S(a).scrollLeft(S(a).scrollLeft() + s.scrollSpeed)))),
          !1 !== n &&
            S.ui.ddmanager &&
            !s.dropBehaviour &&
            S.ui.ddmanager.prepareOffsets(i, t);
      },
    }),
    S.ui.plugin.add("draggable", "snap", {
      start: function (t, e, i) {
        var s = i.options;
        (i.snapElements = []),
          S(
            s.snap.constructor !== String
              ? s.snap.items || ":data(ui-draggable)"
              : s.snap
          ).each(function () {
            var t = S(this),
              e = t.offset();
            this !== i.element[0] &&
              i.snapElements.push({
                item: this,
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: e.top,
                left: e.left,
              });
          });
      },
      drag: function (t, e, i) {
        var s,
          n,
          o,
          a,
          r,
          l,
          h,
          c,
          u,
          d,
          p = i.options,
          f = p.snapTolerance,
          g = e.offset.left,
          m = g + i.helperProportions.width,
          v = e.offset.top,
          _ = v + i.helperProportions.height;
        for (u = i.snapElements.length - 1; 0 <= u; u--)
          (l =
            (r = i.snapElements[u].left - i.margins.left) +
            i.snapElements[u].width),
            (c =
              (h = i.snapElements[u].top - i.margins.top) +
              i.snapElements[u].height),
            m < r - f ||
            l + f < g ||
            _ < h - f ||
            c + f < v ||
            !S.contains(
              i.snapElements[u].item.ownerDocument,
              i.snapElements[u].item
            )
              ? (i.snapElements[u].snapping &&
                  i.options.snap.release &&
                  i.options.snap.release.call(
                    i.element,
                    t,
                    S.extend(i._uiHash(), { snapItem: i.snapElements[u].item })
                  ),
                (i.snapElements[u].snapping = !1))
              : ("inner" !== p.snapMode &&
                  ((s = f >= Math.abs(h - _)),
                  (n = f >= Math.abs(c - v)),
                  (o = f >= Math.abs(r - m)),
                  (a = f >= Math.abs(l - g)),
                  s &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: h - i.helperProportions.height,
                      left: 0,
                    }).top),
                  n &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: c,
                      left: 0,
                    }).top),
                  o &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: r - i.helperProportions.width,
                    }).left),
                  a &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: l,
                    }).left)),
                (d = s || n || o || a),
                "outer" !== p.snapMode &&
                  ((s = f >= Math.abs(h - v)),
                  (n = f >= Math.abs(c - _)),
                  (o = f >= Math.abs(r - g)),
                  (a = f >= Math.abs(l - m)),
                  s &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: h,
                      left: 0,
                    }).top),
                  n &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: c - i.helperProportions.height,
                      left: 0,
                    }).top),
                  o &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: r,
                    }).left),
                  a &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: l - i.helperProportions.width,
                    }).left)),
                !i.snapElements[u].snapping &&
                  (s || n || o || a || d) &&
                  i.options.snap.snap &&
                  i.options.snap.snap.call(
                    i.element,
                    t,
                    S.extend(i._uiHash(), { snapItem: i.snapElements[u].item })
                  ),
                (i.snapElements[u].snapping = s || n || o || a || d));
      },
    }),
    S.ui.plugin.add("draggable", "stack", {
      start: function (t, e, i) {
        var s,
          n = i.options,
          o = S.makeArray(S(n.stack)).sort(function (t, e) {
            return (
              (parseInt(S(t).css("zIndex"), 10) || 0) -
              (parseInt(S(e).css("zIndex"), 10) || 0)
            );
          });
        o.length &&
          ((s = parseInt(S(o[0]).css("zIndex"), 10) || 0),
          S(o).each(function (t) {
            S(this).css("zIndex", s + t);
          }),
          this.css("zIndex", s + o.length));
      },
    }),
    S.ui.plugin.add("draggable", "zIndex", {
      start: function (t, e, i) {
        var s = S(e.helper),
          n = i.options;
        s.css("zIndex") && (n._zIndex = s.css("zIndex")),
          s.css("zIndex", n.zIndex);
      },
      stop: function (t, e, i) {
        var s = i.options;
        s._zIndex && S(e.helper).css("zIndex", s._zIndex);
      },
    }),
    S.ui.draggable,
    S.widget("ui.resizable", S.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "resize",
      options: {
        alsoResize: !1,
        animate: !1,
        animateDuration: "slow",
        animateEasing: "swing",
        aspectRatio: !1,
        autoHide: !1,
        classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" },
        containment: !1,
        ghost: !1,
        grid: !1,
        handles: "e,s,se",
        helper: !1,
        maxHeight: null,
        maxWidth: null,
        minHeight: 10,
        minWidth: 10,
        zIndex: 90,
        resize: null,
        start: null,
        stop: null,
      },
      _num: function (t) {
        return parseFloat(t) || 0;
      },
      _isNumber: function (t) {
        return !isNaN(parseFloat(t));
      },
      _hasScroll: function (t, e) {
        if ("hidden" === S(t).css("overflow")) return !1;
        var i = e && "left" === e ? "scrollLeft" : "scrollTop",
          s = !1;
        return 0 < t[i] || ((t[i] = 1), (s = 0 < t[i]), (t[i] = 0), s);
      },
      _create: function () {
        var t,
          e = this.options,
          i = this;
        this._addClass("ui-resizable"),
          S.extend(this, {
            _aspectRatio: !!e.aspectRatio,
            aspectRatio: e.aspectRatio,
            originalElement: this.element,
            _proportionallyResizeElements: [],
            _helper:
              e.helper || e.ghost || e.animate
                ? e.helper || "ui-resizable-helper"
                : null,
          }),
          this.element[0].nodeName.match(
            /^(canvas|textarea|input|select|button|img)$/i
          ) &&
            (this.element.wrap(
              S("<div class='ui-wrapper' style='overflow: hidden;'></div>").css(
                {
                  position: this.element.css("position"),
                  width: this.element.outerWidth(),
                  height: this.element.outerHeight(),
                  top: this.element.css("top"),
                  left: this.element.css("left"),
                }
              )
            ),
            (this.element = this.element
              .parent()
              .data("ui-resizable", this.element.resizable("instance"))),
            (this.elementIsWrapper = !0),
            (t = {
              marginTop: this.originalElement.css("marginTop"),
              marginRight: this.originalElement.css("marginRight"),
              marginBottom: this.originalElement.css("marginBottom"),
              marginLeft: this.originalElement.css("marginLeft"),
            }),
            this.element.css(t),
            this.originalElement.css("margin", 0),
            (this.originalResizeStyle = this.originalElement.css("resize")),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(
              this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block",
              })
            ),
            this.originalElement.css(t),
            this._proportionallyResize()),
          this._setupHandles(),
          e.autoHide &&
            S(this.element)
              .on("mouseenter", function () {
                e.disabled ||
                  (i._removeClass("ui-resizable-autohide"), i._handles.show());
              })
              .on("mouseleave", function () {
                e.disabled ||
                  i.resizing ||
                  (i._addClass("ui-resizable-autohide"), i._handles.hide());
              }),
          this._mouseInit();
      },
      _destroy: function () {
        this._mouseDestroy();
        var t,
          e = function (t) {
            S(t)
              .removeData("resizable")
              .removeData("ui-resizable")
              .off(".resizable")
              .find(".ui-resizable-handle")
              .remove();
          };
        return (
          this.elementIsWrapper &&
            (e(this.element),
            (t = this.element),
            this.originalElement
              .css({
                position: t.css("position"),
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: t.css("top"),
                left: t.css("left"),
              })
              .insertAfter(t),
            t.remove()),
          this.originalElement.css("resize", this.originalResizeStyle),
          e(this.originalElement),
          this
        );
      },
      _setOption: function (t, e) {
        switch ((this._super(t, e), t)) {
          case "handles":
            this._removeHandles(), this._setupHandles();
        }
      },
      _setupHandles: function () {
        var t,
          e,
          i,
          s,
          n,
          o = this.options,
          a = this;
        if (
          ((this.handles =
            o.handles ||
            (S(".ui-resizable-handle", this.element).length
              ? {
                  n: ".ui-resizable-n",
                  e: ".ui-resizable-e",
                  s: ".ui-resizable-s",
                  w: ".ui-resizable-w",
                  se: ".ui-resizable-se",
                  sw: ".ui-resizable-sw",
                  ne: ".ui-resizable-ne",
                  nw: ".ui-resizable-nw",
                }
              : "e,s,se")),
          (this._handles = S()),
          this.handles.constructor === String)
        )
          for (
            "all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
              i = this.handles.split(","),
              this.handles = {},
              e = 0;
            i.length > e;
            e++
          )
            (s = "ui-resizable-" + (t = S.trim(i[e]))),
              (n = S("<div>")),
              this._addClass(n, "ui-resizable-handle " + s),
              n.css({ zIndex: o.zIndex }),
              (this.handles[t] = ".ui-resizable-" + t),
              this.element.append(n);
        (this._renderAxis = function (t) {
          var e, i, s, n;
          for (e in ((t = t || this.element), this.handles))
            this.handles[e].constructor === String
              ? (this.handles[e] = this.element
                  .children(this.handles[e])
                  .first()
                  .show())
              : (this.handles[e].jquery || this.handles[e].nodeType) &&
                ((this.handles[e] = S(this.handles[e])),
                this._on(this.handles[e], { mousedown: a._mouseDown })),
              this.elementIsWrapper &&
                this.originalElement[0].nodeName.match(
                  /^(textarea|input|select|button)$/i
                ) &&
                ((i = S(this.handles[e], this.element)),
                (n = /sw|ne|nw|se|n|s/.test(e)
                  ? i.outerHeight()
                  : i.outerWidth()),
                (s = [
                  "padding",
                  /ne|nw|n/.test(e)
                    ? "Top"
                    : /se|sw|s/.test(e)
                    ? "Bottom"
                    : /^e$/.test(e)
                    ? "Right"
                    : "Left",
                ].join("")),
                t.css(s, n),
                this._proportionallyResize()),
              (this._handles = this._handles.add(this.handles[e]));
        }),
          this._renderAxis(this.element),
          (this._handles = this._handles.add(
            this.element.find(".ui-resizable-handle")
          )),
          this._handles.disableSelection(),
          this._handles.on("mouseover", function () {
            a.resizing ||
              (this.className &&
                (n = this.className.match(
                  /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i
                )),
              (a.axis = n && n[1] ? n[1] : "se"));
          }),
          o.autoHide &&
            (this._handles.hide(), this._addClass("ui-resizable-autohide"));
      },
      _removeHandles: function () {
        this._handles.remove();
      },
      _mouseCapture: function (t) {
        var e,
          i,
          s = !1;
        for (e in this.handles)
          ((i = S(this.handles[e])[0]) === t.target ||
            S.contains(i, t.target)) &&
            (s = !0);
        return !this.options.disabled && s;
      },
      _mouseStart: function (t) {
        var e,
          i,
          s,
          n = this.options,
          o = this.element;
        return (
          (this.resizing = !0),
          this._renderProxy(),
          (e = this._num(this.helper.css("left"))),
          (i = this._num(this.helper.css("top"))),
          n.containment &&
            ((e += S(n.containment).scrollLeft() || 0),
            (i += S(n.containment).scrollTop() || 0)),
          (this.offset = this.helper.offset()),
          (this.position = { left: e, top: i }),
          (this.size = this._helper
            ? { width: this.helper.width(), height: this.helper.height() }
            : { width: o.width(), height: o.height() }),
          (this.originalSize = this._helper
            ? { width: o.outerWidth(), height: o.outerHeight() }
            : { width: o.width(), height: o.height() }),
          (this.sizeDiff = {
            width: o.outerWidth() - o.width(),
            height: o.outerHeight() - o.height(),
          }),
          (this.originalPosition = { left: e, top: i }),
          (this.originalMousePosition = { left: t.pageX, top: t.pageY }),
          (this.aspectRatio =
            "number" == typeof n.aspectRatio
              ? n.aspectRatio
              : this.originalSize.width / this.originalSize.height || 1),
          (s = S(".ui-resizable-" + this.axis).css("cursor")),
          S("body").css("cursor", "auto" === s ? this.axis + "-resize" : s),
          this._addClass("ui-resizable-resizing"),
          this._propagate("start", t),
          !0
        );
      },
      _mouseDrag: function (t) {
        var e,
          i,
          s = this.originalMousePosition,
          n = this.axis,
          o = t.pageX - s.left || 0,
          a = t.pageY - s.top || 0,
          r = this._change[n];
        return (
          this._updatePrevProperties(),
          r &&
            ((e = r.apply(this, [t, o, a])),
            this._updateVirtualBoundaries(t.shiftKey),
            (this._aspectRatio || t.shiftKey) && (e = this._updateRatio(e, t)),
            (e = this._respectSize(e, t)),
            this._updateCache(e),
            this._propagate("resize", t),
            (i = this._applyChanges()),
            !this._helper &&
              this._proportionallyResizeElements.length &&
              this._proportionallyResize(),
            S.isEmptyObject(i) ||
              (this._updatePrevProperties(),
              this._trigger("resize", t, this.ui()),
              this._applyChanges())),
          !1
        );
      },
      _mouseStop: function (t) {
        this.resizing = !1;
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l = this.options,
          h = this;
        return (
          this._helper &&
            ((s =
              (i =
                (e = this._proportionallyResizeElements).length &&
                /textarea/i.test(e[0].nodeName)) &&
              this._hasScroll(e[0], "left")
                ? 0
                : h.sizeDiff.height),
            (n = i ? 0 : h.sizeDiff.width),
            (o = {
              width: h.helper.width() - n,
              height: h.helper.height() - s,
            }),
            (a =
              parseFloat(h.element.css("left")) +
                (h.position.left - h.originalPosition.left) || null),
            (r =
              parseFloat(h.element.css("top")) +
                (h.position.top - h.originalPosition.top) || null),
            l.animate || this.element.css(S.extend(o, { top: r, left: a })),
            h.helper.height(h.size.height),
            h.helper.width(h.size.width),
            this._helper && !l.animate && this._proportionallyResize()),
          S("body").css("cursor", "auto"),
          this._removeClass("ui-resizable-resizing"),
          this._propagate("stop", t),
          this._helper && this.helper.remove(),
          !1
        );
      },
      _updatePrevProperties: function () {
        (this.prevPosition = {
          top: this.position.top,
          left: this.position.left,
        }),
          (this.prevSize = {
            width: this.size.width,
            height: this.size.height,
          });
      },
      _applyChanges: function () {
        var t = {};
        return (
          this.position.top !== this.prevPosition.top &&
            (t.top = this.position.top + "px"),
          this.position.left !== this.prevPosition.left &&
            (t.left = this.position.left + "px"),
          this.size.width !== this.prevSize.width &&
            (t.width = this.size.width + "px"),
          this.size.height !== this.prevSize.height &&
            (t.height = this.size.height + "px"),
          this.helper.css(t),
          t
        );
      },
      _updateVirtualBoundaries: function (t) {
        var e,
          i,
          s,
          n,
          o,
          a = this.options;
        (o = {
          minWidth: this._isNumber(a.minWidth) ? a.minWidth : 0,
          maxWidth: this._isNumber(a.maxWidth) ? a.maxWidth : 1 / 0,
          minHeight: this._isNumber(a.minHeight) ? a.minHeight : 0,
          maxHeight: this._isNumber(a.maxHeight) ? a.maxHeight : 1 / 0,
        }),
          (this._aspectRatio || t) &&
            ((e = o.minHeight * this.aspectRatio),
            (s = o.minWidth / this.aspectRatio),
            (i = o.maxHeight * this.aspectRatio),
            (n = o.maxWidth / this.aspectRatio),
            e > o.minWidth && (o.minWidth = e),
            s > o.minHeight && (o.minHeight = s),
            o.maxWidth > i && (o.maxWidth = i),
            o.maxHeight > n && (o.maxHeight = n)),
          (this._vBoundaries = o);
      },
      _updateCache: function (t) {
        (this.offset = this.helper.offset()),
          this._isNumber(t.left) && (this.position.left = t.left),
          this._isNumber(t.top) && (this.position.top = t.top),
          this._isNumber(t.height) && (this.size.height = t.height),
          this._isNumber(t.width) && (this.size.width = t.width);
      },
      _updateRatio: function (t) {
        var e = this.position,
          i = this.size,
          s = this.axis;
        return (
          this._isNumber(t.height)
            ? (t.width = t.height * this.aspectRatio)
            : this._isNumber(t.width) &&
              (t.height = t.width / this.aspectRatio),
          "sw" === s &&
            ((t.left = e.left + (i.width - t.width)), (t.top = null)),
          "nw" === s &&
            ((t.top = e.top + (i.height - t.height)),
            (t.left = e.left + (i.width - t.width))),
          t
        );
      },
      _respectSize: function (t) {
        var e = this._vBoundaries,
          i = this.axis,
          s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width,
          n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height,
          o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width,
          a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height,
          r = this.originalPosition.left + this.originalSize.width,
          l = this.originalPosition.top + this.originalSize.height,
          h = /sw|nw|w/.test(i),
          c = /nw|ne|n/.test(i);
        return (
          o && (t.width = e.minWidth),
          a && (t.height = e.minHeight),
          s && (t.width = e.maxWidth),
          n && (t.height = e.maxHeight),
          o && h && (t.left = r - e.minWidth),
          s && h && (t.left = r - e.maxWidth),
          a && c && (t.top = l - e.minHeight),
          n && c && (t.top = l - e.maxHeight),
          t.width || t.height || t.left || !t.top
            ? t.width || t.height || t.top || !t.left || (t.left = null)
            : (t.top = null),
          t
        );
      },
      _getPaddingPlusBorderDimensions: function (t) {
        for (
          var e = 0,
            i = [],
            s = [
              t.css("borderTopWidth"),
              t.css("borderRightWidth"),
              t.css("borderBottomWidth"),
              t.css("borderLeftWidth"),
            ],
            n = [
              t.css("paddingTop"),
              t.css("paddingRight"),
              t.css("paddingBottom"),
              t.css("paddingLeft"),
            ];
          e < 4;
          e++
        )
          (i[e] = parseFloat(s[e]) || 0), (i[e] += parseFloat(n[e]) || 0);
        return { height: i[0] + i[2], width: i[1] + i[3] };
      },
      _proportionallyResize: function () {
        if (this._proportionallyResizeElements.length)
          for (
            var t, e = 0, i = this.helper || this.element;
            this._proportionallyResizeElements.length > e;
            e++
          )
            (t = this._proportionallyResizeElements[e]),
              this.outerDimensions ||
                (this.outerDimensions =
                  this._getPaddingPlusBorderDimensions(t)),
              t.css({
                height: i.height() - this.outerDimensions.height || 0,
                width: i.width() - this.outerDimensions.width || 0,
              });
      },
      _renderProxy: function () {
        var t = this.element,
          e = this.options;
        (this.elementOffset = t.offset()),
          this._helper
            ? ((this.helper =
                this.helper || S("<div style='overflow:hidden;'></div>")),
              this._addClass(this.helper, this._helper),
              this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++e.zIndex,
              }),
              this.helper.appendTo("body").disableSelection())
            : (this.helper = this.element);
      },
      _change: {
        e: function (t, e) {
          return { width: this.originalSize.width + e };
        },
        w: function (t, e) {
          var i = this.originalSize;
          return { left: this.originalPosition.left + e, width: i.width - e };
        },
        n: function (t, e, i) {
          var s = this.originalSize;
          return { top: this.originalPosition.top + i, height: s.height - i };
        },
        s: function (t, e, i) {
          return { height: this.originalSize.height + i };
        },
        se: function (t, e, i) {
          return S.extend(
            this._change.s.apply(this, arguments),
            this._change.e.apply(this, [t, e, i])
          );
        },
        sw: function (t, e, i) {
          return S.extend(
            this._change.s.apply(this, arguments),
            this._change.w.apply(this, [t, e, i])
          );
        },
        ne: function (t, e, i) {
          return S.extend(
            this._change.n.apply(this, arguments),
            this._change.e.apply(this, [t, e, i])
          );
        },
        nw: function (t, e, i) {
          return S.extend(
            this._change.n.apply(this, arguments),
            this._change.w.apply(this, [t, e, i])
          );
        },
      },
      _propagate: function (t, e) {
        S.ui.plugin.call(this, t, [e, this.ui()]),
          "resize" !== t && this._trigger(t, e, this.ui());
      },
      plugins: {},
      ui: function () {
        return {
          originalElement: this.originalElement,
          element: this.element,
          helper: this.helper,
          position: this.position,
          size: this.size,
          originalSize: this.originalSize,
          originalPosition: this.originalPosition,
        };
      },
    }),
    S.ui.plugin.add("resizable", "animate", {
      stop: function (e) {
        var i = S(this).resizable("instance"),
          t = i.options,
          s = i._proportionallyResizeElements,
          n = s.length && /textarea/i.test(s[0].nodeName),
          o = n && i._hasScroll(s[0], "left") ? 0 : i.sizeDiff.height,
          a = n ? 0 : i.sizeDiff.width,
          r = { width: i.size.width - a, height: i.size.height - o },
          l =
            parseFloat(i.element.css("left")) +
              (i.position.left - i.originalPosition.left) || null,
          h =
            parseFloat(i.element.css("top")) +
              (i.position.top - i.originalPosition.top) || null;
        i.element.animate(S.extend(r, h && l ? { top: h, left: l } : {}), {
          duration: t.animateDuration,
          easing: t.animateEasing,
          step: function () {
            var t = {
              width: parseFloat(i.element.css("width")),
              height: parseFloat(i.element.css("height")),
              top: parseFloat(i.element.css("top")),
              left: parseFloat(i.element.css("left")),
            };
            s && s.length && S(s[0]).css({ width: t.width, height: t.height }),
              i._updateCache(t),
              i._propagate("resize", e);
          },
        });
      },
    }),
    S.ui.plugin.add("resizable", "containment", {
      start: function () {
        var i,
          s,
          t,
          e,
          n,
          o,
          a,
          r = S(this).resizable("instance"),
          l = r.options,
          h = r.element,
          c = l.containment,
          u =
            c instanceof S
              ? c.get(0)
              : /parent/.test(c)
              ? h.parent().get(0)
              : c;
        u &&
          ((r.containerElement = S(u)),
          /document/.test(c) || c === document
            ? ((r.containerOffset = { left: 0, top: 0 }),
              (r.containerPosition = { left: 0, top: 0 }),
              (r.parentData = {
                element: S(document),
                left: 0,
                top: 0,
                width: S(document).width(),
                height:
                  S(document).height() || document.body.parentNode.scrollHeight,
              }))
            : ((i = S(u)),
              (s = []),
              S(["Top", "Right", "Left", "Bottom"]).each(function (t, e) {
                s[t] = r._num(i.css("padding" + e));
              }),
              (r.containerOffset = i.offset()),
              (r.containerPosition = i.position()),
              (r.containerSize = {
                height: i.innerHeight() - s[3],
                width: i.innerWidth() - s[1],
              }),
              (t = r.containerOffset),
              (e = r.containerSize.height),
              (n = r.containerSize.width),
              (o = r._hasScroll(u, "left") ? u.scrollWidth : n),
              (a = r._hasScroll(u) ? u.scrollHeight : e),
              (r.parentData = {
                element: u,
                left: t.left,
                top: t.top,
                width: o,
                height: a,
              })));
      },
      resize: function (t) {
        var e,
          i,
          s,
          n,
          o = S(this).resizable("instance"),
          a = o.options,
          r = o.containerOffset,
          l = o.position,
          h = o._aspectRatio || t.shiftKey,
          c = { top: 0, left: 0 },
          u = o.containerElement,
          d = !0;
        u[0] !== document && /static/.test(u.css("position")) && (c = r),
          l.left < (o._helper ? r.left : 0) &&
            ((o.size.width =
              o.size.width +
              (o._helper
                ? o.position.left - r.left
                : o.position.left - c.left)),
            h && ((o.size.height = o.size.width / o.aspectRatio), (d = !1)),
            (o.position.left = a.helper ? r.left : 0)),
          l.top < (o._helper ? r.top : 0) &&
            ((o.size.height =
              o.size.height +
              (o._helper ? o.position.top - r.top : o.position.top)),
            h && ((o.size.width = o.size.height * o.aspectRatio), (d = !1)),
            (o.position.top = o._helper ? r.top : 0)),
          (s = o.containerElement.get(0) === o.element.parent().get(0)),
          (n = /relative|absolute/.test(o.containerElement.css("position"))),
          s && n
            ? ((o.offset.left = o.parentData.left + o.position.left),
              (o.offset.top = o.parentData.top + o.position.top))
            : ((o.offset.left = o.element.offset().left),
              (o.offset.top = o.element.offset().top)),
          (e = Math.abs(
            o.sizeDiff.width +
              (o._helper ? o.offset.left - c.left : o.offset.left - r.left)
          )),
          (i = Math.abs(
            o.sizeDiff.height +
              (o._helper ? o.offset.top - c.top : o.offset.top - r.top)
          )),
          e + o.size.width >= o.parentData.width &&
            ((o.size.width = o.parentData.width - e),
            h && ((o.size.height = o.size.width / o.aspectRatio), (d = !1))),
          i + o.size.height >= o.parentData.height &&
            ((o.size.height = o.parentData.height - i),
            h && ((o.size.width = o.size.height * o.aspectRatio), (d = !1))),
          d ||
            ((o.position.left = o.prevPosition.left),
            (o.position.top = o.prevPosition.top),
            (o.size.width = o.prevSize.width),
            (o.size.height = o.prevSize.height));
      },
      stop: function () {
        var t = S(this).resizable("instance"),
          e = t.options,
          i = t.containerOffset,
          s = t.containerPosition,
          n = t.containerElement,
          o = S(t.helper),
          a = o.offset(),
          r = o.outerWidth() - t.sizeDiff.width,
          l = o.outerHeight() - t.sizeDiff.height;
        t._helper &&
          !e.animate &&
          /relative/.test(n.css("position")) &&
          S(this).css({ left: a.left - s.left - i.left, width: r, height: l }),
          t._helper &&
            !e.animate &&
            /static/.test(n.css("position")) &&
            S(this).css({
              left: a.left - s.left - i.left,
              width: r,
              height: l,
            });
      },
    }),
    S.ui.plugin.add("resizable", "alsoResize", {
      start: function () {
        var t = S(this).resizable("instance").options;
        S(t.alsoResize).each(function () {
          var t = S(this);
          t.data("ui-resizable-alsoresize", {
            width: parseFloat(t.width()),
            height: parseFloat(t.height()),
            left: parseFloat(t.css("left")),
            top: parseFloat(t.css("top")),
          });
        });
      },
      resize: function (t, i) {
        var e = S(this).resizable("instance"),
          s = e.options,
          n = e.originalSize,
          o = e.originalPosition,
          a = {
            height: e.size.height - n.height || 0,
            width: e.size.width - n.width || 0,
            top: e.position.top - o.top || 0,
            left: e.position.left - o.left || 0,
          };
        S(s.alsoResize).each(function () {
          var t = S(this),
            s = S(this).data("ui-resizable-alsoresize"),
            n = {},
            e = t.parents(i.originalElement[0]).length
              ? ["width", "height"]
              : ["width", "height", "top", "left"];
          S.each(e, function (t, e) {
            var i = (s[e] || 0) + (a[e] || 0);
            i && 0 <= i && (n[e] = i || null);
          }),
            t.css(n);
        });
      },
      stop: function () {
        S(this).removeData("ui-resizable-alsoresize");
      },
    }),
    S.ui.plugin.add("resizable", "ghost", {
      start: function () {
        var t = S(this).resizable("instance"),
          e = t.size;
        (t.ghost = t.originalElement.clone()),
          t.ghost.css({
            opacity: 0.25,
            display: "block",
            position: "relative",
            height: e.height,
            width: e.width,
            margin: 0,
            left: 0,
            top: 0,
          }),
          t._addClass(t.ghost, "ui-resizable-ghost"),
          !1 !== S.uiBackCompat &&
            "string" == typeof t.options.ghost &&
            t.ghost.addClass(this.options.ghost),
          t.ghost.appendTo(t.helper);
      },
      resize: function () {
        var t = S(this).resizable("instance");
        t.ghost &&
          t.ghost.css({
            position: "relative",
            height: t.size.height,
            width: t.size.width,
          });
      },
      stop: function () {
        var t = S(this).resizable("instance");
        t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));
      },
    }),
    S.ui.plugin.add("resizable", "grid", {
      resize: function () {
        var t,
          e = S(this).resizable("instance"),
          i = e.options,
          s = e.size,
          n = e.originalSize,
          o = e.originalPosition,
          a = e.axis,
          r = "number" == typeof i.grid ? [i.grid, i.grid] : i.grid,
          l = r[0] || 1,
          h = r[1] || 1,
          c = Math.round((s.width - n.width) / l) * l,
          u = Math.round((s.height - n.height) / h) * h,
          d = n.width + c,
          p = n.height + u,
          f = i.maxWidth && d > i.maxWidth,
          g = i.maxHeight && p > i.maxHeight,
          m = i.minWidth && i.minWidth > d,
          v = i.minHeight && i.minHeight > p;
        (i.grid = r),
          m && (d += l),
          v && (p += h),
          f && (d -= l),
          g && (p -= h),
          /^(se|s|e)$/.test(a)
            ? ((e.size.width = d), (e.size.height = p))
            : /^(ne)$/.test(a)
            ? ((e.size.width = d),
              (e.size.height = p),
              (e.position.top = o.top - u))
            : /^(sw)$/.test(a)
            ? ((e.size.width = d),
              (e.size.height = p),
              (e.position.left = o.left - c))
            : ((p - h <= 0 || d - l <= 0) &&
                (t = e._getPaddingPlusBorderDimensions(this)),
              0 < p - h
                ? ((e.size.height = p), (e.position.top = o.top - u))
                : ((p = h - t.height),
                  (e.size.height = p),
                  (e.position.top = o.top + n.height - p)),
              0 < d - l
                ? ((e.size.width = d), (e.position.left = o.left - c))
                : ((d = l - t.width),
                  (e.size.width = d),
                  (e.position.left = o.left + n.width - d)));
      },
    }),
    S.ui.resizable,
    S.widget("ui.dialog", {
      version: "1.12.1",
      options: {
        appendTo: "body",
        autoOpen: !0,
        buttons: [],
        classes: {
          "ui-dialog": "ui-corner-all",
          "ui-dialog-titlebar": "ui-corner-all",
        },
        closeOnEscape: !0,
        closeText: "Close",
        draggable: !0,
        hide: null,
        height: "auto",
        maxHeight: null,
        maxWidth: null,
        minHeight: 150,
        minWidth: 150,
        modal: !1,
        position: {
          my: "center",
          at: "center",
          of: window,
          collision: "fit",
          using: function (t) {
            var e = S(this).css(t).offset().top;
            e < 0 && S(this).css("top", t.top - e);
          },
        },
        resizable: !0,
        show: null,
        title: null,
        width: 300,
        beforeClose: null,
        close: null,
        drag: null,
        dragStart: null,
        dragStop: null,
        focus: null,
        open: null,
        resize: null,
        resizeStart: null,
        resizeStop: null,
      },
      sizeRelatedOptions: {
        buttons: !0,
        height: !0,
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
        width: !0,
      },
      resizableRelatedOptions: {
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
      },
      _create: function () {
        (this.originalCss = {
          display: this.element[0].style.display,
          width: this.element[0].style.width,
          minHeight: this.element[0].style.minHeight,
          maxHeight: this.element[0].style.maxHeight,
          height: this.element[0].style.height,
        }),
          (this.originalPosition = {
            parent: this.element.parent(),
            index: this.element.parent().children().index(this.element),
          }),
          (this.originalTitle = this.element.attr("title")),
          null == this.options.title &&
            null != this.originalTitle &&
            (this.options.title = this.originalTitle),
          this.options.disabled && (this.options.disabled = !1),
          this._createWrapper(),
          this.element.show().removeAttr("title").appendTo(this.uiDialog),
          this._addClass("ui-dialog-content", "ui-widget-content"),
          this._createTitlebar(),
          this._createButtonPane(),
          this.options.draggable && S.fn.draggable && this._makeDraggable(),
          this.options.resizable && S.fn.resizable && this._makeResizable(),
          (this._isOpen = !1),
          this._trackFocus();
      },
      _init: function () {
        this.options.autoOpen && this.open();
      },
      _appendTo: function () {
        var t = this.options.appendTo;
        return t && (t.jquery || t.nodeType)
          ? S(t)
          : this.document.find(t || "body").eq(0);
      },
      _destroy: function () {
        var t,
          e = this.originalPosition;
        this._untrackInstance(),
          this._destroyOverlay(),
          this.element.removeUniqueId().css(this.originalCss).detach(),
          this.uiDialog.remove(),
          this.originalTitle && this.element.attr("title", this.originalTitle),
          (t = e.parent.children().eq(e.index)).length &&
          t[0] !== this.element[0]
            ? t.before(this.element)
            : e.parent.append(this.element);
      },
      widget: function () {
        return this.uiDialog;
      },
      disable: S.noop,
      enable: S.noop,
      close: function (t) {
        var e = this;
        this._isOpen &&
          !1 !== this._trigger("beforeClose", t) &&
          ((this._isOpen = !1),
          (this._focusedElement = null),
          this._destroyOverlay(),
          this._untrackInstance(),
          this.opener.filter(":focusable").trigger("focus").length ||
            S.ui.safeBlur(S.ui.safeActiveElement(this.document[0])),
          this._hide(this.uiDialog, this.options.hide, function () {
            e._trigger("close", t);
          }));
      },
      isOpen: function () {
        return this._isOpen;
      },
      moveToTop: function () {
        this._moveToTop();
      },
      _moveToTop: function (t, e) {
        var i = !1,
          s = this.uiDialog
            .siblings(".ui-front:visible")
            .map(function () {
              return +S(this).css("z-index");
            })
            .get(),
          n = Math.max.apply(null, s);
        return (
          n >= +this.uiDialog.css("z-index") &&
            (this.uiDialog.css("z-index", n + 1), (i = !0)),
          i && !e && this._trigger("focus", t),
          i
        );
      },
      open: function () {
        var t = this;
        return this._isOpen
          ? void (this._moveToTop() && this._focusTabbable())
          : ((this._isOpen = !0),
            (this.opener = S(S.ui.safeActiveElement(this.document[0]))),
            this._size(),
            this._position(),
            this._createOverlay(),
            this._moveToTop(null, !0),
            this.overlay &&
              this.overlay.css("z-index", this.uiDialog.css("z-index") - 1),
            this._show(this.uiDialog, this.options.show, function () {
              t._focusTabbable(), t._trigger("focus");
            }),
            this._makeFocusTarget(),
            void this._trigger("open"));
      },
      _focusTabbable: function () {
        var t = this._focusedElement;
        t || (t = this.element.find("[autofocus]")),
          t.length || (t = this.element.find(":tabbable")),
          t.length || (t = this.uiDialogButtonPane.find(":tabbable")),
          t.length || (t = this.uiDialogTitlebarClose.filter(":tabbable")),
          t.length || (t = this.uiDialog),
          t.eq(0).trigger("focus");
      },
      _keepFocus: function (t) {
        function e() {
          var t = S.ui.safeActiveElement(this.document[0]);
          this.uiDialog[0] === t ||
            S.contains(this.uiDialog[0], t) ||
            this._focusTabbable();
        }
        t.preventDefault(), e.call(this), this._delay(e);
      },
      _createWrapper: function () {
        (this.uiDialog = S("<div>")
          .hide()
          .attr({ tabIndex: -1, role: "dialog" })
          .appendTo(this._appendTo())),
          this._addClass(
            this.uiDialog,
            "ui-dialog",
            "ui-widget ui-widget-content ui-front"
          ),
          this._on(this.uiDialog, {
            keydown: function (t) {
              if (
                this.options.closeOnEscape &&
                !t.isDefaultPrevented() &&
                t.keyCode &&
                t.keyCode === S.ui.keyCode.ESCAPE
              )
                return t.preventDefault(), void this.close(t);
              if (t.keyCode === S.ui.keyCode.TAB && !t.isDefaultPrevented()) {
                var e = this.uiDialog.find(":tabbable"),
                  i = e.filter(":first"),
                  s = e.filter(":last");
                (t.target !== s[0] && t.target !== this.uiDialog[0]) ||
                t.shiftKey
                  ? (t.target !== i[0] && t.target !== this.uiDialog[0]) ||
                    !t.shiftKey ||
                    (this._delay(function () {
                      s.trigger("focus");
                    }),
                    t.preventDefault())
                  : (this._delay(function () {
                      i.trigger("focus");
                    }),
                    t.preventDefault());
              }
            },
            mousedown: function (t) {
              this._moveToTop(t) && this._focusTabbable();
            },
          }),
          this.element.find("[aria-describedby]").length ||
            this.uiDialog.attr({
              "aria-describedby": this.element.uniqueId().attr("id"),
            });
      },
      _createTitlebar: function () {
        var t;
        (this.uiDialogTitlebar = S("<div>")),
          this._addClass(
            this.uiDialogTitlebar,
            "ui-dialog-titlebar",
            "ui-widget-header ui-helper-clearfix"
          ),
          this._on(this.uiDialogTitlebar, {
            mousedown: function (t) {
              S(t.target).closest(".ui-dialog-titlebar-close") ||
                this.uiDialog.trigger("focus");
            },
          }),
          (this.uiDialogTitlebarClose = S("<button type='button'></button>")
            .button({
              label: S("<a>").text(this.options.closeText).html(),
              icon: "ui-icon-closethick",
              showLabel: !1,
            })
            .appendTo(this.uiDialogTitlebar)),
          this._addClass(
            this.uiDialogTitlebarClose,
            "ui-dialog-titlebar-close"
          ),
          this._on(this.uiDialogTitlebarClose, {
            click: function (t) {
              t.preventDefault(), this.close(t);
            },
          }),
          (t = S("<span>").uniqueId().prependTo(this.uiDialogTitlebar)),
          this._addClass(t, "ui-dialog-title"),
          this._title(t),
          this.uiDialogTitlebar.prependTo(this.uiDialog),
          this.uiDialog.attr({ "aria-labelledby": t.attr("id") });
      },
      _title: function (t) {
        this.options.title ? t.text(this.options.title) : t.html("&#160;");
      },
      _createButtonPane: function () {
        (this.uiDialogButtonPane = S("<div>")),
          this._addClass(
            this.uiDialogButtonPane,
            "ui-dialog-buttonpane",
            "ui-widget-content ui-helper-clearfix"
          ),
          (this.uiButtonSet = S("<div>").appendTo(this.uiDialogButtonPane)),
          this._addClass(this.uiButtonSet, "ui-dialog-buttonset"),
          this._createButtons();
      },
      _createButtons: function () {
        var n = this,
          t = this.options.buttons;
        return (
          this.uiDialogButtonPane.remove(),
          this.uiButtonSet.empty(),
          S.isEmptyObject(t) || (S.isArray(t) && !t.length)
            ? void this._removeClass(this.uiDialog, "ui-dialog-buttons")
            : (S.each(t, function (t, e) {
                var i, s;
                (e = S.isFunction(e) ? { click: e, text: t } : e),
                  (e = S.extend({ type: "button" }, e)),
                  (i = e.click),
                  (s = {
                    icon: e.icon,
                    iconPosition: e.iconPosition,
                    showLabel: e.showLabel,
                    icons: e.icons,
                    text: e.text,
                  }),
                  delete e.click,
                  delete e.icon,
                  delete e.iconPosition,
                  delete e.showLabel,
                  delete e.icons,
                  "boolean" == typeof e.text && delete e.text,
                  S("<button></button>", e)
                    .button(s)
                    .appendTo(n.uiButtonSet)
                    .on("click", function () {
                      i.apply(n.element[0], arguments);
                    });
              }),
              this._addClass(this.uiDialog, "ui-dialog-buttons"),
              void this.uiDialogButtonPane.appendTo(this.uiDialog))
        );
      },
      _makeDraggable: function () {
        function n(t) {
          return { position: t.position, offset: t.offset };
        }
        var o = this,
          a = this.options;
        this.uiDialog.draggable({
          cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
          handle: ".ui-dialog-titlebar",
          containment: "document",
          start: function (t, e) {
            o._addClass(S(this), "ui-dialog-dragging"),
              o._blockFrames(),
              o._trigger("dragStart", t, n(e));
          },
          drag: function (t, e) {
            o._trigger("drag", t, n(e));
          },
          stop: function (t, e) {
            var i = e.offset.left - o.document.scrollLeft(),
              s = e.offset.top - o.document.scrollTop();
            (a.position = {
              my: "left top",
              at:
                "left" +
                (0 <= i ? "+" : "") +
                i +
                " top" +
                (0 <= s ? "+" : "") +
                s,
              of: o.window,
            }),
              o._removeClass(S(this), "ui-dialog-dragging"),
              o._unblockFrames(),
              o._trigger("dragStop", t, n(e));
          },
        });
      },
      _makeResizable: function () {
        function o(t) {
          return {
            originalPosition: t.originalPosition,
            originalSize: t.originalSize,
            position: t.position,
            size: t.size,
          };
        }
        var a = this,
          r = this.options,
          t = r.resizable,
          e = this.uiDialog.css("position"),
          i = "string" == typeof t ? t : "n,e,s,w,se,sw,ne,nw";
        this.uiDialog
          .resizable({
            cancel: ".ui-dialog-content",
            containment: "document",
            alsoResize: this.element,
            maxWidth: r.maxWidth,
            maxHeight: r.maxHeight,
            minWidth: r.minWidth,
            minHeight: this._minHeight(),
            handles: i,
            start: function (t, e) {
              a._addClass(S(this), "ui-dialog-resizing"),
                a._blockFrames(),
                a._trigger("resizeStart", t, o(e));
            },
            resize: function (t, e) {
              a._trigger("resize", t, o(e));
            },
            stop: function (t, e) {
              var i = a.uiDialog.offset(),
                s = i.left - a.document.scrollLeft(),
                n = i.top - a.document.scrollTop();
              (r.height = a.uiDialog.height()),
                (r.width = a.uiDialog.width()),
                (r.position = {
                  my: "left top",
                  at:
                    "left" +
                    (0 <= s ? "+" : "") +
                    s +
                    " top" +
                    (0 <= n ? "+" : "") +
                    n,
                  of: a.window,
                }),
                a._removeClass(S(this), "ui-dialog-resizing"),
                a._unblockFrames(),
                a._trigger("resizeStop", t, o(e));
            },
          })
          .css("position", e);
      },
      _trackFocus: function () {
        this._on(this.widget(), {
          focusin: function (t) {
            this._makeFocusTarget(), (this._focusedElement = S(t.target));
          },
        });
      },
      _makeFocusTarget: function () {
        this._untrackInstance(), this._trackingInstances().unshift(this);
      },
      _untrackInstance: function () {
        var t = this._trackingInstances(),
          e = S.inArray(this, t);
        -1 !== e && t.splice(e, 1);
      },
      _trackingInstances: function () {
        var t = this.document.data("ui-dialog-instances");
        return t || ((t = []), this.document.data("ui-dialog-instances", t)), t;
      },
      _minHeight: function () {
        var t = this.options;
        return "auto" === t.height
          ? t.minHeight
          : Math.min(t.minHeight, t.height);
      },
      _position: function () {
        var t = this.uiDialog.is(":visible");
        t || this.uiDialog.show(),
          this.uiDialog.position(this.options.position),
          t || this.uiDialog.hide();
      },
      _setOptions: function (t) {
        var i = this,
          s = !1,
          n = {};
        S.each(t, function (t, e) {
          i._setOption(t, e),
            t in i.sizeRelatedOptions && (s = !0),
            t in i.resizableRelatedOptions && (n[t] = e);
        }),
          s && (this._size(), this._position()),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", n);
      },
      _setOption: function (t, e) {
        var i,
          s,
          n = this.uiDialog;
        "disabled" !== t &&
          (this._super(t, e),
          "appendTo" === t && this.uiDialog.appendTo(this._appendTo()),
          "buttons" === t && this._createButtons(),
          "closeText" === t &&
            this.uiDialogTitlebarClose.button({
              label: S("<a>")
                .text("" + this.options.closeText)
                .html(),
            }),
          "draggable" === t &&
            ((i = n.is(":data(ui-draggable)")) && !e && n.draggable("destroy"),
            !i && e && this._makeDraggable()),
          "position" === t && this._position(),
          "resizable" === t &&
            ((s = n.is(":data(ui-resizable)")) && !e && n.resizable("destroy"),
            s && "string" == typeof e && n.resizable("option", "handles", e),
            s || !1 === e || this._makeResizable()),
          "title" === t &&
            this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
      },
      _size: function () {
        var t,
          e,
          i,
          s = this.options;
        this.element
          .show()
          .css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }),
          s.minWidth > s.width && (s.width = s.minWidth),
          (t = this.uiDialog
            .css({ height: "auto", width: s.width })
            .outerHeight()),
          (e = Math.max(0, s.minHeight - t)),
          (i =
            "number" == typeof s.maxHeight
              ? Math.max(0, s.maxHeight - t)
              : "none"),
          "auto" === s.height
            ? this.element.css({ minHeight: e, maxHeight: i, height: "auto" })
            : this.element.height(Math.max(0, s.height - t)),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", "minHeight", this._minHeight());
      },
      _blockFrames: function () {
        this.iframeBlocks = this.document.find("iframe").map(function () {
          var t = S(this);
          return S("<div>")
            .css({
              position: "absolute",
              width: t.outerWidth(),
              height: t.outerHeight(),
            })
            .appendTo(t.parent())
            .offset(t.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _allowInteraction: function (t) {
        return (
          !!S(t.target).closest(".ui-dialog").length ||
          !!S(t.target).closest(".ui-datepicker").length
        );
      },
      _createOverlay: function () {
        if (this.options.modal) {
          var e = !0;
          this._delay(function () {
            e = !1;
          }),
            this.document.data("ui-dialog-overlays") ||
              this._on(this.document, {
                focusin: function (t) {
                  e ||
                    this._allowInteraction(t) ||
                    (t.preventDefault(),
                    this._trackingInstances()[0]._focusTabbable());
                },
              }),
            (this.overlay = S("<div>").appendTo(this._appendTo())),
            this._addClass(this.overlay, null, "ui-widget-overlay ui-front"),
            this._on(this.overlay, { mousedown: "_keepFocus" }),
            this.document.data(
              "ui-dialog-overlays",
              (this.document.data("ui-dialog-overlays") || 0) + 1
            );
        }
      },
      _destroyOverlay: function () {
        if (this.options.modal && this.overlay) {
          var t = this.document.data("ui-dialog-overlays") - 1;
          t
            ? this.document.data("ui-dialog-overlays", t)
            : (this._off(this.document, "focusin"),
              this.document.removeData("ui-dialog-overlays")),
            this.overlay.remove(),
            (this.overlay = null);
        }
      },
    }),
    !1 !== S.uiBackCompat &&
      S.widget("ui.dialog", S.ui.dialog, {
        options: { dialogClass: "" },
        _createWrapper: function () {
          this._super(), this.uiDialog.addClass(this.options.dialogClass);
        },
        _setOption: function (t, e) {
          "dialogClass" === t &&
            this.uiDialog.removeClass(this.options.dialogClass).addClass(e),
            this._superApply(arguments);
        },
      }),
    S.ui.dialog,
    S.widget("ui.droppable", {
      version: "1.12.1",
      widgetEventPrefix: "drop",
      options: {
        accept: "*",
        addClasses: !0,
        greedy: !1,
        scope: "default",
        tolerance: "intersect",
        activate: null,
        deactivate: null,
        drop: null,
        out: null,
        over: null,
      },
      _create: function () {
        var t,
          e = this.options,
          i = e.accept;
        (this.isover = !1),
          (this.isout = !0),
          (this.accept = S.isFunction(i)
            ? i
            : function (t) {
                return t.is(i);
              }),
          (this.proportions = function () {
            return arguments.length
              ? void (t = arguments[0])
              : t ||
                  (t = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight,
                  });
          }),
          this._addToManager(e.scope),
          e.addClasses && this._addClass("ui-droppable");
      },
      _addToManager: function (t) {
        (S.ui.ddmanager.droppables[t] = S.ui.ddmanager.droppables[t] || []),
          S.ui.ddmanager.droppables[t].push(this);
      },
      _splice: function (t) {
        for (var e = 0; t.length > e; e++) t[e] === this && t.splice(e, 1);
      },
      _destroy: function () {
        var t = S.ui.ddmanager.droppables[this.options.scope];
        this._splice(t);
      },
      _setOption: function (t, e) {
        if ("accept" === t)
          this.accept = S.isFunction(e)
            ? e
            : function (t) {
                return t.is(e);
              };
        else if ("scope" === t) {
          var i = S.ui.ddmanager.droppables[this.options.scope];
          this._splice(i), this._addToManager(e);
        }
        this._super(t, e);
      },
      _activate: function (t) {
        var e = S.ui.ddmanager.current;
        this._addActiveClass(), e && this._trigger("activate", t, this.ui(e));
      },
      _deactivate: function (t) {
        var e = S.ui.ddmanager.current;
        this._removeActiveClass(),
          e && this._trigger("deactivate", t, this.ui(e));
      },
      _over: function (t) {
        var e = S.ui.ddmanager.current;
        e &&
          (e.currentItem || e.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], e.currentItem || e.element) &&
          (this._addHoverClass(), this._trigger("over", t, this.ui(e)));
      },
      _out: function (t) {
        var e = S.ui.ddmanager.current;
        e &&
          (e.currentItem || e.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], e.currentItem || e.element) &&
          (this._removeHoverClass(), this._trigger("out", t, this.ui(e)));
      },
      _drop: function (e, t) {
        var i = t || S.ui.ddmanager.current,
          s = !1;
        return (
          !(!i || (i.currentItem || i.element)[0] === this.element[0]) &&
          (this.element
            .find(":data(ui-droppable)")
            .not(".ui-draggable-dragging")
            .each(function () {
              var t = S(this).droppable("instance");
              return t.options.greedy &&
                !t.options.disabled &&
                t.options.scope === i.options.scope &&
                t.accept.call(t.element[0], i.currentItem || i.element) &&
                w(
                  i,
                  S.extend(t, { offset: t.element.offset() }),
                  t.options.tolerance,
                  e
                )
                ? !(s = !0)
                : void 0;
            }),
          !s &&
            !!this.accept.call(this.element[0], i.currentItem || i.element) &&
            (this._removeActiveClass(),
            this._removeHoverClass(),
            this._trigger("drop", e, this.ui(i)),
            this.element))
        );
      },
      ui: function (t) {
        return {
          draggable: t.currentItem || t.element,
          helper: t.helper,
          position: t.position,
          offset: t.positionAbs,
        };
      },
      _addHoverClass: function () {
        this._addClass("ui-droppable-hover");
      },
      _removeHoverClass: function () {
        this._removeClass("ui-droppable-hover");
      },
      _addActiveClass: function () {
        this._addClass("ui-droppable-active");
      },
      _removeActiveClass: function () {
        this._removeClass("ui-droppable-active");
      },
    });
  var y,
    w = (S.ui.intersect = (function () {
      function d(t, e, i) {
        return e <= t && t < e + i;
      }
      return function (t, e, i, s) {
        if (!e.offset) return !1;
        var n = (t.positionAbs || t.position.absolute).left + t.margins.left,
          o = (t.positionAbs || t.position.absolute).top + t.margins.top,
          a = n + t.helperProportions.width,
          r = o + t.helperProportions.height,
          l = e.offset.left,
          h = e.offset.top,
          c = l + e.proportions().width,
          u = h + e.proportions().height;
        switch (i) {
          case "fit":
            return l <= n && a <= c && h <= o && r <= u;
          case "intersect":
            return (
              n + t.helperProportions.width / 2 > l &&
              c > a - t.helperProportions.width / 2 &&
              o + t.helperProportions.height / 2 > h &&
              u > r - t.helperProportions.height / 2
            );
          case "pointer":
            return (
              d(s.pageY, h, e.proportions().height) &&
              d(s.pageX, l, e.proportions().width)
            );
          case "touch":
            return (
              ((h <= o && o <= u) || (h <= r && r <= u) || (o < h && u < r)) &&
              ((l <= n && n <= c) || (l <= a && a <= c) || (n < l && c < a))
            );
          default:
            return !1;
        }
      };
    })());
  !(S.ui.ddmanager = {
    current: null,
    droppables: { default: [] },
    prepareOffsets: function (t, e) {
      var i,
        s,
        n = S.ui.ddmanager.droppables[t.options.scope] || [],
        o = e ? e.type : null,
        a = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();
      t: for (i = 0; n.length > i; i++)
        if (
          !(
            n[i].options.disabled ||
            (t &&
              !n[i].accept.call(n[i].element[0], t.currentItem || t.element))
          )
        ) {
          for (s = 0; a.length > s; s++)
            if (a[s] === n[i].element[0]) {
              n[i].proportions().height = 0;
              continue t;
            }
          (n[i].visible = "none" !== n[i].element.css("display")),
            n[i].visible &&
              ("mousedown" === o && n[i]._activate.call(n[i], e),
              (n[i].offset = n[i].element.offset()),
              n[i].proportions({
                width: n[i].element[0].offsetWidth,
                height: n[i].element[0].offsetHeight,
              }));
        }
    },
    drop: function (t, e) {
      var i = !1;
      return (
        S.each(
          (S.ui.ddmanager.droppables[t.options.scope] || []).slice(),
          function () {
            this.options &&
              (!this.options.disabled &&
                this.visible &&
                w(t, this, this.options.tolerance, e) &&
                (i = this._drop.call(this, e) || i),
              !this.options.disabled &&
                this.visible &&
                this.accept.call(this.element[0], t.currentItem || t.element) &&
                ((this.isout = !0),
                (this.isover = !1),
                this._deactivate.call(this, e)));
          }
        ),
        i
      );
    },
    dragStart: function (t, e) {
      t.element.parentsUntil("body").on("scroll.droppable", function () {
        t.options.refreshPositions || S.ui.ddmanager.prepareOffsets(t, e);
      });
    },
    drag: function (o, a) {
      o.options.refreshPositions && S.ui.ddmanager.prepareOffsets(o, a),
        S.each(S.ui.ddmanager.droppables[o.options.scope] || [], function () {
          if (!this.options.disabled && !this.greedyChild && this.visible) {
            var t,
              e,
              i,
              s = w(o, this, this.options.tolerance, a),
              n =
                !s && this.isover
                  ? "isout"
                  : s && !this.isover
                  ? "isover"
                  : null;
            n &&
              (this.options.greedy &&
                ((e = this.options.scope),
                (i = this.element
                  .parents(":data(ui-droppable)")
                  .filter(function () {
                    return S(this).droppable("instance").options.scope === e;
                  })).length &&
                  ((t = S(i[0]).droppable("instance")).greedyChild =
                    "isover" === n)),
              t &&
                "isover" === n &&
                ((t.isover = !1), (t.isout = !0), t._out.call(t, a)),
              (this[n] = !0),
              (this["isout" === n ? "isover" : "isout"] = !1),
              this["isover" === n ? "_over" : "_out"].call(this, a),
              t &&
                "isout" === n &&
                ((t.isout = !1), (t.isover = !0), t._over.call(t, a)));
          }
        });
    },
    dragStop: function (t, e) {
      t.element.parentsUntil("body").off("scroll.droppable"),
        t.options.refreshPositions || S.ui.ddmanager.prepareOffsets(t, e);
    },
  }) !== S.uiBackCompat &&
    S.widget("ui.droppable", S.ui.droppable, {
      options: { hoverClass: !1, activeClass: !1 },
      _addActiveClass: function () {
        this._super(),
          this.options.activeClass &&
            this.element.addClass(this.options.activeClass);
      },
      _removeActiveClass: function () {
        this._super(),
          this.options.activeClass &&
            this.element.removeClass(this.options.activeClass);
      },
      _addHoverClass: function () {
        this._super(),
          this.options.hoverClass &&
            this.element.addClass(this.options.hoverClass);
      },
      _removeHoverClass: function () {
        this._super(),
          this.options.hoverClass &&
            this.element.removeClass(this.options.hoverClass);
      },
    }),
    S.ui.droppable,
    S.widget("ui.progressbar", {
      version: "1.12.1",
      options: {
        classes: {
          "ui-progressbar": "ui-corner-all",
          "ui-progressbar-value": "ui-corner-left",
          "ui-progressbar-complete": "ui-corner-right",
        },
        max: 100,
        value: 0,
        change: null,
        complete: null,
      },
      min: 0,
      _create: function () {
        (this.oldValue = this.options.value = this._constrainedValue()),
          this.element.attr({ role: "progressbar", "aria-valuemin": this.min }),
          this._addClass("ui-progressbar", "ui-widget ui-widget-content"),
          (this.valueDiv = S("<div>").appendTo(this.element)),
          this._addClass(
            this.valueDiv,
            "ui-progressbar-value",
            "ui-widget-header"
          ),
          this._refreshValue();
      },
      _destroy: function () {
        this.element.removeAttr(
          "role aria-valuemin aria-valuemax aria-valuenow"
        ),
          this.valueDiv.remove();
      },
      value: function (t) {
        return void 0 === t
          ? this.options.value
          : ((this.options.value = this._constrainedValue(t)),
            void this._refreshValue());
      },
      _constrainedValue: function (t) {
        return (
          void 0 === t && (t = this.options.value),
          (this.indeterminate = !1 === t),
          "number" != typeof t && (t = 0),
          !this.indeterminate &&
            Math.min(this.options.max, Math.max(this.min, t))
        );
      },
      _setOptions: function (t) {
        var e = t.value;
        delete t.value,
          this._super(t),
          (this.options.value = this._constrainedValue(e)),
          this._refreshValue();
      },
      _setOption: function (t, e) {
        "max" === t && (e = Math.max(this.min, e)), this._super(t, e);
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this.element.attr("aria-disabled", t),
          this._toggleClass(null, "ui-state-disabled", !!t);
      },
      _percentage: function () {
        return this.indeterminate
          ? 100
          : (100 * (this.options.value - this.min)) /
              (this.options.max - this.min);
      },
      _refreshValue: function () {
        var t = this.options.value,
          e = this._percentage();
        this.valueDiv
          .toggle(this.indeterminate || t > this.min)
          .width(e.toFixed(0) + "%"),
          this._toggleClass(
            this.valueDiv,
            "ui-progressbar-complete",
            null,
            t === this.options.max
          )._toggleClass(
            "ui-progressbar-indeterminate",
            null,
            this.indeterminate
          ),
          this.indeterminate
            ? (this.element.removeAttr("aria-valuenow"),
              this.overlayDiv ||
                ((this.overlayDiv = S("<div>").appendTo(this.valueDiv)),
                this._addClass(this.overlayDiv, "ui-progressbar-overlay")))
            : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": t,
              }),
              this.overlayDiv &&
                (this.overlayDiv.remove(), (this.overlayDiv = null))),
          this.oldValue !== t && ((this.oldValue = t), this._trigger("change")),
          t === this.options.max && this._trigger("complete");
      },
    }),
    S.widget("ui.selectable", S.ui.mouse, {
      version: "1.12.1",
      options: {
        appendTo: "body",
        autoRefresh: !0,
        distance: 0,
        filter: "*",
        tolerance: "touch",
        selected: null,
        selecting: null,
        start: null,
        stop: null,
        unselected: null,
        unselecting: null,
      },
      _create: function () {
        var s = this;
        this._addClass("ui-selectable"),
          (this.dragged = !1),
          (this.refresh = function () {
            (s.elementPos = S(s.element[0]).offset()),
              (s.selectees = S(s.options.filter, s.element[0])),
              s._addClass(s.selectees, "ui-selectee"),
              s.selectees.each(function () {
                var t = S(this),
                  e = t.offset(),
                  i = {
                    left: e.left - s.elementPos.left,
                    top: e.top - s.elementPos.top,
                  };
                S.data(this, "selectable-item", {
                  element: this,
                  $element: t,
                  left: i.left,
                  top: i.top,
                  right: i.left + t.outerWidth(),
                  bottom: i.top + t.outerHeight(),
                  startselected: !1,
                  selected: t.hasClass("ui-selected"),
                  selecting: t.hasClass("ui-selecting"),
                  unselecting: t.hasClass("ui-unselecting"),
                });
              });
          }),
          this.refresh(),
          this._mouseInit(),
          (this.helper = S("<div>")),
          this._addClass(this.helper, "ui-selectable-helper");
      },
      _destroy: function () {
        this.selectees.removeData("selectable-item"), this._mouseDestroy();
      },
      _mouseStart: function (i) {
        var s = this,
          t = this.options;
        (this.opos = [i.pageX, i.pageY]),
          (this.elementPos = S(this.element[0]).offset()),
          this.options.disabled ||
            ((this.selectees = S(t.filter, this.element[0])),
            this._trigger("start", i),
            S(t.appendTo).append(this.helper),
            this.helper.css({
              left: i.pageX,
              top: i.pageY,
              width: 0,
              height: 0,
            }),
            t.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function () {
              var t = S.data(this, "selectable-item");
              (t.startselected = !0),
                i.metaKey ||
                  i.ctrlKey ||
                  (s._removeClass(t.$element, "ui-selected"),
                  (t.selected = !1),
                  s._addClass(t.$element, "ui-unselecting"),
                  (t.unselecting = !0),
                  s._trigger("unselecting", i, { unselecting: t.element }));
            }),
            S(i.target)
              .parents()
              .addBack()
              .each(function () {
                var t,
                  e = S.data(this, "selectable-item");
                return e
                  ? ((t =
                      (!i.metaKey && !i.ctrlKey) ||
                      !e.$element.hasClass("ui-selected")),
                    s
                      ._removeClass(
                        e.$element,
                        t ? "ui-unselecting" : "ui-selected"
                      )
                      ._addClass(
                        e.$element,
                        t ? "ui-selecting" : "ui-unselecting"
                      ),
                    (e.unselecting = !t),
                    (e.selecting = t),
                    (e.selected = t)
                      ? s._trigger("selecting", i, { selecting: e.element })
                      : s._trigger("unselecting", i, {
                          unselecting: e.element,
                        }),
                    !1)
                  : void 0;
              }));
      },
      _mouseDrag: function (s) {
        if (((this.dragged = !0), !this.options.disabled)) {
          var t,
            n = this,
            o = this.options,
            a = this.opos[0],
            r = this.opos[1],
            l = s.pageX,
            h = s.pageY;
          return (
            l < a && ((t = l), (l = a), (a = t)),
            h < r && ((t = h), (h = r), (r = t)),
            this.helper.css({ left: a, top: r, width: l - a, height: h - r }),
            this.selectees.each(function () {
              var t = S.data(this, "selectable-item"),
                e = !1,
                i = {};
              t &&
                t.element !== n.element[0] &&
                ((i.left = t.left + n.elementPos.left),
                (i.right = t.right + n.elementPos.left),
                (i.top = t.top + n.elementPos.top),
                (i.bottom = t.bottom + n.elementPos.top),
                "touch" === o.tolerance
                  ? (e = !(
                      i.left > l ||
                      a > i.right ||
                      i.top > h ||
                      r > i.bottom
                    ))
                  : "fit" === o.tolerance &&
                    (e =
                      i.left > a && l > i.right && i.top > r && h > i.bottom),
                e
                  ? (t.selected &&
                      (n._removeClass(t.$element, "ui-selected"),
                      (t.selected = !1)),
                    t.unselecting &&
                      (n._removeClass(t.$element, "ui-unselecting"),
                      (t.unselecting = !1)),
                    t.selecting ||
                      (n._addClass(t.$element, "ui-selecting"),
                      (t.selecting = !0),
                      n._trigger("selecting", s, { selecting: t.element })))
                  : (t.selecting &&
                      ((s.metaKey || s.ctrlKey) && t.startselected
                        ? (n._removeClass(t.$element, "ui-selecting"),
                          (t.selecting = !1),
                          n._addClass(t.$element, "ui-selected"),
                          (t.selected = !0))
                        : (n._removeClass(t.$element, "ui-selecting"),
                          (t.selecting = !1),
                          t.startselected &&
                            (n._addClass(t.$element, "ui-unselecting"),
                            (t.unselecting = !0)),
                          n._trigger("unselecting", s, {
                            unselecting: t.element,
                          }))),
                    t.selected &&
                      (s.metaKey ||
                        s.ctrlKey ||
                        t.startselected ||
                        (n._removeClass(t.$element, "ui-selected"),
                        (t.selected = !1),
                        n._addClass(t.$element, "ui-unselecting"),
                        (t.unselecting = !0),
                        n._trigger("unselecting", s, {
                          unselecting: t.element,
                        })))));
            }),
            !1
          );
        }
      },
      _mouseStop: function (e) {
        var i = this;
        return (
          (this.dragged = !1),
          S(".ui-unselecting", this.element[0]).each(function () {
            var t = S.data(this, "selectable-item");
            i._removeClass(t.$element, "ui-unselecting"),
              (t.unselecting = !1),
              (t.startselected = !1),
              i._trigger("unselected", e, { unselected: t.element });
          }),
          S(".ui-selecting", this.element[0]).each(function () {
            var t = S.data(this, "selectable-item");
            i
              ._removeClass(t.$element, "ui-selecting")
              ._addClass(t.$element, "ui-selected"),
              (t.selecting = !1),
              (t.selected = !0),
              (t.startselected = !0),
              i._trigger("selected", e, { selected: t.element });
          }),
          this._trigger("stop", e),
          this.helper.remove(),
          !1
        );
      },
    }),
    S.widget("ui.selectmenu", [
      S.ui.formResetMixin,
      {
        version: "1.12.1",
        defaultElement: "<select>",
        options: {
          appendTo: null,
          classes: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
          disabled: null,
          icons: { button: "ui-icon-triangle-1-s" },
          position: { my: "left top", at: "left bottom", collision: "none" },
          width: !1,
          change: null,
          close: null,
          focus: null,
          open: null,
          select: null,
        },
        _create: function () {
          var t = this.element.uniqueId().attr("id");
          (this.ids = { element: t, button: t + "-button", menu: t + "-menu" }),
            this._drawButton(),
            this._drawMenu(),
            this._bindFormResetHandler(),
            (this._rendered = !1),
            (this.menuItems = S());
        },
        _drawButton: function () {
          var t,
            e = this,
            i = this._parseOption(
              this.element.find("option:selected"),
              this.element[0].selectedIndex
            );
          (this.labels = this.element.labels().attr("for", this.ids.button)),
            this._on(this.labels, {
              click: function (t) {
                this.button.focus(), t.preventDefault();
              },
            }),
            this.element.hide(),
            (this.button = S("<span>", {
              tabindex: this.options.disabled ? -1 : 0,
              id: this.ids.button,
              role: "combobox",
              "aria-expanded": "false",
              "aria-autocomplete": "list",
              "aria-owns": this.ids.menu,
              "aria-haspopup": "true",
              title: this.element.attr("title"),
            }).insertAfter(this.element)),
            this._addClass(
              this.button,
              "ui-selectmenu-button ui-selectmenu-button-closed",
              "ui-button ui-widget"
            ),
            (t = S("<span>").appendTo(this.button)),
            this._addClass(
              t,
              "ui-selectmenu-icon",
              "ui-icon " + this.options.icons.button
            ),
            (this.buttonItem = this._renderButtonItem(i).appendTo(this.button)),
            !1 !== this.options.width && this._resizeButton(),
            this._on(this.button, this._buttonEvents),
            this.button.one("focusin", function () {
              e._rendered || e._refreshMenu();
            });
        },
        _drawMenu: function () {
          var s = this;
          (this.menu = S("<ul>", {
            "aria-hidden": "true",
            "aria-labelledby": this.ids.button,
            id: this.ids.menu,
          })),
            (this.menuWrap = S("<div>").append(this.menu)),
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"),
            this.menuWrap.appendTo(this._appendTo()),
            (this.menuInstance = this.menu
              .menu({
                classes: { "ui-menu": "ui-corner-bottom" },
                role: "listbox",
                select: function (t, e) {
                  t.preventDefault(),
                    s._setSelection(),
                    s._select(e.item.data("ui-selectmenu-item"), t);
                },
                focus: function (t, e) {
                  var i = e.item.data("ui-selectmenu-item");
                  null != s.focusIndex &&
                    i.index !== s.focusIndex &&
                    (s._trigger("focus", t, { item: i }),
                    s.isOpen || s._select(i, t)),
                    (s.focusIndex = i.index),
                    s.button.attr(
                      "aria-activedescendant",
                      s.menuItems.eq(i.index).attr("id")
                    );
                },
              })
              .menu("instance")),
            this.menuInstance._off(this.menu, "mouseleave"),
            (this.menuInstance._closeOnDocumentClick = function () {
              return !1;
            }),
            (this.menuInstance._isDivider = function () {
              return !1;
            });
        },
        refresh: function () {
          this._refreshMenu(),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(
                this._getSelectedItem().data("ui-selectmenu-item") || {}
              ))
            ),
            null === this.options.width && this._resizeButton();
        },
        _refreshMenu: function () {
          var t,
            e = this.element.find("option");
          this.menu.empty(),
            this._parseOptions(e),
            this._renderMenu(this.menu, this.items),
            this.menuInstance.refresh(),
            (this.menuItems = this.menu
              .find("li")
              .not(".ui-selectmenu-optgroup")
              .find(".ui-menu-item-wrapper")),
            (this._rendered = !0),
            e.length &&
              ((t = this._getSelectedItem()),
              this.menuInstance.focus(null, t),
              this._setAria(t.data("ui-selectmenu-item")),
              this._setOption("disabled", this.element.prop("disabled")));
        },
        open: function (t) {
          this.options.disabled ||
            (this._rendered
              ? (this._removeClass(
                  this.menu.find(".ui-state-active"),
                  null,
                  "ui-state-active"
                ),
                this.menuInstance.focus(null, this._getSelectedItem()))
              : this._refreshMenu(),
            this.menuItems.length &&
              ((this.isOpen = !0),
              this._toggleAttr(),
              this._resizeMenu(),
              this._position(),
              this._on(this.document, this._documentClick),
              this._trigger("open", t)));
        },
        _position: function () {
          this.menuWrap.position(
            S.extend({ of: this.button }, this.options.position)
          );
        },
        close: function (t) {
          this.isOpen &&
            ((this.isOpen = !1),
            this._toggleAttr(),
            (this.range = null),
            this._off(this.document),
            this._trigger("close", t));
        },
        widget: function () {
          return this.button;
        },
        menuWidget: function () {
          return this.menu;
        },
        _renderButtonItem: function (t) {
          var e = S("<span>");
          return (
            this._setText(e, t.label),
            this._addClass(e, "ui-selectmenu-text"),
            e
          );
        },
        _renderMenu: function (s, t) {
          var n = this,
            o = "";
          S.each(t, function (t, e) {
            var i;
            e.optgroup !== o &&
              ((i = S("<li>", { text: e.optgroup })),
              n._addClass(
                i,
                "ui-selectmenu-optgroup",
                "ui-menu-divider" +
                  (e.element.parent("optgroup").prop("disabled")
                    ? " ui-state-disabled"
                    : "")
              ),
              i.appendTo(s),
              (o = e.optgroup)),
              n._renderItemData(s, e);
          });
        },
        _renderItemData: function (t, e) {
          return this._renderItem(t, e).data("ui-selectmenu-item", e);
        },
        _renderItem: function (t, e) {
          var i = S("<li>"),
            s = S("<div>", { title: e.element.attr("title") });
          return (
            e.disabled && this._addClass(i, null, "ui-state-disabled"),
            this._setText(s, e.label),
            i.append(s).appendTo(t)
          );
        },
        _setText: function (t, e) {
          e ? t.text(e) : t.html("&#160;");
        },
        _move: function (t, e) {
          var i,
            s,
            n = ".ui-menu-item";
          this.isOpen
            ? (i = this.menuItems.eq(this.focusIndex).parent("li"))
            : ((i = this.menuItems
                .eq(this.element[0].selectedIndex)
                .parent("li")),
              (n += ":not(.ui-state-disabled)")),
            (s =
              "first" === t || "last" === t
                ? i["first" === t ? "prevAll" : "nextAll"](n).eq(-1)
                : i[t + "All"](n).eq(0)).length &&
              this.menuInstance.focus(e, s);
        },
        _getSelectedItem: function () {
          return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        },
        _toggle: function (t) {
          this[this.isOpen ? "close" : "open"](t);
        },
        _setSelection: function () {
          var t;
          this.range &&
            (window.getSelection
              ? ((t = window.getSelection()).removeAllRanges(),
                t.addRange(this.range))
              : this.range.select(),
            this.button.focus());
        },
        _documentClick: {
          mousedown: function (t) {
            this.isOpen &&
              (S(t.target).closest(
                ".ui-selectmenu-menu, #" + S.ui.escapeSelector(this.ids.button)
              ).length ||
                this.close(t));
          },
        },
        _buttonEvents: {
          mousedown: function () {
            var t;
            window.getSelection
              ? (t = window.getSelection()).rangeCount &&
                (this.range = t.getRangeAt(0))
              : (this.range = document.selection.createRange());
          },
          click: function (t) {
            this._setSelection(), this._toggle(t);
          },
          keydown: function (t) {
            var e = !0;
            switch (t.keyCode) {
              case S.ui.keyCode.TAB:
              case S.ui.keyCode.ESCAPE:
                this.close(t), (e = !1);
                break;
              case S.ui.keyCode.ENTER:
                this.isOpen && this._selectFocusedItem(t);
                break;
              case S.ui.keyCode.UP:
                t.altKey ? this._toggle(t) : this._move("prev", t);
                break;
              case S.ui.keyCode.DOWN:
                t.altKey ? this._toggle(t) : this._move("next", t);
                break;
              case S.ui.keyCode.SPACE:
                this.isOpen ? this._selectFocusedItem(t) : this._toggle(t);
                break;
              case S.ui.keyCode.LEFT:
                this._move("prev", t);
                break;
              case S.ui.keyCode.RIGHT:
                this._move("next", t);
                break;
              case S.ui.keyCode.HOME:
              case S.ui.keyCode.PAGE_UP:
                this._move("first", t);
                break;
              case S.ui.keyCode.END:
              case S.ui.keyCode.PAGE_DOWN:
                this._move("last", t);
                break;
              default:
                this.menu.trigger(t), (e = !1);
            }
            e && t.preventDefault();
          },
        },
        _selectFocusedItem: function (t) {
          var e = this.menuItems.eq(this.focusIndex).parent("li");
          e.hasClass("ui-state-disabled") ||
            this._select(e.data("ui-selectmenu-item"), t);
        },
        _select: function (t, e) {
          var i = this.element[0].selectedIndex;
          (this.element[0].selectedIndex = t.index),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(t))
            ),
            this._setAria(t),
            this._trigger("select", e, { item: t }),
            t.index !== i && this._trigger("change", e, { item: t }),
            this.close(e);
        },
        _setAria: function (t) {
          var e = this.menuItems.eq(t.index).attr("id");
          this.button.attr({
            "aria-labelledby": e,
            "aria-activedescendant": e,
          }),
            this.menu.attr("aria-activedescendant", e);
        },
        _setOption: function (t, e) {
          if ("icons" === t) {
            var i = this.button.find("span.ui-icon");
            this._removeClass(i, null, this.options.icons.button)._addClass(
              i,
              null,
              e.button
            );
          }
          this._super(t, e),
            "appendTo" === t && this.menuWrap.appendTo(this._appendTo()),
            "width" === t && this._resizeButton();
        },
        _setOptionDisabled: function (t) {
          this._super(t),
            this.menuInstance.option("disabled", t),
            this.button.attr("aria-disabled", t),
            this._toggleClass(this.button, null, "ui-state-disabled", t),
            this.element.prop("disabled", t),
            t
              ? (this.button.attr("tabindex", -1), this.close())
              : this.button.attr("tabindex", 0);
        },
        _appendTo: function () {
          var t = this.options.appendTo;
          return (
            t &&
              (t = t.jquery || t.nodeType ? S(t) : this.document.find(t).eq(0)),
            (t && t[0]) || (t = this.element.closest(".ui-front, dialog")),
            t.length || (t = this.document[0].body),
            t
          );
        },
        _toggleAttr: function () {
          this.button.attr("aria-expanded", this.isOpen),
            this._removeClass(
              this.button,
              "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open")
            )
              ._addClass(
                this.button,
                "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed")
              )
              ._toggleClass(
                this.menuWrap,
                "ui-selectmenu-open",
                null,
                this.isOpen
              ),
            this.menu.attr("aria-hidden", !this.isOpen);
        },
        _resizeButton: function () {
          var t = this.options.width;
          return !1 === t
            ? void this.button.css("width", "")
            : (null === t &&
                ((t = this.element.show().outerWidth()), this.element.hide()),
              void this.button.outerWidth(t));
        },
        _resizeMenu: function () {
          this.menu.outerWidth(
            Math.max(
              this.button.outerWidth(),
              this.menu.width("").outerWidth() + 1
            )
          );
        },
        _getCreateOptions: function () {
          var t = this._super();
          return (t.disabled = this.element.prop("disabled")), t;
        },
        _parseOptions: function (t) {
          var i = this,
            s = [];
          t.each(function (t, e) {
            s.push(i._parseOption(S(e), t));
          }),
            (this.items = s);
        },
        _parseOption: function (t, e) {
          var i = t.parent("optgroup");
          return {
            element: t,
            index: e,
            value: t.val(),
            label: t.text(),
            optgroup: i.attr("label") || "",
            disabled: i.prop("disabled") || t.prop("disabled"),
          };
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.menuWrap.remove(),
            this.button.remove(),
            this.element.show(),
            this.element.removeUniqueId(),
            this.labels.attr("for", this.ids.element);
        },
      },
    ]),
    S.widget("ui.slider", S.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "slide",
      options: {
        animate: !1,
        classes: {
          "ui-slider": "ui-corner-all",
          "ui-slider-handle": "ui-corner-all",
          "ui-slider-range": "ui-corner-all ui-widget-header",
        },
        distance: 0,
        max: 100,
        min: 0,
        orientation: "horizontal",
        range: !1,
        step: 1,
        value: 0,
        values: null,
        change: null,
        slide: null,
        start: null,
        stop: null,
      },
      numPages: 5,
      _create: function () {
        (this._keySliding = !1),
          (this._mouseSliding = !1),
          (this._animateOff = !0),
          (this._handleIndex = null),
          this._detectOrientation(),
          this._mouseInit(),
          this._calculateNewMax(),
          this._addClass(
            "ui-slider ui-slider-" + this.orientation,
            "ui-widget ui-widget-content"
          ),
          this._refresh(),
          (this._animateOff = !1);
      },
      _refresh: function () {
        this._createRange(),
          this._createHandles(),
          this._setupEvents(),
          this._refreshValue();
      },
      _createHandles: function () {
        var t,
          e,
          i = this.options,
          s = this.element.find(".ui-slider-handle"),
          n = [];
        for (
          e = (i.values && i.values.length) || 1,
            s.length > e && (s.slice(e).remove(), (s = s.slice(0, e))),
            t = s.length;
          t < e;
          t++
        )
          n.push("<span tabindex='0'></span>");
        (this.handles = s.add(S(n.join("")).appendTo(this.element))),
          this._addClass(this.handles, "ui-slider-handle", "ui-state-default"),
          (this.handle = this.handles.eq(0)),
          this.handles.each(function (t) {
            S(this).data("ui-slider-handle-index", t).attr("tabIndex", 0);
          });
      },
      _createRange: function () {
        var t = this.options;
        t.range
          ? (!0 === t.range &&
              (t.values
                ? t.values.length && 2 !== t.values.length
                  ? (t.values = [t.values[0], t.values[0]])
                  : S.isArray(t.values) && (t.values = t.values.slice(0))
                : (t.values = [this._valueMin(), this._valueMin()])),
            this.range && this.range.length
              ? (this._removeClass(
                  this.range,
                  "ui-slider-range-min ui-slider-range-max"
                ),
                this.range.css({ left: "", bottom: "" }))
              : ((this.range = S("<div>").appendTo(this.element)),
                this._addClass(this.range, "ui-slider-range")),
            ("min" === t.range || "max" === t.range) &&
              this._addClass(this.range, "ui-slider-range-" + t.range))
          : (this.range && this.range.remove(), (this.range = null));
      },
      _setupEvents: function () {
        this._off(this.handles),
          this._on(this.handles, this._handleEvents),
          this._hoverable(this.handles),
          this._focusable(this.handles);
      },
      _destroy: function () {
        this.handles.remove(),
          this.range && this.range.remove(),
          this._mouseDestroy();
      },
      _mouseCapture: function (t) {
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l = this,
          h = this.options;
        return (
          !h.disabled &&
          ((this.elementSize = {
            width: this.element.outerWidth(),
            height: this.element.outerHeight(),
          }),
          (this.elementOffset = this.element.offset()),
          (e = { x: t.pageX, y: t.pageY }),
          (i = this._normValueFromMouse(e)),
          (s = this._valueMax() - this._valueMin() + 1),
          this.handles.each(function (t) {
            var e = Math.abs(i - l.values(t));
            (e < s ||
              (s === e &&
                (t === l._lastChangedValue || l.values(t) === h.min))) &&
              ((s = e), (n = S(this)), (o = t));
          }),
          !1 !== this._start(t, o) &&
            ((this._mouseSliding = !0),
            (this._handleIndex = o),
            this._addClass(n, null, "ui-state-active"),
            n.trigger("focus"),
            (a = n.offset()),
            (r = !S(t.target).parents().addBack().is(".ui-slider-handle")),
            (this._clickOffset = r
              ? { left: 0, top: 0 }
              : {
                  left: t.pageX - a.left - n.width() / 2,
                  top:
                    t.pageY -
                    a.top -
                    n.height() / 2 -
                    (parseInt(n.css("borderTopWidth"), 10) || 0) -
                    (parseInt(n.css("borderBottomWidth"), 10) || 0) +
                    (parseInt(n.css("marginTop"), 10) || 0),
                }),
            this.handles.hasClass("ui-state-hover") || this._slide(t, o, i),
            (this._animateOff = !0)))
        );
      },
      _mouseStart: function () {
        return !0;
      },
      _mouseDrag: function (t) {
        var e = { x: t.pageX, y: t.pageY },
          i = this._normValueFromMouse(e);
        return this._slide(t, this._handleIndex, i), !1;
      },
      _mouseStop: function (t) {
        return (
          this._removeClass(this.handles, null, "ui-state-active"),
          (this._mouseSliding = !1),
          this._stop(t, this._handleIndex),
          this._change(t, this._handleIndex),
          (this._handleIndex = null),
          (this._clickOffset = null),
          (this._animateOff = !1)
        );
      },
      _detectOrientation: function () {
        this.orientation =
          "vertical" === this.options.orientation ? "vertical" : "horizontal";
      },
      _normValueFromMouse: function (t) {
        var e, i, s, n, o;
        return (
          "horizontal" === this.orientation
            ? ((e = this.elementSize.width),
              (i =
                t.x -
                this.elementOffset.left -
                (this._clickOffset ? this._clickOffset.left : 0)))
            : ((e = this.elementSize.height),
              (i =
                t.y -
                this.elementOffset.top -
                (this._clickOffset ? this._clickOffset.top : 0))),
          1 < (s = i / e) && (s = 1),
          s < 0 && (s = 0),
          "vertical" === this.orientation && (s = 1 - s),
          (n = this._valueMax() - this._valueMin()),
          (o = this._valueMin() + s * n),
          this._trimAlignValue(o)
        );
      },
      _uiHash: function (t, e, i) {
        var s = {
          handle: this.handles[t],
          handleIndex: t,
          value: void 0 !== e ? e : this.value(),
        };
        return (
          this._hasMultipleValues() &&
            ((s.value = void 0 !== e ? e : this.values(t)),
            (s.values = i || this.values())),
          s
        );
      },
      _hasMultipleValues: function () {
        return this.options.values && this.options.values.length;
      },
      _start: function (t, e) {
        return this._trigger("start", t, this._uiHash(e));
      },
      _slide: function (t, e, i) {
        var s,
          n = this.value(),
          o = this.values();
        this._hasMultipleValues() &&
          ((s = this.values(e ? 0 : 1)),
          (n = this.values(e)),
          2 === this.options.values.length &&
            !0 === this.options.range &&
            (i = 0 === e ? Math.min(s, i) : Math.max(s, i)),
          (o[e] = i)),
          i !== n &&
            !1 !== this._trigger("slide", t, this._uiHash(e, i, o)) &&
            (this._hasMultipleValues() ? this.values(e, i) : this.value(i));
      },
      _stop: function (t, e) {
        this._trigger("stop", t, this._uiHash(e));
      },
      _change: function (t, e) {
        this._keySliding ||
          this._mouseSliding ||
          ((this._lastChangedValue = e),
          this._trigger("change", t, this._uiHash(e)));
      },
      value: function (t) {
        return arguments.length
          ? ((this.options.value = this._trimAlignValue(t)),
            this._refreshValue(),
            void this._change(null, 0))
          : this._value();
      },
      values: function (t, e) {
        var i, s, n;
        if (1 < arguments.length)
          return (
            (this.options.values[t] = this._trimAlignValue(e)),
            this._refreshValue(),
            void this._change(null, t)
          );
        if (!arguments.length) return this._values();
        if (!S.isArray(t))
          return this._hasMultipleValues() ? this._values(t) : this.value();
        for (i = this.options.values, s = t, n = 0; i.length > n; n += 1)
          (i[n] = this._trimAlignValue(s[n])), this._change(null, n);
        this._refreshValue();
      },
      _setOption: function (t, e) {
        var i,
          s = 0;
        switch (
          ("range" === t &&
            !0 === this.options.range &&
            ("min" === e
              ? ((this.options.value = this._values(0)),
                (this.options.values = null))
              : "max" === e &&
                ((this.options.value = this._values(
                  this.options.values.length - 1
                )),
                (this.options.values = null))),
          S.isArray(this.options.values) && (s = this.options.values.length),
          this._super(t, e),
          t)
        ) {
          case "orientation":
            this._detectOrientation(),
              this._removeClass(
                "ui-slider-horizontal ui-slider-vertical"
              )._addClass("ui-slider-" + this.orientation),
              this._refreshValue(),
              this.options.range && this._refreshRange(e),
              this.handles.css("horizontal" === e ? "bottom" : "left", "");
            break;
          case "value":
            (this._animateOff = !0),
              this._refreshValue(),
              this._change(null, 0),
              (this._animateOff = !1);
            break;
          case "values":
            for (
              this._animateOff = !0, this._refreshValue(), i = s - 1;
              0 <= i;
              i--
            )
              this._change(null, i);
            this._animateOff = !1;
            break;
          case "step":
          case "min":
          case "max":
            (this._animateOff = !0),
              this._calculateNewMax(),
              this._refreshValue(),
              (this._animateOff = !1);
            break;
          case "range":
            (this._animateOff = !0), this._refresh(), (this._animateOff = !1);
        }
      },
      _setOptionDisabled: function (t) {
        this._super(t), this._toggleClass(null, "ui-state-disabled", !!t);
      },
      _value: function () {
        var t = this.options.value;
        return this._trimAlignValue(t);
      },
      _values: function (t) {
        var e, i, s;
        if (arguments.length)
          return (e = this.options.values[t]), this._trimAlignValue(e);
        if (this._hasMultipleValues()) {
          for (i = this.options.values.slice(), s = 0; i.length > s; s += 1)
            i[s] = this._trimAlignValue(i[s]);
          return i;
        }
        return [];
      },
      _trimAlignValue: function (t) {
        if (this._valueMin() >= t) return this._valueMin();
        if (t >= this._valueMax()) return this._valueMax();
        var e = 0 < this.options.step ? this.options.step : 1,
          i = (t - this._valueMin()) % e,
          s = t - i;
        return (
          2 * Math.abs(i) >= e && (s += 0 < i ? e : -e),
          parseFloat(s.toFixed(5))
        );
      },
      _calculateNewMax: function () {
        var t = this.options.max,
          e = this._valueMin(),
          i = this.options.step;
        (t = Math.round((t - e) / i) * i + e) > this.options.max && (t -= i),
          (this.max = parseFloat(t.toFixed(this._precision())));
      },
      _precision: function () {
        var t = this._precisionOf(this.options.step);
        return (
          null !== this.options.min &&
            (t = Math.max(t, this._precisionOf(this.options.min))),
          t
        );
      },
      _precisionOf: function (t) {
        var e = "" + t,
          i = e.indexOf(".");
        return -1 === i ? 0 : e.length - i - 1;
      },
      _valueMin: function () {
        return this.options.min;
      },
      _valueMax: function () {
        return this.max;
      },
      _refreshRange: function (t) {
        "vertical" === t && this.range.css({ width: "", left: "" }),
          "horizontal" === t && this.range.css({ height: "", bottom: "" });
      },
      _refreshValue: function () {
        var e,
          i,
          t,
          s,
          n,
          o = this.options.range,
          a = this.options,
          r = this,
          l = !this._animateOff && a.animate,
          h = {};
        this._hasMultipleValues()
          ? this.handles.each(function (t) {
              (i =
                ((r.values(t) - r._valueMin()) /
                  (r._valueMax() - r._valueMin())) *
                100),
                (h["horizontal" === r.orientation ? "left" : "bottom"] =
                  i + "%"),
                S(this).stop(1, 1)[l ? "animate" : "css"](h, a.animate),
                !0 === r.options.range &&
                  ("horizontal" === r.orientation
                    ? (0 === t &&
                        r.range
                          .stop(1, 1)
                          [l ? "animate" : "css"]({ left: i + "%" }, a.animate),
                      1 === t &&
                        r.range[l ? "animate" : "css"](
                          { width: i - e + "%" },
                          { queue: !1, duration: a.animate }
                        ))
                    : (0 === t &&
                        r.range
                          .stop(1, 1)
                          [l ? "animate" : "css"](
                            { bottom: i + "%" },
                            a.animate
                          ),
                      1 === t &&
                        r.range[l ? "animate" : "css"](
                          { height: i - e + "%" },
                          { queue: !1, duration: a.animate }
                        ))),
                (e = i);
            })
          : ((t = this.value()),
            (s = this._valueMin()),
            (n = this._valueMax()),
            (i = n !== s ? ((t - s) / (n - s)) * 100 : 0),
            (h["horizontal" === this.orientation ? "left" : "bottom"] =
              i + "%"),
            this.handle.stop(1, 1)[l ? "animate" : "css"](h, a.animate),
            "min" === o &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ width: i + "%" }, a.animate),
            "max" === o &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ width: 100 - i + "%" }, a.animate),
            "min" === o &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ height: i + "%" }, a.animate),
            "max" === o &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ height: 100 - i + "%" }, a.animate));
      },
      _handleEvents: {
        keydown: function (t) {
          var e,
            i,
            s,
            n = S(t.target).data("ui-slider-handle-index");
          switch (t.keyCode) {
            case S.ui.keyCode.HOME:
            case S.ui.keyCode.END:
            case S.ui.keyCode.PAGE_UP:
            case S.ui.keyCode.PAGE_DOWN:
            case S.ui.keyCode.UP:
            case S.ui.keyCode.RIGHT:
            case S.ui.keyCode.DOWN:
            case S.ui.keyCode.LEFT:
              if (
                (t.preventDefault(),
                !this._keySliding &&
                  ((this._keySliding = !0),
                  this._addClass(S(t.target), null, "ui-state-active"),
                  !1 === this._start(t, n)))
              )
                return;
          }
          switch (
            ((s = this.options.step),
            (e = i = this._hasMultipleValues() ? this.values(n) : this.value()),
            t.keyCode)
          ) {
            case S.ui.keyCode.HOME:
              i = this._valueMin();
              break;
            case S.ui.keyCode.END:
              i = this._valueMax();
              break;
            case S.ui.keyCode.PAGE_UP:
              i = this._trimAlignValue(
                e + (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case S.ui.keyCode.PAGE_DOWN:
              i = this._trimAlignValue(
                e - (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case S.ui.keyCode.UP:
            case S.ui.keyCode.RIGHT:
              if (e === this._valueMax()) return;
              i = this._trimAlignValue(e + s);
              break;
            case S.ui.keyCode.DOWN:
            case S.ui.keyCode.LEFT:
              if (e === this._valueMin()) return;
              i = this._trimAlignValue(e - s);
          }
          this._slide(t, n, i);
        },
        keyup: function (t) {
          var e = S(t.target).data("ui-slider-handle-index");
          this._keySliding &&
            ((this._keySliding = !1),
            this._stop(t, e),
            this._change(t, e),
            this._removeClass(S(t.target), null, "ui-state-active"));
        },
      },
    }),
    S.widget("ui.sortable", S.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "sort",
      ready: !1,
      options: {
        appendTo: "parent",
        axis: !1,
        connectWith: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        dropOnEmpty: !0,
        forcePlaceholderSize: !1,
        forceHelperSize: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        items: "> *",
        opacity: !1,
        placeholder: !1,
        revert: !1,
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        scope: "default",
        tolerance: "intersect",
        zIndex: 1e3,
        activate: null,
        beforeStop: null,
        change: null,
        deactivate: null,
        out: null,
        over: null,
        receive: null,
        remove: null,
        sort: null,
        start: null,
        stop: null,
        update: null,
      },
      _isOverAxis: function (t, e, i) {
        return e <= t && t < e + i;
      },
      _isFloating: function (t) {
        return (
          /left|right/.test(t.css("float")) ||
          /inline|table-cell/.test(t.css("display"))
        );
      },
      _create: function () {
        (this.containerCache = {}),
          this._addClass("ui-sortable"),
          this.refresh(),
          (this.offset = this.element.offset()),
          this._mouseInit(),
          this._setHandleClassName(),
          (this.ready = !0);
      },
      _setOption: function (t, e) {
        this._super(t, e), "handle" === t && this._setHandleClassName();
      },
      _setHandleClassName: function () {
        var t = this;
        this._removeClass(
          this.element.find(".ui-sortable-handle"),
          "ui-sortable-handle"
        ),
          S.each(this.items, function () {
            t._addClass(
              this.instance.options.handle
                ? this.item.find(this.instance.options.handle)
                : this.item,
              "ui-sortable-handle"
            );
          });
      },
      _destroy: function () {
        this._mouseDestroy();
        for (var t = this.items.length - 1; 0 <= t; t--)
          this.items[t].item.removeData(this.widgetName + "-item");
        return this;
      },
      _mouseCapture: function (t, e) {
        var i = null,
          s = !1,
          n = this;
        return (
          !this.reverting &&
          !this.options.disabled &&
          "static" !== this.options.type &&
          (this._refreshItems(t),
          S(t.target)
            .parents()
            .each(function () {
              return S.data(this, n.widgetName + "-item") === n
                ? ((i = S(this)), !1)
                : void 0;
            }),
          S.data(t.target, n.widgetName + "-item") === n && (i = S(t.target)),
          !!i &&
            !(
              this.options.handle &&
              !e &&
              (S(this.options.handle, i)
                .find("*")
                .addBack()
                .each(function () {
                  this === t.target && (s = !0);
                }),
              !s)
            ) &&
            ((this.currentItem = i), this._removeCurrentsFromItems(), !0))
        );
      },
      _mouseStart: function (t, e, i) {
        var s,
          n,
          o = this.options;
        if (
          ((this.currentContainer = this).refreshPositions(),
          (this.helper = this._createHelper(t)),
          this._cacheHelperProportions(),
          this._cacheMargins(),
          (this.scrollParent = this.helper.scrollParent()),
          (this.offset = this.currentItem.offset()),
          (this.offset = {
            top: this.offset.top - this.margins.top,
            left: this.offset.left - this.margins.left,
          }),
          S.extend(this.offset, {
            click: {
              left: t.pageX - this.offset.left,
              top: t.pageY - this.offset.top,
            },
            parent: this._getParentOffset(),
            relative: this._getRelativeOffset(),
          }),
          this.helper.css("position", "absolute"),
          (this.cssPosition = this.helper.css("position")),
          (this.originalPosition = this._generatePosition(t)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt),
          (this.domPosition = {
            prev: this.currentItem.prev()[0],
            parent: this.currentItem.parent()[0],
          }),
          this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
          this._createPlaceholder(),
          o.containment && this._setContainment(),
          o.cursor &&
            "auto" !== o.cursor &&
            ((n = this.document.find("body")),
            (this.storedCursor = n.css("cursor")),
            n.css("cursor", o.cursor),
            (this.storedStylesheet = S(
              "<style>*{ cursor: " + o.cursor + " !important; }</style>"
            ).appendTo(n))),
          o.opacity &&
            (this.helper.css("opacity") &&
              (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", o.opacity)),
          o.zIndex &&
            (this.helper.css("zIndex") &&
              (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", o.zIndex)),
          this.scrollParent[0] !== this.document[0] &&
            "HTML" !== this.scrollParent[0].tagName &&
            (this.overflowOffset = this.scrollParent.offset()),
          this._trigger("start", t, this._uiHash()),
          this._preserveHelperProportions || this._cacheHelperProportions(),
          !i)
        )
          for (s = this.containers.length - 1; 0 <= s; s--)
            this.containers[s]._trigger("activate", t, this._uiHash(this));
        return (
          S.ui.ddmanager && (S.ui.ddmanager.current = this),
          S.ui.ddmanager &&
            !o.dropBehaviour &&
            S.ui.ddmanager.prepareOffsets(this, t),
          (this.dragging = !0),
          this._addClass(this.helper, "ui-sortable-helper"),
          this._mouseDrag(t),
          !0
        );
      },
      _mouseDrag: function (t) {
        var e,
          i,
          s,
          n,
          o = this.options,
          a = !1;
        for (
          this.position = this._generatePosition(t),
            this.positionAbs = this._convertPositionTo("absolute"),
            this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs),
            this.options.scroll &&
              (this.scrollParent[0] !== this.document[0] &&
              "HTML" !== this.scrollParent[0].tagName
                ? (this.overflowOffset.top +
                    this.scrollParent[0].offsetHeight -
                    t.pageY <
                  o.scrollSensitivity
                    ? (this.scrollParent[0].scrollTop = a =
                        this.scrollParent[0].scrollTop + o.scrollSpeed)
                    : t.pageY - this.overflowOffset.top < o.scrollSensitivity &&
                      (this.scrollParent[0].scrollTop = a =
                        this.scrollParent[0].scrollTop - o.scrollSpeed),
                  this.overflowOffset.left +
                    this.scrollParent[0].offsetWidth -
                    t.pageX <
                  o.scrollSensitivity
                    ? (this.scrollParent[0].scrollLeft = a =
                        this.scrollParent[0].scrollLeft + o.scrollSpeed)
                    : t.pageX - this.overflowOffset.left <
                        o.scrollSensitivity &&
                      (this.scrollParent[0].scrollLeft = a =
                        this.scrollParent[0].scrollLeft - o.scrollSpeed))
                : (t.pageY - this.document.scrollTop() < o.scrollSensitivity
                    ? (a = this.document.scrollTop(
                        this.document.scrollTop() - o.scrollSpeed
                      ))
                    : this.window.height() -
                        (t.pageY - this.document.scrollTop()) <
                        o.scrollSensitivity &&
                      (a = this.document.scrollTop(
                        this.document.scrollTop() + o.scrollSpeed
                      )),
                  t.pageX - this.document.scrollLeft() < o.scrollSensitivity
                    ? (a = this.document.scrollLeft(
                        this.document.scrollLeft() - o.scrollSpeed
                      ))
                    : this.window.width() -
                        (t.pageX - this.document.scrollLeft()) <
                        o.scrollSensitivity &&
                      (a = this.document.scrollLeft(
                        this.document.scrollLeft() + o.scrollSpeed
                      ))),
              !1 !== a &&
                S.ui.ddmanager &&
                !o.dropBehaviour &&
                S.ui.ddmanager.prepareOffsets(this, t)),
            this.positionAbs = this._convertPositionTo("absolute"),
            (this.options.axis && "y" === this.options.axis) ||
              (this.helper[0].style.left = this.position.left + "px"),
            (this.options.axis && "x" === this.options.axis) ||
              (this.helper[0].style.top = this.position.top + "px"),
            e = this.items.length - 1;
          0 <= e;
          e--
        )
          if (
            ((s = (i = this.items[e]).item[0]),
            (n = this._intersectsWithPointer(i)) &&
              i.instance === this.currentContainer &&
              s !== this.currentItem[0] &&
              this.placeholder[1 === n ? "next" : "prev"]()[0] !== s &&
              !S.contains(this.placeholder[0], s) &&
              ("semi-dynamic" !== this.options.type ||
                !S.contains(this.element[0], s)))
          ) {
            if (
              ((this.direction = 1 === n ? "down" : "up"),
              "pointer" !== this.options.tolerance &&
                !this._intersectsWithSides(i))
            )
              break;
            this._rearrange(t, i), this._trigger("change", t, this._uiHash());
            break;
          }
        return (
          this._contactContainers(t),
          S.ui.ddmanager && S.ui.ddmanager.drag(this, t),
          this._trigger("sort", t, this._uiHash()),
          (this.lastPositionAbs = this.positionAbs),
          !1
        );
      },
      _mouseStop: function (t, e) {
        if (t) {
          if (
            (S.ui.ddmanager &&
              !this.options.dropBehaviour &&
              S.ui.ddmanager.drop(this, t),
            this.options.revert)
          ) {
            var i = this,
              s = this.placeholder.offset(),
              n = this.options.axis,
              o = {};
            (n && "x" !== n) ||
              (o.left =
                s.left -
                this.offset.parent.left -
                this.margins.left +
                (this.offsetParent[0] === this.document[0].body
                  ? 0
                  : this.offsetParent[0].scrollLeft)),
              (n && "y" !== n) ||
                (o.top =
                  s.top -
                  this.offset.parent.top -
                  this.margins.top +
                  (this.offsetParent[0] === this.document[0].body
                    ? 0
                    : this.offsetParent[0].scrollTop)),
              (this.reverting = !0),
              S(this.helper).animate(
                o,
                parseInt(this.options.revert, 10) || 500,
                function () {
                  i._clear(t);
                }
              );
          } else this._clear(t, e);
          return !1;
        }
      },
      cancel: function () {
        if (this.dragging) {
          this._mouseUp(new S.Event("mouseup", { target: null })),
            "original" === this.options.helper
              ? (this.currentItem.css(this._storedCSS),
                this._removeClass(this.currentItem, "ui-sortable-helper"))
              : this.currentItem.show();
          for (var t = this.containers.length - 1; 0 <= t; t--)
            this.containers[t]._trigger("deactivate", null, this._uiHash(this)),
              this.containers[t].containerCache.over &&
                (this.containers[t]._trigger("out", null, this._uiHash(this)),
                (this.containers[t].containerCache.over = 0));
        }
        return (
          this.placeholder &&
            (this.placeholder[0].parentNode &&
              this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            "original" !== this.options.helper &&
              this.helper &&
              this.helper[0].parentNode &&
              this.helper.remove(),
            S.extend(this, {
              helper: null,
              dragging: !1,
              reverting: !1,
              _noFinalSort: null,
            }),
            this.domPosition.prev
              ? S(this.domPosition.prev).after(this.currentItem)
              : S(this.domPosition.parent).prepend(this.currentItem)),
          this
        );
      },
      serialize: function (e) {
        var t = this._getItemsAsjQuery(e && e.connected),
          i = [];
        return (
          (e = e || {}),
          S(t).each(function () {
            var t = (S(e.item || this).attr(e.attribute || "id") || "").match(
              e.expression || /(.+)[\-=_](.+)/
            );
            t &&
              i.push(
                (e.key || t[1] + "[]") +
                  "=" +
                  (e.key && e.expression ? t[1] : t[2])
              );
          }),
          !i.length && e.key && i.push(e.key + "="),
          i.join("&")
        );
      },
      toArray: function (t) {
        var e = this._getItemsAsjQuery(t && t.connected),
          i = [];
        return (
          (t = t || {}),
          e.each(function () {
            i.push(S(t.item || this).attr(t.attribute || "id") || "");
          }),
          i
        );
      },
      _intersectsWith: function (t) {
        var e = this.positionAbs.left,
          i = e + this.helperProportions.width,
          s = this.positionAbs.top,
          n = s + this.helperProportions.height,
          o = t.left,
          a = o + t.width,
          r = t.top,
          l = r + t.height,
          h = this.offset.click.top,
          c = this.offset.click.left,
          u = "x" === this.options.axis || (r < s + h && s + h < l),
          d = "y" === this.options.axis || (o < e + c && e + c < a),
          p = u && d;
        return "pointer" === this.options.tolerance ||
          this.options.forcePointerForContainers ||
          ("pointer" !== this.options.tolerance &&
            this.helperProportions[this.floating ? "width" : "height"] >
              t[this.floating ? "width" : "height"])
          ? p
          : e + this.helperProportions.width / 2 > o &&
              a > i - this.helperProportions.width / 2 &&
              s + this.helperProportions.height / 2 > r &&
              l > n - this.helperProportions.height / 2;
      },
      _intersectsWithPointer: function (t) {
        var e,
          i,
          s =
            "x" === this.options.axis ||
            this._isOverAxis(
              this.positionAbs.top + this.offset.click.top,
              t.top,
              t.height
            ),
          n =
            "y" === this.options.axis ||
            this._isOverAxis(
              this.positionAbs.left + this.offset.click.left,
              t.left,
              t.width
            );
        return (
          !!(s && n) &&
          ((e = this._getDragVerticalDirection()),
          (i = this._getDragHorizontalDirection()),
          this.floating
            ? "right" === i || "down" === e
              ? 2
              : 1
            : e && ("down" === e ? 2 : 1))
        );
      },
      _intersectsWithSides: function (t) {
        var e = this._isOverAxis(
            this.positionAbs.top + this.offset.click.top,
            t.top + t.height / 2,
            t.height
          ),
          i = this._isOverAxis(
            this.positionAbs.left + this.offset.click.left,
            t.left + t.width / 2,
            t.width
          ),
          s = this._getDragVerticalDirection(),
          n = this._getDragHorizontalDirection();
        return this.floating && n
          ? ("right" === n && i) || ("left" === n && !i)
          : s && (("down" === s && e) || ("up" === s && !e));
      },
      _getDragVerticalDirection: function () {
        var t = this.positionAbs.top - this.lastPositionAbs.top;
        return 0 !== t && (0 < t ? "down" : "up");
      },
      _getDragHorizontalDirection: function () {
        var t = this.positionAbs.left - this.lastPositionAbs.left;
        return 0 !== t && (0 < t ? "right" : "left");
      },
      refresh: function (t) {
        return (
          this._refreshItems(t),
          this._setHandleClassName(),
          this.refreshPositions(),
          this
        );
      },
      _connectWith: function () {
        var t = this.options;
        return t.connectWith.constructor === String
          ? [t.connectWith]
          : t.connectWith;
      },
      _getItemsAsjQuery: function (t) {
        function e() {
          a.push(this);
        }
        var i,
          s,
          n,
          o,
          a = [],
          r = [],
          l = this._connectWith();
        if (l && t)
          for (i = l.length - 1; 0 <= i; i--)
            for (s = (n = S(l[i], this.document[0])).length - 1; 0 <= s; s--)
              (o = S.data(n[s], this.widgetFullName)) &&
                o !== this &&
                !o.options.disabled &&
                r.push([
                  S.isFunction(o.options.items)
                    ? o.options.items.call(o.element)
                    : S(o.options.items, o.element)
                        .not(".ui-sortable-helper")
                        .not(".ui-sortable-placeholder"),
                  o,
                ]);
        for (
          r.push([
            S.isFunction(this.options.items)
              ? this.options.items.call(this.element, null, {
                  options: this.options,
                  item: this.currentItem,
                })
              : S(this.options.items, this.element)
                  .not(".ui-sortable-helper")
                  .not(".ui-sortable-placeholder"),
            this,
          ]),
            i = r.length - 1;
          0 <= i;
          i--
        )
          r[i][0].each(e);
        return S(a);
      },
      _removeCurrentsFromItems: function () {
        var i = this.currentItem.find(":data(" + this.widgetName + "-item)");
        this.items = S.grep(this.items, function (t) {
          for (var e = 0; i.length > e; e++) if (i[e] === t.item[0]) return !1;
          return !0;
        });
      },
      _refreshItems: function (t) {
        (this.items = []), (this.containers = [this]);
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l,
          h = this.items,
          c = [
            [
              S.isFunction(this.options.items)
                ? this.options.items.call(this.element[0], t, {
                    item: this.currentItem,
                  })
                : S(this.options.items, this.element),
              this,
            ],
          ],
          u = this._connectWith();
        if (u && this.ready)
          for (e = u.length - 1; 0 <= e; e--)
            for (i = (s = S(u[e], this.document[0])).length - 1; 0 <= i; i--)
              (n = S.data(s[i], this.widgetFullName)) &&
                n !== this &&
                !n.options.disabled &&
                (c.push([
                  S.isFunction(n.options.items)
                    ? n.options.items.call(n.element[0], t, {
                        item: this.currentItem,
                      })
                    : S(n.options.items, n.element),
                  n,
                ]),
                this.containers.push(n));
        for (e = c.length - 1; 0 <= e; e--)
          for (o = c[e][1], i = 0, l = (a = c[e][0]).length; i < l; i++)
            (r = S(a[i])).data(this.widgetName + "-item", o),
              h.push({
                item: r,
                instance: o,
                width: 0,
                height: 0,
                left: 0,
                top: 0,
              });
      },
      refreshPositions: function (t) {
        var e, i, s, n;
        for (
          this.floating =
            !!this.items.length &&
            ("x" === this.options.axis || this._isFloating(this.items[0].item)),
            this.offsetParent &&
              this.helper &&
              (this.offset.parent = this._getParentOffset()),
            e = this.items.length - 1;
          0 <= e;
          e--
        )
          ((i = this.items[e]).instance !== this.currentContainer &&
            this.currentContainer &&
            i.item[0] !== this.currentItem[0]) ||
            ((s = this.options.toleranceElement
              ? S(this.options.toleranceElement, i.item)
              : i.item),
            t || ((i.width = s.outerWidth()), (i.height = s.outerHeight())),
            (n = s.offset()),
            (i.left = n.left),
            (i.top = n.top));
        if (this.options.custom && this.options.custom.refreshContainers)
          this.options.custom.refreshContainers.call(this);
        else
          for (e = this.containers.length - 1; 0 <= e; e--)
            (n = this.containers[e].element.offset()),
              (this.containers[e].containerCache.left = n.left),
              (this.containers[e].containerCache.top = n.top),
              (this.containers[e].containerCache.width =
                this.containers[e].element.outerWidth()),
              (this.containers[e].containerCache.height =
                this.containers[e].element.outerHeight());
        return this;
      },
      _createPlaceholder: function (i) {
        var s,
          n = (i = i || this).options;
        (n.placeholder && n.placeholder.constructor !== String) ||
          ((s = n.placeholder),
          (n.placeholder = {
            element: function () {
              var t = i.currentItem[0].nodeName.toLowerCase(),
                e = S("<" + t + ">", i.document[0]);
              return (
                i
                  ._addClass(
                    e,
                    "ui-sortable-placeholder",
                    s || i.currentItem[0].className
                  )
                  ._removeClass(e, "ui-sortable-helper"),
                "tbody" === t
                  ? i._createTrPlaceholder(
                      i.currentItem.find("tr").eq(0),
                      S("<tr>", i.document[0]).appendTo(e)
                    )
                  : "tr" === t
                  ? i._createTrPlaceholder(i.currentItem, e)
                  : "img" === t && e.attr("src", i.currentItem.attr("src")),
                s || e.css("visibility", "hidden"),
                e
              );
            },
            update: function (t, e) {
              (!s || n.forcePlaceholderSize) &&
                (e.height() ||
                  e.height(
                    i.currentItem.innerHeight() -
                      parseInt(i.currentItem.css("paddingTop") || 0, 10) -
                      parseInt(i.currentItem.css("paddingBottom") || 0, 10)
                  ),
                e.width() ||
                  e.width(
                    i.currentItem.innerWidth() -
                      parseInt(i.currentItem.css("paddingLeft") || 0, 10) -
                      parseInt(i.currentItem.css("paddingRight") || 0, 10)
                  ));
            },
          })),
          (i.placeholder = S(
            n.placeholder.element.call(i.element, i.currentItem)
          )),
          i.currentItem.after(i.placeholder),
          n.placeholder.update(i, i.placeholder);
      },
      _createTrPlaceholder: function (t, e) {
        var i = this;
        t.children().each(function () {
          S("<td>&#160;</td>", i.document[0])
            .attr("colspan", S(this).attr("colspan") || 1)
            .appendTo(e);
        });
      },
      _contactContainers: function (t) {
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l,
          h,
          c,
          u = null,
          d = null;
        for (e = this.containers.length - 1; 0 <= e; e--)
          if (!S.contains(this.currentItem[0], this.containers[e].element[0]))
            if (this._intersectsWith(this.containers[e].containerCache)) {
              if (u && S.contains(this.containers[e].element[0], u.element[0]))
                continue;
              (u = this.containers[e]), (d = e);
            } else
              this.containers[e].containerCache.over &&
                (this.containers[e]._trigger("out", t, this._uiHash(this)),
                (this.containers[e].containerCache.over = 0));
        if (u)
          if (1 === this.containers.length)
            this.containers[d].containerCache.over ||
              (this.containers[d]._trigger("over", t, this._uiHash(this)),
              (this.containers[d].containerCache.over = 1));
          else {
            for (
              s = 1e4,
                n = null,
                o = (h = u.floating || this._isFloating(this.currentItem))
                  ? "left"
                  : "top",
                a = h ? "width" : "height",
                c = h ? "pageX" : "pageY",
                i = this.items.length - 1;
              0 <= i;
              i--
            )
              S.contains(
                this.containers[d].element[0],
                this.items[i].item[0]
              ) &&
                this.items[i].item[0] !== this.currentItem[0] &&
                ((r = this.items[i].item.offset()[o]),
                (l = !1),
                t[c] - r > this.items[i][a] / 2 && (l = !0),
                s > Math.abs(t[c] - r) &&
                  ((s = Math.abs(t[c] - r)),
                  (n = this.items[i]),
                  (this.direction = l ? "up" : "down")));
            if (!n && !this.options.dropOnEmpty) return;
            if (this.currentContainer === this.containers[d])
              return void (
                this.currentContainer.containerCache.over ||
                (this.containers[d]._trigger("over", t, this._uiHash()),
                (this.currentContainer.containerCache.over = 1))
              );
            n
              ? this._rearrange(t, n, null, !0)
              : this._rearrange(t, null, this.containers[d].element, !0),
              this._trigger("change", t, this._uiHash()),
              this.containers[d]._trigger("change", t, this._uiHash(this)),
              (this.currentContainer = this.containers[d]),
              this.options.placeholder.update(
                this.currentContainer,
                this.placeholder
              ),
              this.containers[d]._trigger("over", t, this._uiHash(this)),
              (this.containers[d].containerCache.over = 1);
          }
      },
      _createHelper: function (t) {
        var e = this.options,
          i = S.isFunction(e.helper)
            ? S(e.helper.apply(this.element[0], [t, this.currentItem]))
            : "clone" === e.helper
            ? this.currentItem.clone()
            : this.currentItem;
        return (
          i.parents("body").length ||
            S(
              "parent" !== e.appendTo
                ? e.appendTo
                : this.currentItem[0].parentNode
            )[0].appendChild(i[0]),
          i[0] === this.currentItem[0] &&
            (this._storedCSS = {
              width: this.currentItem[0].style.width,
              height: this.currentItem[0].style.height,
              position: this.currentItem.css("position"),
              top: this.currentItem.css("top"),
              left: this.currentItem.css("left"),
            }),
          (!i[0].style.width || e.forceHelperSize) &&
            i.width(this.currentItem.width()),
          (!i[0].style.height || e.forceHelperSize) &&
            i.height(this.currentItem.height()),
          i
        );
      },
      _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")),
          S.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }),
          "left" in t && (this.offset.click.left = t.left + this.margins.left),
          "right" in t &&
            (this.offset.click.left =
              this.helperProportions.width - t.right + this.margins.left),
          "top" in t && (this.offset.click.top = t.top + this.margins.top),
          "bottom" in t &&
            (this.offset.click.top =
              this.helperProportions.height - t.bottom + this.margins.top);
      },
      _getParentOffset: function () {
        this.offsetParent = this.helper.offsetParent();
        var t = this.offsetParent.offset();
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== this.document[0] &&
            S.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          (this.offsetParent[0] === this.document[0].body ||
            (this.offsetParent[0].tagName &&
              "html" === this.offsetParent[0].tagName.toLowerCase() &&
              S.ui.ie)) &&
            (t = { top: 0, left: 0 }),
          {
            top:
              t.top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" === this.cssPosition) {
          var t = this.currentItem.position();
          return {
            top:
              t.top -
              (parseInt(this.helper.css("top"), 10) || 0) +
              this.scrollParent.scrollTop(),
            left:
              t.left -
              (parseInt(this.helper.css("left"), 10) || 0) +
              this.scrollParent.scrollLeft(),
          };
        }
        return { top: 0, left: 0 };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
          top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          e,
          i,
          s = this.options;
        "parent" === s.containment &&
          (s.containment = this.helper[0].parentNode),
          ("document" === s.containment || "window" === s.containment) &&
            (this.containment = [
              0 - this.offset.relative.left - this.offset.parent.left,
              0 - this.offset.relative.top - this.offset.parent.top,
              "document" === s.containment
                ? this.document.width()
                : this.window.width() -
                  this.helperProportions.width -
                  this.margins.left,
              ("document" === s.containment
                ? this.document.height() ||
                  document.body.parentNode.scrollHeight
                : this.window.height() ||
                  this.document[0].body.parentNode.scrollHeight) -
                this.helperProportions.height -
                this.margins.top,
            ]),
          /^(document|window|parent)$/.test(s.containment) ||
            ((t = S(s.containment)[0]),
            (e = S(s.containment).offset()),
            (i = "hidden" !== S(t).css("overflow")),
            (this.containment = [
              e.left +
                (parseInt(S(t).css("borderLeftWidth"), 10) || 0) +
                (parseInt(S(t).css("paddingLeft"), 10) || 0) -
                this.margins.left,
              e.top +
                (parseInt(S(t).css("borderTopWidth"), 10) || 0) +
                (parseInt(S(t).css("paddingTop"), 10) || 0) -
                this.margins.top,
              e.left +
                (i ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) -
                (parseInt(S(t).css("borderLeftWidth"), 10) || 0) -
                (parseInt(S(t).css("paddingRight"), 10) || 0) -
                this.helperProportions.width -
                this.margins.left,
              e.top +
                (i
                  ? Math.max(t.scrollHeight, t.offsetHeight)
                  : t.offsetHeight) -
                (parseInt(S(t).css("borderTopWidth"), 10) || 0) -
                (parseInt(S(t).css("paddingBottom"), 10) || 0) -
                this.helperProportions.height -
                this.margins.top,
            ]));
      },
      _convertPositionTo: function (t, e) {
        e || (e = this.position);
        var i = "absolute" === t ? 1 : -1,
          s =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              S.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          n = /(html|body)/i.test(s[0].tagName);
        return {
          top:
            e.top +
            this.offset.relative.top * i +
            this.offset.parent.top * i -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollTop()
              : n
              ? 0
              : s.scrollTop()) *
              i,
          left:
            e.left +
            this.offset.relative.left * i +
            this.offset.parent.left * i -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollLeft()
              : n
              ? 0
              : s.scrollLeft()) *
              i,
        };
      },
      _generatePosition: function (t) {
        var e,
          i,
          s = this.options,
          n = t.pageX,
          o = t.pageY,
          a =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              S.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          r = /(html|body)/i.test(a[0].tagName);
        return (
          "relative" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              this.scrollParent[0] !== this.offsetParent[0]) ||
            (this.offset.relative = this._getRelativeOffset()),
          this.originalPosition &&
            (this.containment &&
              (t.pageX - this.offset.click.left < this.containment[0] &&
                (n = this.containment[0] + this.offset.click.left),
              t.pageY - this.offset.click.top < this.containment[1] &&
                (o = this.containment[1] + this.offset.click.top),
              t.pageX - this.offset.click.left > this.containment[2] &&
                (n = this.containment[2] + this.offset.click.left),
              t.pageY - this.offset.click.top > this.containment[3] &&
                (o = this.containment[3] + this.offset.click.top)),
            s.grid &&
              ((e =
                this.originalPageY +
                Math.round((o - this.originalPageY) / s.grid[1]) * s.grid[1]),
              (o = this.containment
                ? e - this.offset.click.top >= this.containment[1] &&
                  e - this.offset.click.top <= this.containment[3]
                  ? e
                  : e - this.offset.click.top >= this.containment[1]
                  ? e - s.grid[1]
                  : e + s.grid[1]
                : e),
              (i =
                this.originalPageX +
                Math.round((n - this.originalPageX) / s.grid[0]) * s.grid[0]),
              (n = this.containment
                ? i - this.offset.click.left >= this.containment[0] &&
                  i - this.offset.click.left <= this.containment[2]
                  ? i
                  : i - this.offset.click.left >= this.containment[0]
                  ? i - s.grid[0]
                  : i + s.grid[0]
                : i))),
          {
            top:
              o -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollTop()
                : r
                ? 0
                : a.scrollTop()),
            left:
              n -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollLeft()
                : r
                ? 0
                : a.scrollLeft()),
          }
        );
      },
      _rearrange: function (t, e, i, s) {
        i
          ? i[0].appendChild(this.placeholder[0])
          : e.item[0].parentNode.insertBefore(
              this.placeholder[0],
              "down" === this.direction ? e.item[0] : e.item[0].nextSibling
            ),
          (this.counter = this.counter ? ++this.counter : 1);
        var n = this.counter;
        this._delay(function () {
          n === this.counter && this.refreshPositions(!s);
        });
      },
      _clear: function (t, e) {
        function i(e, i, s) {
          return function (t) {
            s._trigger(e, t, i._uiHash(i));
          };
        }
        this.reverting = !1;
        var s,
          n = [];
        if (
          (!this._noFinalSort &&
            this.currentItem.parent().length &&
            this.placeholder.before(this.currentItem),
          (this._noFinalSort = null),
          this.helper[0] === this.currentItem[0])
        ) {
          for (s in this._storedCSS)
            ("auto" === this._storedCSS[s] ||
              "static" === this._storedCSS[s]) &&
              (this._storedCSS[s] = "");
          this.currentItem.css(this._storedCSS),
            this._removeClass(this.currentItem, "ui-sortable-helper");
        } else this.currentItem.show();
        for (
          this.fromOutside &&
            !e &&
            n.push(function (t) {
              this._trigger("receive", t, this._uiHash(this.fromOutside));
            }),
            (!this.fromOutside &&
              this.domPosition.prev ===
                this.currentItem.prev().not(".ui-sortable-helper")[0] &&
              this.domPosition.parent === this.currentItem.parent()[0]) ||
              e ||
              n.push(function (t) {
                this._trigger("update", t, this._uiHash());
              }),
            this !== this.currentContainer &&
              (e ||
                (n.push(function (t) {
                  this._trigger("remove", t, this._uiHash());
                }),
                n.push(
                  function (e) {
                    return function (t) {
                      e._trigger("receive", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ),
                n.push(
                  function (e) {
                    return function (t) {
                      e._trigger("update", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ))),
            s = this.containers.length - 1;
          0 <= s;
          s--
        )
          e || n.push(i("deactivate", this, this.containers[s])),
            this.containers[s].containerCache.over &&
              (n.push(i("out", this, this.containers[s])),
              (this.containers[s].containerCache.over = 0));
        if (
          (this.storedCursor &&
            (this.document.find("body").css("cursor", this.storedCursor),
            this.storedStylesheet.remove()),
          this._storedOpacity &&
            this.helper.css("opacity", this._storedOpacity),
          this._storedZIndex &&
            this.helper.css(
              "zIndex",
              "auto" === this._storedZIndex ? "" : this._storedZIndex
            ),
          (this.dragging = !1),
          e || this._trigger("beforeStop", t, this._uiHash()),
          this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
          this.cancelHelperRemoval ||
            (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
            (this.helper = null)),
          !e)
        ) {
          for (s = 0; n.length > s; s++) n[s].call(this, t);
          this._trigger("stop", t, this._uiHash());
        }
        return (this.fromOutside = !1), !this.cancelHelperRemoval;
      },
      _trigger: function () {
        !1 === S.Widget.prototype._trigger.apply(this, arguments) &&
          this.cancel();
      },
      _uiHash: function (t) {
        var e = t || this;
        return {
          helper: e.helper,
          placeholder: e.placeholder || S([]),
          position: e.position,
          originalPosition: e.originalPosition,
          offset: e.positionAbs,
          item: e.currentItem,
          sender: t ? t.element : null,
        };
      },
    }),
    S.widget("ui.spinner", {
      version: "1.12.1",
      defaultElement: "<input>",
      widgetEventPrefix: "spin",
      options: {
        classes: {
          "ui-spinner": "ui-corner-all",
          "ui-spinner-down": "ui-corner-br",
          "ui-spinner-up": "ui-corner-tr",
        },
        culture: null,
        icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" },
        incremental: !0,
        max: null,
        min: null,
        numberFormat: null,
        page: 10,
        step: 1,
        change: null,
        spin: null,
        start: null,
        stop: null,
      },
      _create: function () {
        this._setOption("max", this.options.max),
          this._setOption("min", this.options.min),
          this._setOption("step", this.options.step),
          "" !== this.value() && this._value(this.element.val(), !0),
          this._draw(),
          this._on(this._events),
          this._refresh(),
          this._on(this.window, {
            beforeunload: function () {
              this.element.removeAttr("autocomplete");
            },
          });
      },
      _getCreateOptions: function () {
        var s = this._super(),
          n = this.element;
        return (
          S.each(["min", "max", "step"], function (t, e) {
            var i = n.attr(e);
            null != i && i.length && (s[e] = i);
          }),
          s
        );
      },
      _events: {
        keydown: function (t) {
          this._start(t) && this._keydown(t) && t.preventDefault();
        },
        keyup: "_stop",
        focus: function () {
          this.previous = this.element.val();
        },
        blur: function (t) {
          return this.cancelBlur
            ? void delete this.cancelBlur
            : (this._stop(),
              this._refresh(),
              void (
                this.previous !== this.element.val() &&
                this._trigger("change", t)
              ));
        },
        mousewheel: function (t, e) {
          if (e) {
            if (!this.spinning && !this._start(t)) return !1;
            this._spin((0 < e ? 1 : -1) * this.options.step, t),
              clearTimeout(this.mousewheelTimer),
              (this.mousewheelTimer = this._delay(function () {
                this.spinning && this._stop(t);
              }, 100)),
              t.preventDefault();
          }
        },
        "mousedown .ui-spinner-button": function (t) {
          function e() {
            this.element[0] === S.ui.safeActiveElement(this.document[0]) ||
              (this.element.trigger("focus"),
              (this.previous = i),
              this._delay(function () {
                this.previous = i;
              }));
          }
          var i;
          (i =
            this.element[0] === S.ui.safeActiveElement(this.document[0])
              ? this.previous
              : this.element.val()),
            t.preventDefault(),
            e.call(this),
            (this.cancelBlur = !0),
            this._delay(function () {
              delete this.cancelBlur, e.call(this);
            }),
            !1 !== this._start(t) &&
              this._repeat(
                null,
                S(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                t
              );
        },
        "mouseup .ui-spinner-button": "_stop",
        "mouseenter .ui-spinner-button": function (t) {
          return S(t.currentTarget).hasClass("ui-state-active")
            ? !1 !== this._start(t) &&
                void this._repeat(
                  null,
                  S(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                  t
                )
            : void 0;
        },
        "mouseleave .ui-spinner-button": "_stop",
      },
      _enhance: function () {
        this.uiSpinner = this.element
          .attr("autocomplete", "off")
          .wrap("<span>")
          .parent()
          .append("<a></a><a></a>");
      },
      _draw: function () {
        this._enhance(),
          this._addClass(
            this.uiSpinner,
            "ui-spinner",
            "ui-widget ui-widget-content"
          ),
          this._addClass("ui-spinner-input"),
          this.element.attr("role", "spinbutton"),
          (this.buttons = this.uiSpinner
            .children("a")
            .attr("tabIndex", -1)
            .attr("aria-hidden", !0)
            .button({ classes: { "ui-button": "" } })),
          this._removeClass(this.buttons, "ui-corner-all"),
          this._addClass(
            this.buttons.first(),
            "ui-spinner-button ui-spinner-up"
          ),
          this._addClass(
            this.buttons.last(),
            "ui-spinner-button ui-spinner-down"
          ),
          this.buttons
            .first()
            .button({ icon: this.options.icons.up, showLabel: !1 }),
          this.buttons
            .last()
            .button({ icon: this.options.icons.down, showLabel: !1 }),
          this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) &&
            0 < this.uiSpinner.height() &&
            this.uiSpinner.height(this.uiSpinner.height());
      },
      _keydown: function (t) {
        var e = this.options,
          i = S.ui.keyCode;
        switch (t.keyCode) {
          case i.UP:
            return this._repeat(null, 1, t), !0;
          case i.DOWN:
            return this._repeat(null, -1, t), !0;
          case i.PAGE_UP:
            return this._repeat(null, e.page, t), !0;
          case i.PAGE_DOWN:
            return this._repeat(null, -e.page, t), !0;
        }
        return !1;
      },
      _start: function (t) {
        return (
          !(!this.spinning && !1 === this._trigger("start", t)) &&
          (this.counter || (this.counter = 1), (this.spinning = !0))
        );
      },
      _repeat: function (t, e, i) {
        (t = t || 500),
          clearTimeout(this.timer),
          (this.timer = this._delay(function () {
            this._repeat(40, e, i);
          }, t)),
          this._spin(e * this.options.step, i);
      },
      _spin: function (t, e) {
        var i = this.value() || 0;
        this.counter || (this.counter = 1),
          (i = this._adjustValue(i + t * this._increment(this.counter))),
          (this.spinning && !1 === this._trigger("spin", e, { value: i })) ||
            (this._value(i), this.counter++);
      },
      _increment: function (t) {
        var e = this.options.incremental;
        return e
          ? S.isFunction(e)
            ? e(t)
            : Math.floor((t * t * t) / 5e4 - (t * t) / 500 + (17 * t) / 200 + 1)
          : 1;
      },
      _precision: function () {
        var t = this._precisionOf(this.options.step);
        return (
          null !== this.options.min &&
            (t = Math.max(t, this._precisionOf(this.options.min))),
          t
        );
      },
      _precisionOf: function (t) {
        var e = "" + t,
          i = e.indexOf(".");
        return -1 === i ? 0 : e.length - i - 1;
      },
      _adjustValue: function (t) {
        var e,
          i,
          s = this.options;
        return (
          (i = t - (e = null !== s.min ? s.min : 0)),
          (t = e + (i = Math.round(i / s.step) * s.step)),
          (t = parseFloat(t.toFixed(this._precision()))),
          null !== s.max && t > s.max
            ? s.max
            : null !== s.min && s.min > t
            ? s.min
            : t
        );
      },
      _stop: function (t) {
        this.spinning &&
          (clearTimeout(this.timer),
          clearTimeout(this.mousewheelTimer),
          (this.counter = 0),
          (this.spinning = !1),
          this._trigger("stop", t));
      },
      _setOption: function (t, e) {
        var i, s, n;
        return "culture" === t || "numberFormat" === t
          ? ((i = this._parse(this.element.val())),
            (this.options[t] = e),
            void this.element.val(this._format(i)))
          : (("max" === t || "min" === t || "step" === t) &&
              "string" == typeof e &&
              (e = this._parse(e)),
            "icons" === t &&
              ((s = this.buttons.first().find(".ui-icon")),
              this._removeClass(s, null, this.options.icons.up),
              this._addClass(s, null, e.up),
              (n = this.buttons.last().find(".ui-icon")),
              this._removeClass(n, null, this.options.icons.down),
              this._addClass(n, null, e.down)),
            void this._super(t, e));
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!t),
          this.element.prop("disabled", !!t),
          this.buttons.button(t ? "disable" : "enable");
      },
      _setOptions: e(function (t) {
        this._super(t);
      }),
      _parse: function (t) {
        return (
          "string" == typeof t &&
            "" !== t &&
            (t =
              window.Globalize && this.options.numberFormat
                ? Globalize.parseFloat(t, 10, this.options.culture)
                : +t),
          "" === t || isNaN(t) ? null : t
        );
      },
      _format: function (t) {
        return "" === t
          ? ""
          : window.Globalize && this.options.numberFormat
          ? Globalize.format(t, this.options.numberFormat, this.options.culture)
          : t;
      },
      _refresh: function () {
        this.element.attr({
          "aria-valuemin": this.options.min,
          "aria-valuemax": this.options.max,
          "aria-valuenow": this._parse(this.element.val()),
        });
      },
      isValid: function () {
        var t = this.value();
        return null !== t && t === this._adjustValue(t);
      },
      _value: function (t, e) {
        var i;
        "" !== t &&
          null !== (i = this._parse(t)) &&
          (e || (i = this._adjustValue(i)), (t = this._format(i))),
          this.element.val(t),
          this._refresh();
      },
      _destroy: function () {
        this.element
          .prop("disabled", !1)
          .removeAttr(
            "autocomplete role aria-valuemin aria-valuemax aria-valuenow"
          ),
          this.uiSpinner.replaceWith(this.element);
      },
      stepUp: e(function (t) {
        this._stepUp(t);
      }),
      _stepUp: function (t) {
        this._start() &&
          (this._spin((t || 1) * this.options.step), this._stop());
      },
      stepDown: e(function (t) {
        this._stepDown(t);
      }),
      _stepDown: function (t) {
        this._start() &&
          (this._spin((t || 1) * -this.options.step), this._stop());
      },
      pageUp: e(function (t) {
        this._stepUp((t || 1) * this.options.page);
      }),
      pageDown: e(function (t) {
        this._stepDown((t || 1) * this.options.page);
      }),
      value: function (t) {
        return arguments.length
          ? void e(this._value).call(this, t)
          : this._parse(this.element.val());
      },
      widget: function () {
        return this.uiSpinner;
      },
    }),
    !1 !== S.uiBackCompat &&
      S.widget("ui.spinner", S.ui.spinner, {
        _enhance: function () {
          this.uiSpinner = this.element
            .attr("autocomplete", "off")
            .wrap(this._uiSpinnerHtml())
            .parent()
            .append(this._buttonHtml());
        },
        _uiSpinnerHtml: function () {
          return "<span>";
        },
        _buttonHtml: function () {
          return "<a></a><a></a>";
        },
      }),
    S.ui.spinner,
    S.widget("ui.tabs", {
      version: "1.12.1",
      delay: 300,
      options: {
        active: null,
        classes: {
          "ui-tabs": "ui-corner-all",
          "ui-tabs-nav": "ui-corner-all",
          "ui-tabs-panel": "ui-corner-bottom",
          "ui-tabs-tab": "ui-corner-top",
        },
        collapsible: !1,
        event: "click",
        heightStyle: "content",
        hide: null,
        show: null,
        activate: null,
        beforeActivate: null,
        beforeLoad: null,
        load: null,
      },
      _isLocal:
        ((y = /#.*$/),
        function (t) {
          var e, i;
          (e = t.href.replace(y, "")), (i = location.href.replace(y, ""));
          try {
            e = decodeURIComponent(e);
          } catch (t) {}
          try {
            i = decodeURIComponent(i);
          } catch (t) {}
          return 1 < t.hash.length && e === i;
        }),
      _create: function () {
        var e = this,
          t = this.options;
        (this.running = !1),
          this._addClass("ui-tabs", "ui-widget ui-widget-content"),
          this._toggleClass("ui-tabs-collapsible", null, t.collapsible),
          this._processTabs(),
          (t.active = this._initialActive()),
          S.isArray(t.disabled) &&
            (t.disabled = S.unique(
              t.disabled.concat(
                S.map(this.tabs.filter(".ui-state-disabled"), function (t) {
                  return e.tabs.index(t);
                })
              )
            ).sort()),
          (this.active =
            !1 !== this.options.active && this.anchors.length
              ? this._findActive(t.active)
              : S()),
          this._refresh(),
          this.active.length && this.load(t.active);
      },
      _initialActive: function () {
        var i = this.options.active,
          t = this.options.collapsible,
          s = location.hash.substring(1);
        return (
          null === i &&
            (s &&
              this.tabs.each(function (t, e) {
                return S(e).attr("aria-controls") === s
                  ? ((i = t), !1)
                  : void 0;
              }),
            null === i &&
              (i = this.tabs.index(this.tabs.filter(".ui-tabs-active"))),
            (null === i || -1 === i) && (i = !!this.tabs.length && 0)),
          !1 !== i &&
            -1 === (i = this.tabs.index(this.tabs.eq(i))) &&
            (i = !t && 0),
          !t && !1 === i && this.anchors.length && (i = 0),
          i
        );
      },
      _getCreateEventData: function () {
        return {
          tab: this.active,
          panel: this.active.length ? this._getPanelForTab(this.active) : S(),
        };
      },
      _tabKeydown: function (t) {
        var e = S(S.ui.safeActiveElement(this.document[0])).closest("li"),
          i = this.tabs.index(e),
          s = !0;
        if (!this._handlePageNav(t)) {
          switch (t.keyCode) {
            case S.ui.keyCode.RIGHT:
            case S.ui.keyCode.DOWN:
              i++;
              break;
            case S.ui.keyCode.UP:
            case S.ui.keyCode.LEFT:
              (s = !1), i--;
              break;
            case S.ui.keyCode.END:
              i = this.anchors.length - 1;
              break;
            case S.ui.keyCode.HOME:
              i = 0;
              break;
            case S.ui.keyCode.SPACE:
              return (
                t.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(i)
              );
            case S.ui.keyCode.ENTER:
              return (
                t.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(i !== this.options.active && i)
              );
            default:
              return;
          }
          t.preventDefault(),
            clearTimeout(this.activating),
            (i = this._focusNextTab(i, s)),
            t.ctrlKey ||
              t.metaKey ||
              (e.attr("aria-selected", "false"),
              this.tabs.eq(i).attr("aria-selected", "true"),
              (this.activating = this._delay(function () {
                this.option("active", i);
              }, this.delay)));
        }
      },
      _panelKeydown: function (t) {
        this._handlePageNav(t) ||
          (t.ctrlKey &&
            t.keyCode === S.ui.keyCode.UP &&
            (t.preventDefault(), this.active.trigger("focus")));
      },
      _handlePageNav: function (t) {
        return t.altKey && t.keyCode === S.ui.keyCode.PAGE_UP
          ? (this._activate(this._focusNextTab(this.options.active - 1, !1)),
            !0)
          : t.altKey && t.keyCode === S.ui.keyCode.PAGE_DOWN
          ? (this._activate(this._focusNextTab(this.options.active + 1, !0)),
            !0)
          : void 0;
      },
      _findNextTab: function (t, e) {
        for (
          var i = this.tabs.length - 1;
          -1 !==
          S.inArray(
            (i < t && (t = 0), t < 0 && (t = i), t),
            this.options.disabled
          );

        )
          t = e ? t + 1 : t - 1;
        return t;
      },
      _focusNextTab: function (t, e) {
        return (
          (t = this._findNextTab(t, e)), this.tabs.eq(t).trigger("focus"), t
        );
      },
      _setOption: function (t, e) {
        return "active" === t
          ? void this._activate(e)
          : (this._super(t, e),
            "collapsible" === t &&
              (this._toggleClass("ui-tabs-collapsible", null, e),
              e || !1 !== this.options.active || this._activate(0)),
            "event" === t && this._setupEvents(e),
            void ("heightStyle" === t && this._setupHeightStyle(e)));
      },
      _sanitizeSelector: function (t) {
        return t
          ? t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&")
          : "";
      },
      refresh: function () {
        var t = this.options,
          e = this.tablist.children(":has(a[href])");
        (t.disabled = S.map(e.filter(".ui-state-disabled"), function (t) {
          return e.index(t);
        })),
          this._processTabs(),
          !1 !== t.active && this.anchors.length
            ? this.active.length && !S.contains(this.tablist[0], this.active[0])
              ? this.tabs.length === t.disabled.length
                ? ((t.active = !1), (this.active = S()))
                : this._activate(
                    this._findNextTab(Math.max(0, t.active - 1), !1)
                  )
              : (t.active = this.tabs.index(this.active))
            : ((t.active = !1), (this.active = S())),
          this._refresh();
      },
      _refresh: function () {
        this._setOptionDisabled(this.options.disabled),
          this._setupEvents(this.options.event),
          this._setupHeightStyle(this.options.heightStyle),
          this.tabs.not(this.active).attr({
            "aria-selected": "false",
            "aria-expanded": "false",
            tabIndex: -1,
          }),
          this.panels
            .not(this._getPanelForTab(this.active))
            .hide()
            .attr({ "aria-hidden": "true" }),
          this.active.length
            ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0,
              }),
              this._addClass(this.active, "ui-tabs-active", "ui-state-active"),
              this._getPanelForTab(this.active)
                .show()
                .attr({ "aria-hidden": "false" }))
            : this.tabs.eq(0).attr("tabIndex", 0);
      },
      _processTabs: function () {
        var l = this,
          t = this.tabs,
          e = this.anchors,
          i = this.panels;
        (this.tablist = this._getList().attr("role", "tablist")),
          this._addClass(
            this.tablist,
            "ui-tabs-nav",
            "ui-helper-reset ui-helper-clearfix ui-widget-header"
          ),
          this.tablist
            .on("mousedown" + this.eventNamespace, "> li", function (t) {
              S(this).is(".ui-state-disabled") && t.preventDefault();
            })
            .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
              S(this).closest("li").is(".ui-state-disabled") && this.blur();
            }),
          (this.tabs = this.tablist
            .find("> li:has(a[href])")
            .attr({ role: "tab", tabIndex: -1 })),
          this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"),
          (this.anchors = this.tabs
            .map(function () {
              return S("a", this)[0];
            })
            .attr({ role: "presentation", tabIndex: -1 })),
          this._addClass(this.anchors, "ui-tabs-anchor"),
          (this.panels = S()),
          this.anchors.each(function (t, e) {
            var i,
              s,
              n,
              o = S(e).uniqueId().attr("id"),
              a = S(e).closest("li"),
              r = a.attr("aria-controls");
            l._isLocal(e)
              ? ((n = (i = e.hash).substring(1)),
                (s = l.element.find(l._sanitizeSelector(i))))
              : ((i =
                  "#" +
                  (n = a.attr("aria-controls") || S({}).uniqueId()[0].id)),
                (s = l.element.find(i)).length ||
                  (s = l._createPanel(n)).insertAfter(
                    l.panels[t - 1] || l.tablist
                  ),
                s.attr("aria-live", "polite")),
              s.length && (l.panels = l.panels.add(s)),
              r && a.data("ui-tabs-aria-controls", r),
              a.attr({ "aria-controls": n, "aria-labelledby": o }),
              s.attr("aria-labelledby", o);
          }),
          this.panels.attr("role", "tabpanel"),
          this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"),
          t &&
            (this._off(t.not(this.tabs)),
            this._off(e.not(this.anchors)),
            this._off(i.not(this.panels)));
      },
      _getList: function () {
        return this.tablist || this.element.find("ol, ul").eq(0);
      },
      _createPanel: function (t) {
        return S("<div>").attr("id", t).data("ui-tabs-destroy", !0);
      },
      _setOptionDisabled: function (t) {
        var e, i, s;
        for (
          S.isArray(t) &&
            (t.length
              ? t.length === this.anchors.length && (t = !0)
              : (t = !1)),
            s = 0;
          (i = this.tabs[s]);
          s++
        )
          (e = S(i)),
            !0 === t || -1 !== S.inArray(s, t)
              ? (e.attr("aria-disabled", "true"),
                this._addClass(e, null, "ui-state-disabled"))
              : (e.removeAttr("aria-disabled"),
                this._removeClass(e, null, "ui-state-disabled"));
        (this.options.disabled = t),
          this._toggleClass(
            this.widget(),
            this.widgetFullName + "-disabled",
            null,
            !0 === t
          );
      },
      _setupEvents: function (t) {
        var i = {};
        t &&
          S.each(t.split(" "), function (t, e) {
            i[e] = "_eventHandler";
          }),
          this._off(this.anchors.add(this.tabs).add(this.panels)),
          this._on(!0, this.anchors, {
            click: function (t) {
              t.preventDefault();
            },
          }),
          this._on(this.anchors, i),
          this._on(this.tabs, { keydown: "_tabKeydown" }),
          this._on(this.panels, { keydown: "_panelKeydown" }),
          this._focusable(this.tabs),
          this._hoverable(this.tabs);
      },
      _setupHeightStyle: function (t) {
        var i,
          e = this.element.parent();
        "fill" === t
          ? ((i = e.height()),
            (i -= this.element.outerHeight() - this.element.height()),
            this.element.siblings(":visible").each(function () {
              var t = S(this),
                e = t.css("position");
              "absolute" !== e && "fixed" !== e && (i -= t.outerHeight(!0));
            }),
            this.element
              .children()
              .not(this.panels)
              .each(function () {
                i -= S(this).outerHeight(!0);
              }),
            this.panels
              .each(function () {
                S(this).height(
                  Math.max(0, i - S(this).innerHeight() + S(this).height())
                );
              })
              .css("overflow", "auto"))
          : "auto" === t &&
            ((i = 0),
            this.panels
              .each(function () {
                i = Math.max(i, S(this).height("").height());
              })
              .height(i));
      },
      _eventHandler: function (t) {
        var e = this.options,
          i = this.active,
          s = S(t.currentTarget).closest("li"),
          n = s[0] === i[0],
          o = n && e.collapsible,
          a = o ? S() : this._getPanelForTab(s),
          r = i.length ? this._getPanelForTab(i) : S(),
          l = { oldTab: i, oldPanel: r, newTab: o ? S() : s, newPanel: a };
        t.preventDefault(),
          s.hasClass("ui-state-disabled") ||
            s.hasClass("ui-tabs-loading") ||
            this.running ||
            (n && !e.collapsible) ||
            !1 === this._trigger("beforeActivate", t, l) ||
            ((e.active = !o && this.tabs.index(s)),
            (this.active = n ? S() : s),
            this.xhr && this.xhr.abort(),
            r.length ||
              a.length ||
              S.error("jQuery UI Tabs: Mismatching fragment identifier."),
            a.length && this.load(this.tabs.index(s), t),
            this._toggle(t, l));
      },
      _toggle: function (t, e) {
        function i() {
          (n.running = !1), n._trigger("activate", t, e);
        }
        function s() {
          n._addClass(
            e.newTab.closest("li"),
            "ui-tabs-active",
            "ui-state-active"
          ),
            o.length && n.options.show
              ? n._show(o, n.options.show, i)
              : (o.show(), i());
        }
        var n = this,
          o = e.newPanel,
          a = e.oldPanel;
        (this.running = !0),
          a.length && this.options.hide
            ? this._hide(a, this.options.hide, function () {
                n._removeClass(
                  e.oldTab.closest("li"),
                  "ui-tabs-active",
                  "ui-state-active"
                ),
                  s();
              })
            : (this._removeClass(
                e.oldTab.closest("li"),
                "ui-tabs-active",
                "ui-state-active"
              ),
              a.hide(),
              s()),
          a.attr("aria-hidden", "true"),
          e.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }),
          o.length && a.length
            ? e.oldTab.attr("tabIndex", -1)
            : o.length &&
              this.tabs
                .filter(function () {
                  return 0 === S(this).attr("tabIndex");
                })
                .attr("tabIndex", -1),
          o.attr("aria-hidden", "false"),
          e.newTab.attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _activate: function (t) {
        var e,
          i = this._findActive(t);
        i[0] !== this.active[0] &&
          (i.length || (i = this.active),
          (e = i.find(".ui-tabs-anchor")[0]),
          this._eventHandler({
            target: e,
            currentTarget: e,
            preventDefault: S.noop,
          }));
      },
      _findActive: function (t) {
        return !1 === t ? S() : this.tabs.eq(t);
      },
      _getIndex: function (t) {
        return (
          "string" == typeof t &&
            (t = this.anchors.index(
              this.anchors.filter("[href$='" + S.ui.escapeSelector(t) + "']")
            )),
          t
        );
      },
      _destroy: function () {
        this.xhr && this.xhr.abort(),
          this.tablist.removeAttr("role").off(this.eventNamespace),
          this.anchors.removeAttr("role tabIndex").removeUniqueId(),
          this.tabs.add(this.panels).each(function () {
            S.data(this, "ui-tabs-destroy")
              ? S(this).remove()
              : S(this).removeAttr(
                  "role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded"
                );
          }),
          this.tabs.each(function () {
            var t = S(this),
              e = t.data("ui-tabs-aria-controls");
            e
              ? t.attr("aria-controls", e).removeData("ui-tabs-aria-controls")
              : t.removeAttr("aria-controls");
          }),
          this.panels.show(),
          "content" !== this.options.heightStyle &&
            this.panels.css("height", "");
      },
      enable: function (i) {
        var t = this.options.disabled;
        !1 !== t &&
          (void 0 === i
            ? (t = !1)
            : ((i = this._getIndex(i)),
              (t = S.isArray(t)
                ? S.map(t, function (t) {
                    return t !== i ? t : null;
                  })
                : S.map(this.tabs, function (t, e) {
                    return e !== i ? e : null;
                  }))),
          this._setOptionDisabled(t));
      },
      disable: function (t) {
        var e = this.options.disabled;
        if (!0 !== e) {
          if (void 0 === t) e = !0;
          else {
            if (((t = this._getIndex(t)), -1 !== S.inArray(t, e))) return;
            e = S.isArray(e) ? S.merge([t], e).sort() : [t];
          }
          this._setOptionDisabled(e);
        }
      },
      load: function (t, s) {
        t = this._getIndex(t);
        var n = this,
          i = this.tabs.eq(t),
          e = i.find(".ui-tabs-anchor"),
          o = this._getPanelForTab(i),
          a = { tab: i, panel: o },
          r = function (t, e) {
            "abort" === e && n.panels.stop(!1, !0),
              n._removeClass(i, "ui-tabs-loading"),
              o.removeAttr("aria-busy"),
              t === n.xhr && delete n.xhr;
          };
        this._isLocal(e[0]) ||
          ((this.xhr = S.ajax(this._ajaxSettings(e, s, a))),
          this.xhr &&
            "canceled" !== this.xhr.statusText &&
            (this._addClass(i, "ui-tabs-loading"),
            o.attr("aria-busy", "true"),
            this.xhr
              .done(function (t, e, i) {
                setTimeout(function () {
                  o.html(t), n._trigger("load", s, a), r(i, e);
                }, 1);
              })
              .fail(function (t, e) {
                setTimeout(function () {
                  r(t, e);
                }, 1);
              })));
      },
      _ajaxSettings: function (t, i, s) {
        var n = this;
        return {
          url: t.attr("href").replace(/#.*$/, ""),
          beforeSend: function (t, e) {
            return n._trigger(
              "beforeLoad",
              i,
              S.extend({ jqXHR: t, ajaxSettings: e }, s)
            );
          },
        };
      },
      _getPanelForTab: function (t) {
        var e = S(t).attr("aria-controls");
        return this.element.find(this._sanitizeSelector("#" + e));
      },
    }),
    !1 !== S.uiBackCompat &&
      S.widget("ui.tabs", S.ui.tabs, {
        _processTabs: function () {
          this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
        },
      }),
    S.ui.tabs,
    S.widget("ui.tooltip", {
      version: "1.12.1",
      options: {
        classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" },
        content: function () {
          var t = S(this).attr("title") || "";
          return S("<a>").text(t).html();
        },
        hide: !0,
        items: "[title]:not([disabled])",
        position: {
          my: "left top+15",
          at: "left bottom",
          collision: "flipfit flip",
        },
        show: !0,
        track: !1,
        close: null,
        open: null,
      },
      _addDescribedBy: function (t, e) {
        var i = (t.attr("aria-describedby") || "").split(/\s+/);
        i.push(e),
          t
            .data("ui-tooltip-id", e)
            .attr("aria-describedby", S.trim(i.join(" ")));
      },
      _removeDescribedBy: function (t) {
        var e = t.data("ui-tooltip-id"),
          i = (t.attr("aria-describedby") || "").split(/\s+/),
          s = S.inArray(e, i);
        -1 !== s && i.splice(s, 1),
          t.removeData("ui-tooltip-id"),
          (i = S.trim(i.join(" ")))
            ? t.attr("aria-describedby", i)
            : t.removeAttr("aria-describedby");
      },
      _create: function () {
        this._on({ mouseover: "open", focusin: "open" }),
          (this.tooltips = {}),
          (this.parents = {}),
          (this.liveRegion = S("<div>")
            .attr({
              role: "log",
              "aria-live": "assertive",
              "aria-relevant": "additions",
            })
            .appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          (this.disabledTitles = S([]));
      },
      _setOption: function (t, e) {
        var i = this;
        this._super(t, e),
          "content" === t &&
            S.each(this.tooltips, function (t, e) {
              i._updateContent(e.element);
            });
      },
      _setOptionDisabled: function (t) {
        this[t ? "_disable" : "_enable"]();
      },
      _disable: function () {
        var s = this;
        S.each(this.tooltips, function (t, e) {
          var i = S.Event("blur");
          (i.target = i.currentTarget = e.element[0]), s.close(i, !0);
        }),
          (this.disabledTitles = this.disabledTitles.add(
            this.element
              .find(this.options.items)
              .addBack()
              .filter(function () {
                var t = S(this);
                return t.is("[title]")
                  ? t
                      .data("ui-tooltip-title", t.attr("title"))
                      .removeAttr("title")
                  : void 0;
              })
          ));
      },
      _enable: function () {
        this.disabledTitles.each(function () {
          var t = S(this);
          t.data("ui-tooltip-title") &&
            t.attr("title", t.data("ui-tooltip-title"));
        }),
          (this.disabledTitles = S([]));
      },
      open: function (t) {
        var i = this,
          e = S(t ? t.target : this.element).closest(this.options.items);
        e.length &&
          !e.data("ui-tooltip-id") &&
          (e.attr("title") && e.data("ui-tooltip-title", e.attr("title")),
          e.data("ui-tooltip-open", !0),
          t &&
            "mouseover" === t.type &&
            e.parents().each(function () {
              var t,
                e = S(this);
              e.data("ui-tooltip-open") &&
                (((t = S.Event("blur")).target = t.currentTarget = this),
                i.close(t, !0)),
                e.attr("title") &&
                  (e.uniqueId(),
                  (i.parents[this.id] = {
                    element: this,
                    title: e.attr("title"),
                  }),
                  e.attr("title", ""));
            }),
          this._registerCloseHandlers(t, e),
          this._updateContent(e, t));
      },
      _updateContent: function (e, i) {
        var t,
          s = this.options.content,
          n = this,
          o = i ? i.type : null;
        return "string" == typeof s || s.nodeType || s.jquery
          ? this._open(i, e, s)
          : void (
              (t = s.call(e[0], function (t) {
                n._delay(function () {
                  e.data("ui-tooltip-open") &&
                    (i && (i.type = o), this._open(i, e, t));
                });
              })) && this._open(i, e, t)
            );
      },
      _open: function (t, e, i) {
        function s(t) {
          (l.of = t), o.is(":hidden") || o.position(l);
        }
        var n,
          o,
          a,
          r,
          l = S.extend({}, this.options.position);
        if (i) {
          if ((n = this._find(e)))
            return void n.tooltip.find(".ui-tooltip-content").html(i);
          e.is("[title]") &&
            (t && "mouseover" === t.type
              ? e.attr("title", "")
              : e.removeAttr("title")),
            (n = this._tooltip(e)),
            (o = n.tooltip),
            this._addDescribedBy(e, o.attr("id")),
            o.find(".ui-tooltip-content").html(i),
            this.liveRegion.children().hide(),
            (r = S("<div>").html(o.find(".ui-tooltip-content").html()))
              .removeAttr("name")
              .find("[name]")
              .removeAttr("name"),
            r.removeAttr("id").find("[id]").removeAttr("id"),
            r.appendTo(this.liveRegion),
            this.options.track && t && /^mouse/.test(t.type)
              ? (this._on(this.document, { mousemove: s }), s(t))
              : o.position(S.extend({ of: e }, this.options.position)),
            o.hide(),
            this._show(o, this.options.show),
            this.options.track &&
              this.options.show &&
              this.options.show.delay &&
              (a = this.delayedShow =
                setInterval(function () {
                  o.is(":visible") && (s(l.of), clearInterval(a));
                }, S.fx.interval)),
            this._trigger("open", t, { tooltip: o });
        }
      },
      _registerCloseHandlers: function (t, i) {
        var e = {
          keyup: function (t) {
            if (t.keyCode === S.ui.keyCode.ESCAPE) {
              var e = S.Event(t);
              (e.currentTarget = i[0]), this.close(e, !0);
            }
          },
        };
        i[0] !== this.element[0] &&
          (e.remove = function () {
            this._removeTooltip(this._find(i).tooltip);
          }),
          (t && "mouseover" !== t.type) || (e.mouseleave = "close"),
          (t && "focusin" !== t.type) || (e.focusout = "close"),
          this._on(!0, i, e);
      },
      close: function (t) {
        var e,
          i = this,
          s = S(t ? t.currentTarget : this.element),
          n = this._find(s);
        return n
          ? ((e = n.tooltip),
            void (
              n.closing ||
              (clearInterval(this.delayedShow),
              s.data("ui-tooltip-title") &&
                !s.attr("title") &&
                s.attr("title", s.data("ui-tooltip-title")),
              this._removeDescribedBy(s),
              (n.hiding = !0),
              e.stop(!0),
              this._hide(e, this.options.hide, function () {
                i._removeTooltip(S(this));
              }),
              s.removeData("ui-tooltip-open"),
              this._off(s, "mouseleave focusout keyup"),
              s[0] !== this.element[0] && this._off(s, "remove"),
              this._off(this.document, "mousemove"),
              t &&
                "mouseleave" === t.type &&
                S.each(this.parents, function (t, e) {
                  S(e.element).attr("title", e.title), delete i.parents[t];
                }),
              (n.closing = !0),
              this._trigger("close", t, { tooltip: e }),
              n.hiding || (n.closing = !1))
            ))
          : void s.removeData("ui-tooltip-open");
      },
      _tooltip: function (t) {
        var e = S("<div>").attr("role", "tooltip"),
          i = S("<div>").appendTo(e),
          s = e.uniqueId().attr("id");
        return (
          this._addClass(i, "ui-tooltip-content"),
          this._addClass(e, "ui-tooltip", "ui-widget ui-widget-content"),
          e.appendTo(this._appendTo(t)),
          (this.tooltips[s] = { element: t, tooltip: e })
        );
      },
      _find: function (t) {
        var e = t.data("ui-tooltip-id");
        return e ? this.tooltips[e] : null;
      },
      _removeTooltip: function (t) {
        t.remove(), delete this.tooltips[t.attr("id")];
      },
      _appendTo: function (t) {
        var e = t.closest(".ui-front, dialog");
        return e.length || (e = this.document[0].body), e;
      },
      _destroy: function () {
        var n = this;
        S.each(this.tooltips, function (t, e) {
          var i = S.Event("blur"),
            s = e.element;
          (i.target = i.currentTarget = s[0]),
            n.close(i, !0),
            S("#" + t).remove(),
            s.data("ui-tooltip-title") &&
              (s.attr("title") || s.attr("title", s.data("ui-tooltip-title")),
              s.removeData("ui-tooltip-title"));
        }),
          this.liveRegion.remove();
      },
    }),
    !1 !== S.uiBackCompat &&
      S.widget("ui.tooltip", S.ui.tooltip, {
        options: { tooltipClass: null },
        _tooltip: function () {
          var t = this._superApply(arguments);
          return (
            this.options.tooltipClass &&
              t.tooltip.addClass(this.options.tooltipClass),
            t
          );
        },
      }),
    S.ui.tooltip;
}),
  (function (t, x, k) {
    "use strict";
    x.module("ui.sortable", [])
      .value("uiSortableConfig", {
        items: "> [ng-repeat],> [data-ng-repeat],> [x-ng-repeat]",
      })
      .directive("uiSortable", [
        "uiSortableConfig",
        "$timeout",
        "$log",
        function (b, y, w) {
          return {
            require: "?ngModel",
            scope: {
              ngModel: "=",
              uiSortable: "=",
              create: "&uiSortableCreate",
              start: "&uiSortableStart",
              activate: "&uiSortableActivate",
              beforeStop: "&uiSortableBeforeStop",
              update: "&uiSortableUpdate",
              remove: "&uiSortableRemove",
              receive: "&uiSortableReceive",
              deactivate: "&uiSortableDeactivate",
              stop: "&uiSortableStop",
            },
            link: function (c, u, t, a) {
              function s(t, e) {
                var i = "function" == typeof e;
                return "function" == typeof t && i
                  ? function () {
                      t.apply(this, arguments), e.apply(this, arguments);
                    }
                  : i
                  ? e
                  : t;
              }
              function o(t) {
                var e = t.data("ui-sortable");
                return e &&
                  "object" == typeof e &&
                  "ui-sortable" === e.widgetFullName
                  ? e
                  : null;
              }
              function r(t, e) {
                return (
                  v[t]
                    ? ("stop" === t &&
                        (e = s(
                          (e = s(e, function () {
                            c.$apply();
                          })),
                          i
                        )),
                      (e = s(v[t], e)))
                    : _[t] && (e = _[t](e)),
                  e ||
                    ("items" !== t && "ui-model-items" !== t) ||
                    (e = b.items),
                  e
                );
              }
              function n(s, t, n) {
                x.forEach(v, function (t, e) {
                  e in g || (g[e] = null);
                });
                var o,
                  a = null;
                t &&
                  x.forEach(t, function (t, e) {
                    if (!(s && e in s)) {
                      if (e in m)
                        return void (g[e] =
                          "ui-floating" === e ? "auto" : r(e, k));
                      o || (o = x.element.ui.sortable().options);
                      var i = o[e];
                      (i = r(e, i)), a || (a = {}), (a[e] = i), (g[e] = i);
                    }
                  });
                return (
                  (s = x.extend({}, s)),
                  x.forEach(s, function (t, e) {
                    if (e in m) {
                      if (
                        ("ui-floating" !== e ||
                          (!1 !== t && !0 !== t) ||
                          !n ||
                          (n.floating = t),
                        "ui-preserve-size" === e && (!1 === t || !0 === t))
                      ) {
                        var i = g.helper;
                        s.helper = function (t, e) {
                          return (
                            !0 === g["ui-preserve-size"] &&
                              e.children().each(function () {
                                var t = x.element(this);
                                t.width(t.width());
                              }),
                            (
                              i ||
                              function (t, e) {
                                return e;
                              }
                            ).apply(this, arguments)
                          );
                        };
                      }
                      g[e] = r(e, t);
                    }
                  }),
                  x.forEach(s, function (t, e) {
                    e in m ||
                      ((t = r(e, t)), a || (a = {}), (a[e] = t), (g[e] = t));
                  }),
                  a
                );
              }
              function l(t, e) {
                var i,
                  s,
                  n = null;
                return (
                  (i = e),
                  ("clone" === (s = t.sortable("option", "helper")) ||
                    ("function" == typeof s &&
                      i.item.sortable.isCustomHelperUsed())) &&
                    "parent" === t.sortable("option", "appendTo") &&
                    (n = f),
                  n
                );
              }
              function i(t, e) {
                e.item.sortable._destroy();
              }
              function h(t) {
                return t.parent().find(g["ui-model-items"]).index(t);
              }
              function e() {
                c.$watchCollection("ngModel", function () {
                  y(
                    function () {
                      o(u) && u.sortable("refresh");
                    },
                    0,
                    !1
                  );
                }),
                  (v.start = function (t, i) {
                    if ("auto" === g["ui-floating"]) {
                      var e = i.item.siblings();
                      o(x.element(t.target)).floating =
                        /left|right/.test((s = e).css("float")) ||
                        /inline|table-cell/.test(s.css("display"));
                    }
                    var s,
                      n = h(i.item);
                    i.item.sortable = {
                      model: a.$modelValue[n],
                      index: n,
                      source: u,
                      sourceList: i.item.parent(),
                      sourceModel: a.$modelValue,
                      cancel: function () {
                        i.item.sortable._isCanceled = !0;
                      },
                      isCanceled: function () {
                        return i.item.sortable._isCanceled;
                      },
                      isCustomHelperUsed: function () {
                        return !!i.item.sortable._isCustomHelperUsed;
                      },
                      _isCanceled: !1,
                      _isCustomHelperUsed: i.item.sortable._isCustomHelperUsed,
                      _destroy: function () {
                        x.forEach(i.item.sortable, function (t, e) {
                          i.item.sortable[e] = k;
                        });
                      },
                      _connectedSortables: [],
                      _getElementContext: function (t) {
                        return (function (t, e) {
                          for (var i = 0; i < t.length; i++) {
                            var s = t[i];
                            if (s.element[0] === e[0]) return s;
                          }
                        })(this._connectedSortables, t);
                      },
                    };
                  }),
                  (v.activate = function (t, e) {
                    var i = e.item.sortable.source === u,
                      s = i ? e.item.sortable.sourceList : u,
                      n = {
                        element: u,
                        scope: c,
                        isSourceContext: i,
                        savedNodesOrigin: s,
                      };
                    e.item.sortable._connectedSortables.push(n),
                      (p = s.contents()),
                      (f = e.helper);
                    var o,
                      a,
                      r,
                      l = (function (t) {
                        var e = t.sortable("option", "placeholder");
                        if (e && e.element && "function" == typeof e.element) {
                          var i = e.element();
                          return x.element(i);
                        }
                        return null;
                      })(u);
                    if (l && l.length) {
                      var h =
                        ((o = u),
                        (a = l),
                        (r = g["ui-model-items"].replace(/[^,]*>/g, "")),
                        o.find(
                          '[class="' + a.attr("class") + '"]:not(' + r + ")"
                        ));
                      p = p.not(h);
                    }
                  }),
                  (v.update = function (t, e) {
                    if (!e.item.sortable.received) {
                      e.item.sortable.dropindex = h(e.item);
                      var i = e.item
                        .parent()
                        .closest(
                          "[ui-sortable], [data-ui-sortable], [x-ui-sortable]"
                        );
                      (e.item.sortable.droptarget = i),
                        (e.item.sortable.droptargetList = e.item.parent());
                      var s = e.item.sortable._getElementContext(i);
                      (e.item.sortable.droptargetModel = s.scope.ngModel),
                        u.sortable("cancel");
                    }
                    var n = !e.item.sortable.received && l(u, e);
                    n && n.length && (p = p.not(n));
                    var o = e.item.sortable._getElementContext(u);
                    p.appendTo(o.savedNodesOrigin),
                      e.item.sortable.received && (p = null),
                      e.item.sortable.received &&
                        !e.item.sortable.isCanceled() &&
                        (c.$apply(function () {
                          a.$modelValue.splice(
                            e.item.sortable.dropindex,
                            0,
                            e.item.sortable.moved
                          );
                        }),
                        c.$emit("ui-sortable:moved", e));
                  }),
                  (v.stop = function (t, e) {
                    var i =
                      "dropindex" in e.item.sortable &&
                      !e.item.sortable.isCanceled();
                    if (i && !e.item.sortable.received)
                      c.$apply(function () {
                        a.$modelValue.splice(
                          e.item.sortable.dropindex,
                          0,
                          a.$modelValue.splice(e.item.sortable.index, 1)[0]
                        );
                      }),
                        c.$emit("ui-sortable:moved", e);
                    else if (
                      !i &&
                      !x.equals(u.contents().toArray(), p.toArray())
                    ) {
                      var s = l(u, e);
                      s && s.length && (p = p.not(s));
                      var n = e.item.sortable._getElementContext(u);
                      p.appendTo(n.savedNodesOrigin);
                    }
                    f = p = null;
                  }),
                  (v.receive = function (t, e) {
                    e.item.sortable.received = !0;
                  }),
                  (v.remove = function (t, e) {
                    "dropindex" in e.item.sortable ||
                      (u.sortable("cancel"), e.item.sortable.cancel()),
                      e.item.sortable.isCanceled() ||
                        c.$apply(function () {
                          e.item.sortable.moved = a.$modelValue.splice(
                            e.item.sortable.index,
                            1
                          )[0];
                        });
                  }),
                  x.forEach(v, function (t, i) {
                    v[i] = s(v[i], function () {
                      var t,
                        e = c[i];
                      "function" == typeof e &&
                        (
                          "uiSortable" +
                          i.substring(0, 1).toUpperCase() +
                          i.substring(1)
                        ).length &&
                        "function" == typeof (t = e()) &&
                        t.apply(this, arguments);
                    });
                  }),
                  (_.helper = function (o) {
                    return o && "function" == typeof o
                      ? function (t, i) {
                          var e = i.sortable,
                            s = h(i);
                          i.sortable = {
                            model: a.$modelValue[s],
                            index: s,
                            source: u,
                            sourceList: i.parent(),
                            sourceModel: a.$modelValue,
                            _restore: function () {
                              x.forEach(i.sortable, function (t, e) {
                                i.sortable[e] = k;
                              }),
                                (i.sortable = e);
                            },
                          };
                          var n = o.apply(this, arguments);
                          return (
                            i.sortable._restore(),
                            (i.sortable._isCustomHelperUsed = i !== n),
                            n
                          );
                        }
                      : o;
                  }),
                  c.$watchCollection(
                    "uiSortable",
                    function (t, e) {
                      var i = o(u);
                      if (i) {
                        var s = n(t, e, i);
                        s && u.sortable("option", s);
                      }
                    },
                    !0
                  ),
                  n(g);
              }
              function d() {
                return (
                  (!c.uiSortable || !c.uiSortable.disabled) &&
                  (a ? e() : w.info("ui.sortable: ngModel not provided!", u),
                  u.sortable(g),
                  d.cancelWatcher(),
                  (d.cancelWatcher = x.noop),
                  !0)
                );
              }
              var p,
                f,
                g = {},
                m = {
                  "ui-floating": k,
                  "ui-model-items": b.items,
                  "ui-preserve-size": k,
                },
                v = {
                  create: null,
                  start: null,
                  activate: null,
                  beforeStop: null,
                  update: null,
                  remove: null,
                  receive: null,
                  deactivate: null,
                  stop: null,
                },
                _ = { helper: null };
              return (
                x.extend(g, m, b, c.uiSortable),
                x.element.fn && x.element.fn.jquery
                  ? ((d.cancelWatcher = x.noop),
                    void (
                      d() ||
                      (d.cancelWatcher = c.$watch("uiSortable.disabled", d))
                    ))
                  : void w.error(
                      "ui.sortable: jQuery should be included before AngularJS!"
                    )
              );
            },
          };
        },
      ]);
  })(window, window.angular),
  (function (w, b, x, y) {
    "use strict";
    function k(t, e) {
      t || ((e = e ? ": " + e : ""), w.error("Fancytree assertion failed" + e));
    }
    function e(t, e) {
      var i,
        s,
        n = b.console ? b.console[t] : null;
      if (n)
        try {
          n.apply(b.console, e);
        } catch (t) {
          for (s = "", i = 0; i < e.length; i++) s += e[i];
          n(s);
        }
    }
    function o(t, s, e, i, n) {
      var o, a, r, l, h;
      return (
        (o = s[t]),
        (a = i[t]),
        (r = s.ext[n]),
        (l = function () {
          return o.apply(s, arguments);
        }),
        (h = function (t) {
          return o.apply(s, t);
        }),
        function () {
          var t = s._local,
            e = s._super,
            i = s._superApply;
          try {
            return (
              (s._local = r),
              (s._super = l),
              (s._superApply = h),
              a.apply(s, arguments)
            );
          } finally {
            (s._local = t), (s._super = e), (s._superApply = i);
          }
        }
      );
    }
    function a(t, e, i, s) {
      for (var n in i)
        "function" == typeof i[n]
          ? "function" == typeof t[n]
            ? (t[n] = o(n, t, 0, i, s))
            : "_" === n.charAt(0)
            ? (t.ext[s][n] = o(n, t, 0, i, s))
            : w.error(
                "Could not override tree." +
                  n +
                  ". Use prefix '_' to create tree." +
                  s +
                  "._" +
                  n
              )
          : "options" !== n && (t.ext[s][n] = i[n]);
    }
    function C(t, e) {
      return t === y
        ? w
            .Deferred(function () {
              this.resolve();
            })
            .promise()
        : w
            .Deferred(function () {
              this.resolveWith(t, e);
            })
            .promise();
    }
    function f(t, e) {
      return t === y
        ? w
            .Deferred(function () {
              this.reject();
            })
            .promise()
        : w
            .Deferred(function () {
              this.rejectWith(t, e);
            })
            .promise();
    }
    function g(t, e) {
      return function () {
        t.resolveWith(e);
      };
    }
    function m(t) {
      var e = w.extend({}, t.data()),
        i = e.json;
      return (
        delete e.fancytree,
        delete e.uiFancytree,
        i && (delete e.json, (e = w.extend(e, i))),
        e
      );
    }
    function d(t) {
      return ("" + t).replace(s, function (t) {
        return D[t];
      });
    }
    function t(e) {
      return (
        (e = e.toLowerCase()),
        function (t) {
          return 0 <= t.title.toLowerCase().indexOf(e);
        }
      );
    }
    function h(t, e) {
      var i, s, n, o;
      for (
        this.parent = t,
          this.tree = t.tree,
          this.ul = null,
          this.li = null,
          this.statusNodeType = null,
          this._isLoading = !1,
          this._error = null,
          this.data = {},
          i = 0,
          s = N.length;
        i < s;
        i++
      )
        this[(n = N[i])] = e[n];
      for (n in (e.data && w.extend(this.data, e.data), e))
        P[n] || w.isFunction(e[n]) || E[n] || (this.data[n] = e[n]);
      null == this.key
        ? this.tree.options.defaultKey
          ? ((this.key = this.tree.options.defaultKey(this)),
            k(this.key, "defaultKey() must return a unique key"))
          : (this.key = "_" + v._nextNodeKey++)
        : (this.key = "" + this.key),
        e.active &&
          (k(null === this.tree.activeNode, "only one active node allowed"),
          (this.tree.activeNode = this)),
        e.selected && (this.tree.lastSelectedNode = this),
        (o = e.children)
          ? o.length
            ? this._setChildren(o)
            : (this.children = this.lazy ? [] : null)
          : (this.children = null),
        this.tree._callHook("treeRegisterNode", this.tree, !0, this);
    }
    function r(t) {
      (this.widget = t),
        (this.$div = t.element),
        (this.options = t.options),
        this.options &&
          (w.isFunction(this.options.lazyload) &&
            !w.isFunction(this.options.lazyLoad) &&
            (this.options.lazyLoad = function () {
              return (
                v.warn(
                  "The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead."
                ),
                t.options.lazyload.apply(this, arguments)
              );
            }),
          w.isFunction(this.options.loaderror) &&
            w.error(
              "The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead."
            ),
          this.options.fx !== y &&
            v.warn(
              "The 'fx' option was replaced by 'toggleEffect' since 2014-11-30."
            ),
          this.options.removeNode !== y &&
            w.error(
              "The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10)."
            )),
        (this.ext = {}),
        (this.data = m(this.$div)),
        (this._id = w.ui.fancytree._nextId++),
        (this._ns = ".fancytree-" + this._id),
        (this.activeNode = null),
        (this.focusNode = null),
        (this._hasFocus = null),
        (this._enableUpdate = !0),
        (this.lastSelectedNode = null),
        (this.systemFocusElement = null),
        (this.lastQuicksearchTerm = ""),
        (this.lastQuicksearchTime = 0),
        (this.statusClassPropName = "span"),
        (this.ariaPropName = "li"),
        (this.nodeContainerAttrName = "li"),
        this.$div.find(">ul.fancytree-container").remove();
      var e,
        i = { tree: this };
      (this.rootNode = new h(i, {
        title: "root",
        key: "root_" + this._id,
        children: null,
        expanded: !0,
      })),
        (this.rootNode.parent = null),
        (e = w("<ul>", {
          class: "ui-fancytree fancytree-container fancytree-plain",
        }).appendTo(this.$div)),
        (this.$container = e),
        (this.rootNode.ul = e[0]),
        null == this.options.debugLevel &&
          (this.options.debugLevel = v.debugLevel);
    }
    if (w.ui && w.ui.fancytree)
      w.ui.fancytree.warn("Fancytree: ignored duplicate include");
    else {
      var l,
        i,
        v = null,
        p = new RegExp(/\.|\//),
        s = /[&<>"'\/]/g,
        _ = /[<>"'\/]/g,
        c = "$recursive_request",
        D = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#39;",
          "/": "&#x2F;",
        },
        n = { 16: !0, 17: !0, 18: !0 },
        S = {
          8: "backspace",
          9: "tab",
          10: "return",
          13: "return",
          19: "pause",
          20: "capslock",
          27: "esc",
          32: "space",
          33: "pageup",
          34: "pagedown",
          35: "end",
          36: "home",
          37: "left",
          38: "up",
          39: "right",
          40: "down",
          45: "insert",
          46: "del",
          59: ";",
          61: "=",
          96: "0",
          97: "1",
          98: "2",
          99: "3",
          100: "4",
          101: "5",
          102: "6",
          103: "7",
          104: "8",
          105: "9",
          106: "*",
          107: "+",
          109: "-",
          110: ".",
          111: "/",
          112: "f1",
          113: "f2",
          114: "f3",
          115: "f4",
          116: "f5",
          117: "f6",
          118: "f7",
          119: "f8",
          120: "f9",
          121: "f10",
          122: "f11",
          123: "f12",
          144: "numlock",
          145: "scroll",
          173: "-",
          186: ";",
          187: "=",
          188: ",",
          189: "-",
          190: ".",
          191: "/",
          192: "`",
          219: "[",
          220: "\\",
          221: "]",
          222: "'",
        },
        u = { 0: "", 1: "left", 2: "middle", 3: "right" },
        T =
          "active expanded focus folder hideCheckbox lazy selected unselectable".split(
            " "
          ),
        I = {},
        N =
          "expanded extraClasses folder hideCheckbox icon key lazy refKey selected statusNodeType title tooltip unselectable".split(
            " "
          ),
        P = {},
        M = {},
        E = { active: !0, children: !0, data: !0, focus: !0 };
      for (l = 0; l < T.length; l++) I[T[l]] = !0;
      for (l = 0; l < N.length; l++)
        (i = N[l]),
          (P[i] = !0),
          i !== i.toLowerCase() && (M[i.toLowerCase()] = i);
      k(w.ui, "Fancytree requires jQuery UI (http://jqueryui.com)"),
        (h.prototype = {
          _findDirectChild: function (t) {
            var e,
              i,
              s = this.children;
            if (s)
              if ("string" == typeof t) {
                for (e = 0, i = s.length; e < i; e++)
                  if (s[e].key === t) return s[e];
              } else {
                if ("number" == typeof t) return this.children[t];
                if (t.parent === this) return t;
              }
            return null;
          },
          _setChildren: function (t) {
            k(
              t && (!this.children || 0 === this.children.length),
              "only init supported"
            ),
              (this.children = []);
            for (var e = 0, i = t.length; e < i; e++)
              this.children.push(new h(this, t[e]));
          },
          addChildren: function (t, e) {
            var i,
              s,
              n,
              o,
              a = this.getFirstChild(),
              r = this.getLastChild(),
              l = [];
            for (
              w.isPlainObject(t) && (t = [t]),
                this.children || (this.children = []),
                i = 0,
                s = t.length;
              i < s;
              i++
            )
              l.push(new h(this, t[i]));
            if (
              ((o = l[0]),
              null == e
                ? (this.children = this.children.concat(l))
                : ((e = this._findDirectChild(e)),
                  k(
                    0 <= (n = w.inArray(e, this.children)),
                    "insertBefore must be an existing child"
                  ),
                  this.children.splice.apply(this.children, [n, 0].concat(l))),
              a && !e)
            ) {
              for (i = 0, s = l.length; i < s; i++) l[i].render();
              a !== this.getFirstChild() && a.renderStatus(),
                r !== this.getLastChild() && r.renderStatus();
            } else (!this.parent || this.parent.ul || this.tr) && this.render();
            return (
              3 === this.tree.options.selectMode &&
                this.fixSelection3FromEndNodes(),
              this.triggerModifyChild("add", 1 === l.length ? l[0] : null),
              o
            );
          },
          addClass: function (t) {
            return this.toggleClass(t, !0);
          },
          addNode: function (t, e) {
            switch (((e !== y && "over" !== e) || (e = "child"), e)) {
              case "after":
                return this.getParent().addChildren(t, this.getNextSibling());
              case "before":
                return this.getParent().addChildren(t, this);
              case "firstChild":
                var i = this.children ? this.children[0] : null;
                return this.addChildren(t, i);
              case "child":
              case "over":
                return this.addChildren(t);
            }
            k(!1, "Invalid mode: " + e);
          },
          addPagingNode: function (t, e) {
            var i, s;
            if (((e = e || "child"), !1 !== t))
              return (
                (t = w.extend(
                  {
                    title: this.tree.options.strings.moreData,
                    statusNodeType: "paging",
                    icon: !1,
                  },
                  t
                )),
                (this.partload = !0),
                this.addNode(t, e)
              );
            for (i = this.children.length - 1; 0 <= i; i--)
              "paging" === (s = this.children[i]).statusNodeType &&
                this.removeChild(s);
            this.partload = !1;
          },
          appendSibling: function (t) {
            return this.addNode(t, "after");
          },
          applyPatch: function (t) {
            if (null === t) return this.remove(), C(this);
            var e,
              i,
              s = { children: !0, expanded: !0, parent: !0 };
            for (e in t)
              (i = t[e]),
                s[e] ||
                  w.isFunction(i) ||
                  (P[e] ? (this[e] = i) : (this.data[e] = i));
            return (
              t.hasOwnProperty("children") &&
                (this.removeChildren(),
                t.children && this._setChildren(t.children)),
              this.isVisible() && (this.renderTitle(), this.renderStatus()),
              t.hasOwnProperty("expanded")
                ? this.setExpanded(t.expanded)
                : C(this)
            );
          },
          collapseSiblings: function () {
            return this.tree._callHook("nodeCollapseSiblings", this);
          },
          copyTo: function (t, e, i) {
            return t.addNode(this.toDict(!0, i), e);
          },
          countChildren: function (t) {
            var e,
              i,
              s,
              n = this.children;
            if (!n) return 0;
            if (((s = n.length), !1 !== t))
              for (e = 0, i = s; e < i; e++) s += n[e].countChildren();
            return s;
          },
          debug: function (t) {
            2 <= this.tree.options.debugLevel &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("log", arguments));
          },
          discard: function () {
            return (
              this.warn(
                "FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead."
              ),
              this.resetLazy()
            );
          },
          discardMarkup: function (t) {
            var e = t ? "nodeRemoveMarkup" : "nodeRemoveChildMarkup";
            this.tree._callHook(e, this);
          },
          findAll: function (e) {
            e = w.isFunction(e) ? e : t(e);
            var i = [];
            return (
              this.visit(function (t) {
                e(t) && i.push(t);
              }),
              i
            );
          },
          findFirst: function (e) {
            e = w.isFunction(e) ? e : t(e);
            var i = null;
            return (
              this.visit(function (t) {
                if (e(t)) return (i = t), !1;
              }),
              i
            );
          },
          _changeSelectStatusAttrs: function (t) {
            var e = !1;
            switch (t) {
              case !1:
                (e = this.selected || this.partsel),
                  (this.selected = !1),
                  (this.partsel = !1);
                break;
              case !0:
                (e = !this.selected || !this.partsel),
                  (this.selected = !0),
                  (this.partsel = !0);
                break;
              case y:
                (e = this.selected || !this.partsel),
                  (this.selected = !1),
                  (this.partsel = !0);
                break;
              default:
                k(!1, "invalid state: " + t);
            }
            return e && this.renderStatus(), e;
          },
          fixSelection3AfterClick: function () {
            var e = this.isSelected();
            this.visit(function (t) {
              t._changeSelectStatusAttrs(e);
            }),
              this.fixSelection3FromEndNodes();
          },
          fixSelection3FromEndNodes: function () {
            k(3 === this.tree.options.selectMode, "expected selectMode 3"),
              (function t(e) {
                var i,
                  s,
                  n,
                  o,
                  a,
                  r,
                  l = e.children;
                if (l && l.length) {
                  for (r = !(a = !0), i = 0, s = l.length; i < s; i++)
                    !1 !== (n = t(l[i])) && (r = !0), !0 !== n && (a = !1);
                  o = !!a || (!!r && y);
                } else o = !!e.selected;
                return e._changeSelectStatusAttrs(o), o;
              })(this),
              this.visitParents(function (t) {
                var e,
                  i,
                  s,
                  n,
                  o = t.children,
                  a = !0,
                  r = !1;
                for (e = 0, i = o.length; e < i; e++)
                  ((s = o[e]).selected || s.partsel) && (r = !0),
                    s.unselectable || s.selected || (a = !1);
                (n = !!a || (!!r && y)), t._changeSelectStatusAttrs(n);
              });
          },
          fromDict: function (t) {
            for (var e in t)
              P[e]
                ? (this[e] = t[e])
                : "data" === e
                ? w.extend(this.data, t.data)
                : w.isFunction(t[e]) || E[e] || (this.data[e] = t[e]);
            t.children && (this.removeChildren(), this.addChildren(t.children)),
              this.renderTitle();
          },
          getChildren: function () {
            return this.hasChildren() === y ? y : this.children;
          },
          getFirstChild: function () {
            return this.children ? this.children[0] : null;
          },
          getIndex: function () {
            return w.inArray(this, this.parent.children);
          },
          getIndexHier: function (t, i) {
            t = t || ".";
            var s,
              n = [];
            return (
              w.each(this.getParentList(!1, !0), function (t, e) {
                (s = "" + (e.getIndex() + 1)),
                  i && (s = ("0000000" + s).substr(-i)),
                  n.push(s);
              }),
              n.join(t)
            );
          },
          getKeyPath: function (t) {
            var e = [],
              i = this.tree.options.keyPathSeparator;
            return (
              this.visitParents(function (t) {
                t.parent && e.unshift(t.key);
              }, !t),
              i + e.join(i)
            );
          },
          getLastChild: function () {
            return this.children
              ? this.children[this.children.length - 1]
              : null;
          },
          getLevel: function () {
            for (var t = 0, e = this.parent; e; ) t++, (e = e.parent);
            return t;
          },
          getNextSibling: function () {
            if (this.parent) {
              var t,
                e,
                i = this.parent.children;
              for (t = 0, e = i.length - 1; t < e; t++)
                if (i[t] === this) return i[t + 1];
            }
            return null;
          },
          getParent: function () {
            return this.parent;
          },
          getParentList: function (t, e) {
            for (var i = [], s = e ? this : this.parent; s; )
              (t || s.parent) && i.unshift(s), (s = s.parent);
            return i;
          },
          getPrevSibling: function () {
            if (this.parent) {
              var t,
                e,
                i = this.parent.children;
              for (t = 1, e = i.length; t < e; t++)
                if (i[t] === this) return i[t - 1];
            }
            return null;
          },
          getSelectedNodes: function (e) {
            var i = [];
            return (
              this.visit(function (t) {
                if (t.selected && (i.push(t), !0 === e)) return "skip";
              }),
              i
            );
          },
          hasChildren: function () {
            return this.lazy
              ? null == this.children
                ? y
                : 0 !== this.children.length &&
                  (1 !== this.children.length ||
                    !this.children[0].isStatusNode() ||
                    y)
              : !(!this.children || !this.children.length);
          },
          hasFocus: function () {
            return this.tree.hasFocus() && this.tree.focusNode === this;
          },
          info: function (t) {
            1 <= this.tree.options.debugLevel &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("info", arguments));
          },
          isActive: function () {
            return this.tree.activeNode === this;
          },
          isChildOf: function (t) {
            return this.parent && this.parent === t;
          },
          isDescendantOf: function (t) {
            if (!t || t.tree !== this.tree) return !1;
            for (var e = this.parent; e; ) {
              if (e === t) return !0;
              e = e.parent;
            }
            return !1;
          },
          isExpanded: function () {
            return !!this.expanded;
          },
          isFirstSibling: function () {
            var t = this.parent;
            return !t || t.children[0] === this;
          },
          isFolder: function () {
            return !!this.folder;
          },
          isLastSibling: function () {
            var t = this.parent;
            return !t || t.children[t.children.length - 1] === this;
          },
          isLazy: function () {
            return !!this.lazy;
          },
          isLoaded: function () {
            return !this.lazy || this.hasChildren() !== y;
          },
          isLoading: function () {
            return !!this._isLoading;
          },
          isRoot: function () {
            return this.isRootNode();
          },
          isPartload: function () {
            return !!this.partload;
          },
          isRootNode: function () {
            return this.tree.rootNode === this;
          },
          isSelected: function () {
            return !!this.selected;
          },
          isStatusNode: function () {
            return !!this.statusNodeType;
          },
          isPagingNode: function () {
            return "paging" === this.statusNodeType;
          },
          isTopLevel: function () {
            return this.tree.rootNode === this.parent;
          },
          isUndefined: function () {
            return this.hasChildren() === y;
          },
          isVisible: function () {
            var t,
              e,
              i = this.getParentList(!1, !1);
            for (t = 0, e = i.length; t < e; t++) if (!i[t].expanded) return !1;
            return !0;
          },
          lazyLoad: function (t) {
            return (
              this.warn(
                "FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead."
              ),
              this.load(t)
            );
          },
          load: function (t) {
            var e,
              i,
              s = this,
              n = this.isExpanded();
            return (
              k(this.isLazy(), "load() requires a lazy node"),
              t || this.isUndefined()
                ? (this.isLoaded() && this.resetLazy(),
                  !1 === (i = this.tree._triggerNodeEvent("lazyLoad", this))
                    ? C(this)
                    : (k(
                        "boolean" != typeof i,
                        "lazyLoad event must return source in data.result"
                      ),
                      (e = this.tree._callHook("nodeLoadChildren", this, i)),
                      n
                        ? ((this.expanded = !0),
                          e.always(function () {
                            s.render();
                          }))
                        : e.always(function () {
                            s.renderStatus();
                          }),
                      e))
                : C(this)
            );
          },
          makeVisible: function (t) {
            var e,
              i = this,
              s = [],
              n = new w.Deferred(),
              o = this.getParentList(!1, !1),
              a = o.length,
              r = !(t && !0 === t.noAnimation),
              l = !(t && !1 === t.scrollIntoView);
            for (e = a - 1; 0 <= e; e--) s.push(o[e].setExpanded(!0, t));
            return (
              w.when.apply(w, s).done(function () {
                l
                  ? i.scrollIntoView(r).done(function () {
                      n.resolve();
                    })
                  : n.resolve();
              }),
              n.promise()
            );
          },
          moveTo: function (e, t, i) {
            t === y || "over" === t
              ? (t = "child")
              : "firstChild" === t &&
                (e.children && e.children.length
                  ? ((t = "before"), (e = e.children[0]))
                  : (t = "child"));
            var s,
              n = this.parent,
              o = "child" === t ? e : e.parent;
            if (this !== e) {
              if (
                (this.parent
                  ? o.isDescendantOf(this) &&
                    w.error("Cannot move a node to its own descendant")
                  : w.error("Cannot move system root"),
                o !== n && n.triggerModifyChild("remove", this),
                1 === this.parent.children.length)
              ) {
                if (this.parent === o) return;
                (this.parent.children = this.parent.lazy ? [] : null),
                  (this.parent.expanded = !1);
              } else
                k(
                  0 <= (s = w.inArray(this, this.parent.children)),
                  "invalid source parent"
                ),
                  this.parent.children.splice(s, 1);
              if ((this.parent = o).hasChildren())
                switch (t) {
                  case "child":
                    o.children.push(this);
                    break;
                  case "before":
                    k(
                      0 <= (s = w.inArray(e, o.children)),
                      "invalid target parent"
                    ),
                      o.children.splice(s, 0, this);
                    break;
                  case "after":
                    k(
                      0 <= (s = w.inArray(e, o.children)),
                      "invalid target parent"
                    ),
                      o.children.splice(s + 1, 0, this);
                    break;
                  default:
                    w.error("Invalid mode " + t);
                }
              else o.children = [this];
              i && e.visit(i, !0),
                o === n
                  ? o.triggerModifyChild("move", this)
                  : o.triggerModifyChild("add", this),
                this.tree !== e.tree &&
                  (this.warn("Cross-tree moveTo is experimantal!"),
                  this.visit(function (t) {
                    t.tree = e.tree;
                  }, !0)),
                n.isDescendantOf(o) || n.render(),
                o.isDescendantOf(n) || o === n || o.render();
            }
          },
          navigate: function (e, i) {
            function s(t) {
              if (t) {
                try {
                  t.makeVisible({ scrollIntoView: !1 });
                } catch (t) {}
                return w(t.span).is(":visible")
                  ? !1 === i
                    ? t.setFocus()
                    : t.setActive()
                  : (t.debug("Navigate: skipping hidden node"),
                    void t.navigate(e, i));
              }
            }
            var t,
              n,
              o,
              a = w.ui.keyCode,
              r = null;
            switch (e) {
              case a.BACKSPACE:
                this.parent && this.parent.parent && (o = s(this.parent));
                break;
              case a.HOME:
                this.tree.visit(function (t) {
                  if (w(t.span).is(":visible")) return (o = s(t)), !1;
                });
                break;
              case a.END:
                this.tree.visit(function (t) {
                  w(t.span).is(":visible") && (o = t);
                }),
                  o && (o = s(o));
                break;
              case a.LEFT:
                this.expanded
                  ? (this.setExpanded(!1), (o = s(this)))
                  : this.parent && this.parent.parent && (o = s(this.parent));
                break;
              case a.RIGHT:
                this.expanded || (!this.children && !this.lazy)
                  ? this.children &&
                    this.children.length &&
                    (o = s(this.children[0]))
                  : (this.setExpanded(), (o = s(this)));
                break;
              case a.UP:
                for (
                  r = this.getPrevSibling();
                  r && !w(r.span).is(":visible");

                )
                  r = r.getPrevSibling();
                for (; r && r.expanded && r.children && r.children.length; )
                  r = r.children[r.children.length - 1];
                !r && this.parent && this.parent.parent && (r = this.parent),
                  (o = s(r));
                break;
              case a.DOWN:
                if (this.expanded && this.children && this.children.length)
                  r = this.children[0];
                else
                  for (
                    t = (n = this.getParentList(!1, !0)).length - 1;
                    0 <= t;
                    t--
                  ) {
                    for (
                      r = n[t].getNextSibling();
                      r && !w(r.span).is(":visible");

                    )
                      r = r.getNextSibling();
                    if (r) break;
                  }
                o = s(r);
                break;
              default:
                !1;
            }
            return o || C();
          },
          remove: function () {
            return this.parent.removeChild(this);
          },
          removeChild: function (t) {
            return this.tree._callHook("nodeRemoveChild", this, t);
          },
          removeChildren: function () {
            return this.tree._callHook("nodeRemoveChildren", this);
          },
          removeClass: function (t) {
            return this.toggleClass(t, !1);
          },
          render: function (t, e) {
            return this.tree._callHook("nodeRender", this, t, e);
          },
          renderTitle: function () {
            return this.tree._callHook("nodeRenderTitle", this);
          },
          renderStatus: function () {
            return this.tree._callHook("nodeRenderStatus", this);
          },
          replaceWith: function (t) {
            var e,
              i = this.parent,
              s = w.inArray(this, i.children),
              n = this;
            return (
              k(
                this.isPagingNode(),
                "replaceWith() currently requires a paging status node"
              ),
              (e = this.tree._callHook("nodeLoadChildren", this, t))
                .done(function (t) {
                  var e = n.children;
                  for (l = 0; l < e.length; l++) e[l].parent = i;
                  i.children.splice.apply(i.children, [s + 1, 0].concat(e)),
                    (n.children = null),
                    n.remove(),
                    i.render();
                })
                .fail(function () {
                  n.setExpanded();
                }),
              e
            );
          },
          resetLazy: function () {
            this.removeChildren(),
              (this.expanded = !1),
              (this.lazy = !0),
              (this.children = y),
              this.renderStatus();
          },
          scheduleAction: function (t, e) {
            this.tree.timer && clearTimeout(this.tree.timer),
              (this.tree.timer = null);
            var i = this;
            switch (t) {
              case "cancel":
                break;
              case "expand":
                this.tree.timer = setTimeout(function () {
                  i.tree.debug("setTimeout: trigger expand"), i.setExpanded(!0);
                }, e);
                break;
              case "activate":
                this.tree.timer = setTimeout(function () {
                  i.tree.debug("setTimeout: trigger activate"), i.setActive(!0);
                }, e);
                break;
              default:
                w.error("Invalid mode " + t);
            }
          },
          scrollIntoView: function (t, e) {
            var i;
            e !== y &&
              (i = e).tree &&
              i.statusNodeType !== y &&
              (this.warn(
                "scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead."
              ),
              (e = { topNode: e }));
            var s,
              n,
              o,
              a = w.extend(
                {
                  effects: !0 === t ? { duration: 200, queue: !1 } : t,
                  scrollOfs: this.tree.options.scrollOfs,
                  scrollParent:
                    this.tree.options.scrollParent || this.tree.$container,
                  topNode: null,
                },
                e
              ),
              r = new w.Deferred(),
              l = this,
              h = w(this.span).height(),
              c = w(a.scrollParent),
              u = a.scrollOfs.top || 0,
              d = a.scrollOfs.bottom || 0,
              p = c.height(),
              f = c.scrollTop(),
              g = c,
              m = c[0] === b,
              v = a.topNode || null,
              _ = null;
            return w(this.span).is(":visible")
              ? (m
                  ? ((n = w(this.span).offset().top),
                    (s = v && v.span ? w(v.span).offset().top : 0),
                    (g = w("html,body")))
                  : (k(
                      c[0] !== x && c[0] !== x.body,
                      "scrollParent should be a simple element or `window`, not document or body."
                    ),
                    (o = c.offset().top),
                    (n = w(this.span).offset().top - o + f),
                    (s = v ? w(v.span).offset().top - o + f : 0),
                    (p -= Math.max(0, c.innerHeight() - c[0].clientHeight))),
                n < f + u
                  ? (_ = n - u)
                  : f + p - d < n + h &&
                    ((_ = n + h - p + d),
                    v &&
                      (k(
                        v.isRootNode() || w(v.span).is(":visible"),
                        "topNode must be visible"
                      ),
                      s < _ && (_ = s - u))),
                null !== _
                  ? a.effects
                    ? ((a.effects.complete = function () {
                        r.resolveWith(l);
                      }),
                      g.stop(!0).animate({ scrollTop: _ }, a.effects))
                    : ((g[0].scrollTop = _), r.resolveWith(this))
                  : r.resolveWith(this),
                r.promise())
              : (this.warn("scrollIntoView(): node is invisible."), C());
          },
          setActive: function (t, e) {
            return this.tree._callHook("nodeSetActive", this, t, e);
          },
          setExpanded: function (t, e) {
            return this.tree._callHook("nodeSetExpanded", this, t, e);
          },
          setFocus: function (t) {
            return this.tree._callHook("nodeSetFocus", this, t);
          },
          setSelected: function (t) {
            return this.tree._callHook("nodeSetSelected", this, t);
          },
          setStatus: function (t, e, i) {
            return this.tree._callHook("nodeSetStatus", this, t, e, i);
          },
          setTitle: function (t) {
            (this.title = t), this.renderTitle(), this.triggerModify("rename");
          },
          sortChildren: function (t, e) {
            var i,
              s,
              n = this.children;
            if (n) {
              if (
                ((t =
                  t ||
                  function (t, e) {
                    var i = t.title.toLowerCase(),
                      s = e.title.toLowerCase();
                    return i === s ? 0 : s < i ? 1 : -1;
                  }),
                n.sort(t),
                e)
              )
                for (i = 0, s = n.length; i < s; i++)
                  n[i].children && n[i].sortChildren(t, "$norender$");
              "$norender$" !== e && this.render(),
                this.triggerModifyChild("sort");
            }
          },
          toDict: function (t, e) {
            var i,
              s,
              n,
              o = {},
              a = this;
            if (
              (w.each(N, function (t, e) {
                (a[e] || !1 === a[e]) && (o[e] = a[e]);
              }),
              w.isEmptyObject(this.data) ||
                ((o.data = w.extend({}, this.data)),
                w.isEmptyObject(o.data) && delete o.data),
              e && e(o, a),
              t && this.hasChildren())
            )
              for (o.children = [], i = 0, s = this.children.length; i < s; i++)
                (n = this.children[i]).isStatusNode() ||
                  o.children.push(n.toDict(!0, e));
            return o;
          },
          toggleClass: function (t, e) {
            var i,
              s,
              n = t.match(/\S+/g) || [],
              o = 0,
              a = !1,
              r = this[this.tree.statusClassPropName],
              l = " " + (this.extraClasses || "") + " ";
            for (r && w(r).toggleClass(t, e); (i = n[o++]); )
              if (
                ((s = 0 <= l.indexOf(" " + i + " ")), (e = e === y ? !s : !!e))
              )
                s || ((l += i + " "), (a = !0));
              else
                for (; -1 < l.indexOf(" " + i + " "); )
                  l = l.replace(" " + i + " ", " ");
            return (this.extraClasses = w.trim(l)), a;
          },
          toggleExpanded: function () {
            return this.tree._callHook("nodeToggleExpanded", this);
          },
          toggleSelected: function () {
            return this.tree._callHook("nodeToggleSelected", this);
          },
          toString: function () {
            return "<FancytreeNode(#" + this.key + ", '" + this.title + "')>";
          },
          triggerModifyChild: function (t, e, i) {
            var s,
              n = this.tree.options.modifyChild;
            n &&
              (e &&
                e.parent !== this &&
                w.error("childNode " + e + " is not a child of " + this),
              (s = {
                node: this,
                tree: this.tree,
                operation: t,
                childNode: e || null,
              }),
              i && w.extend(s, i),
              n({ type: "modifyChild" }, s));
          },
          triggerModify: function (t, e) {
            this.parent.triggerModifyChild(t, this, e);
          },
          visit: function (t, e) {
            var i,
              s,
              n = !0,
              o = this.children;
            if (!0 === e && (!1 === (n = t(this)) || "skip" === n)) return n;
            if (o)
              for (
                i = 0, s = o.length;
                i < s && !1 !== (n = o[i].visit(t, !0));
                i++
              );
            return n;
          },
          visitAndLoad: function (i, t, e) {
            var s,
              n,
              o,
              a = this;
            return i && !0 === t && (!1 === (n = i(a)) || "skip" === n)
              ? e
                ? n
                : C()
              : a.children || a.lazy
              ? ((s = new w.Deferred()),
                (o = []),
                a.load().done(function () {
                  for (var t = 0, e = a.children.length; t < e; t++) {
                    if (!1 === (n = a.children[t].visitAndLoad(i, !0, !0))) {
                      s.reject();
                      break;
                    }
                    "skip" !== n && o.push(n);
                  }
                  w.when.apply(this, o).then(function () {
                    s.resolve();
                  });
                }),
                s.promise())
              : C();
          },
          visitParents: function (t, e) {
            if (e && !1 === t(this)) return !1;
            for (var i = this.parent; i; ) {
              if (!1 === t(i)) return !1;
              i = i.parent;
            }
            return !0;
          },
          warn: function (t) {
            Array.prototype.unshift.call(arguments, this.toString()),
              e("warn", arguments);
          },
        }),
        (r.prototype = {
          _makeHookContext: function (t, e, i) {
            var s, n;
            return (
              t.node !== y
                ? (e && t.originalEvent !== e && w.error("invalid args"),
                  (s = t))
                : t.tree
                ? (s = {
                    node: t,
                    tree: (n = t.tree),
                    widget: n.widget,
                    options: n.widget.options,
                    originalEvent: e,
                  })
                : t.widget
                ? (s = {
                    node: null,
                    tree: t,
                    widget: t.widget,
                    options: t.widget.options,
                    originalEvent: e,
                  })
                : w.error("invalid args"),
              i && w.extend(s, i),
              s
            );
          },
          _callHook: function (t, e, i) {
            var s = this._makeHookContext(e),
              n = this[t],
              o = Array.prototype.slice.call(arguments, 2);
            return (
              w.isFunction(n) ||
                w.error("_callHook('" + t + "') is not a function"),
              o.unshift(s),
              n.apply(this, o)
            );
          },
          _requireExtension: function (t, e, i, s) {
            i = !!i;
            var n = this._local.name,
              o = this.options.extensions,
              a = w.inArray(t, o) < w.inArray(n, o),
              r = e && null == this.ext[t],
              l = !r && null != i && i !== a;
            return (
              k(n && n !== t, "invalid or same name"),
              (!r && !l) ||
                (s ||
                  (r || e
                    ? ((s = "'" + n + "' extension requires '" + t + "'"),
                      l &&
                        (s +=
                          " to be registered " +
                          (i ? "before" : "after") +
                          " itself"))
                    : (s =
                        "If used together, `" +
                        t +
                        "` must be registered " +
                        (i ? "before" : "after") +
                        " `" +
                        n +
                        "`")),
                w.error(s),
                !1)
            );
          },
          activateKey: function (t) {
            var e = this.getNodeByKey(t);
            return (
              e
                ? e.setActive()
                : this.activeNode && this.activeNode.setActive(!1),
              e
            );
          },
          addPagingNode: function (t, e) {
            return this.rootNode.addPagingNode(t, e);
          },
          applyPatch: function (t) {
            var e,
              i,
              s,
              n,
              o,
              a,
              r = t.length,
              l = [];
            for (i = 0; i < r; i++)
              k(
                2 === (s = t[i]).length,
                "patchList must be an array of length-2-arrays"
              ),
                (n = s[0]),
                (o = s[1]),
                (a = null === n ? this.rootNode : this.getNodeByKey(n))
                  ? ((e = new w.Deferred()),
                    l.push(e),
                    a.applyPatch(o).always(g(e, a)))
                  : this.warn("could not find node with key '" + n + "'");
            return w.when.apply(w, l).promise();
          },
          clear: function (t) {
            this._callHook("treeClear", this);
          },
          count: function () {
            return this.rootNode.countChildren();
          },
          debug: function (t) {
            2 <= this.options.debugLevel &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("log", arguments));
          },
          enableUpdate: function (t) {
            return (
              (t = !1 !== t),
              !!this._enableUpdate == !!t
                ? t
                : ((this._enableUpdate = t)
                    ? (this.debug(
                        "enableUpdate(true): redraw ",
                        this._dirtyRoots
                      ),
                      this.render())
                    : this.debug("enableUpdate(false)..."),
                  !t)
            );
          },
          findAll: function (t) {
            return this.rootNode.findAll(t);
          },
          findFirst: function (t) {
            return this.rootNode.findFirst(t);
          },
          findNextNode: function (e, i, t) {
            var s,
              n = null,
              o = i.parent.children,
              a = null,
              l = function (t, e, i) {
                var s,
                  n,
                  o = t.children,
                  a = o.length,
                  r = o[e];
                if (r && !1 === i(r)) return !1;
                if (r && r.children && r.expanded && !1 === l(r, 0, i))
                  return !1;
                for (s = e + 1; s < a; s++) if (!1 === l(t, s, i)) return !1;
                return (n = t.parent)
                  ? l(n, n.children.indexOf(t) + 1, i)
                  : l(t, 0, i);
              };
            return (
              (e =
                "string" == typeof e
                  ? ((s = new RegExp("^" + e, "i")),
                    function (t) {
                      return s.test(t.title);
                    })
                  : e),
              (i = i || this.getFirstChild()),
              l(i.parent, o.indexOf(i), function (t) {
                return (
                  t !== n &&
                  ((n = n || t),
                  w(t.span).is(":visible")
                    ? (!e(t) || (a = t) === i) && void 0
                    : void t.debug("quicksearch: skipping hidden node"))
                );
              }),
              a
            );
          },
          generateFormElements: function (t, e, i) {
            function s(t) {
              l.append(
                w("<input>", {
                  type: "checkbox",
                  name: o,
                  value: t.key,
                  checked: !0,
                })
              );
            }
            i = i || {};
            var n,
              o = "string" == typeof t ? t : "ft_" + this._id + "[]",
              a = "string" == typeof e ? e : "ft_" + this._id + "_active",
              r = "fancytree_result_" + this._id,
              l = w("#" + r),
              h = 3 === this.options.selectMode && !1 !== i.stopOnParents;
            l.length
              ? l.empty()
              : (l = w("<div>", { id: r }).hide().insertAfter(this.$container)),
              !1 !== e &&
                this.activeNode &&
                l.append(
                  w("<input>", {
                    type: "radio",
                    name: a,
                    value: this.activeNode.key,
                    checked: !0,
                  })
                ),
              i.filter
                ? this.visit(function (t) {
                    var e = i.filter(t);
                    return "skip" === e ? e : void (!1 !== e && s(t));
                  })
                : !1 !== t &&
                  ((n = this.getSelectedNodes(h)),
                  w.each(n, function (t, e) {
                    s(e);
                  }));
          },
          getActiveNode: function () {
            return this.activeNode;
          },
          getFirstChild: function () {
            return this.rootNode.getFirstChild();
          },
          getFocusNode: function () {
            return this.focusNode;
          },
          getNodeByKey: function (e, t) {
            var i, s;
            return !t && (i = x.getElementById(this.options.idPrefix + e))
              ? i.ftnode
                ? i.ftnode
                : null
              : ((t = t || this.rootNode),
                (s = null),
                t.visit(function (t) {
                  if (t.key === e) return (s = t), !1;
                }, !0),
                s);
          },
          getRootNode: function () {
            return this.rootNode;
          },
          getSelectedNodes: function (t) {
            return this.rootNode.getSelectedNodes(t);
          },
          hasFocus: function () {
            return !!this._hasFocus;
          },
          info: function (t) {
            1 <= this.options.debugLevel &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("info", arguments));
          },
          loadKeyPath: function (t, n, e) {
            function i(e, i, s) {
              n.call(f, i, "loading"),
                i
                  .load()
                  .done(function () {
                    f.loadKeyPath.call(f, h[e], n, i).always(g(s, f));
                  })
                  .fail(function (t) {
                    f.warn(
                      "loadKeyPath: error loading: " +
                        e +
                        " (parent: " +
                        u +
                        ")"
                    ),
                      n.call(f, i, "error"),
                      s.reject();
                  });
            }
            var s,
              o,
              a,
              r,
              l,
              h,
              c,
              u,
              d,
              p = this.options.keyPathSeparator,
              f = this;
            for (
              n = n || w.noop, w.isArray(t) || (t = [t]), h = {}, a = 0;
              a < t.length;
              a++
            )
              for (
                u = e || this.rootNode,
                  (r = t[a]).charAt(0) === p && (r = r.substr(1)),
                  d = r.split(p);
                d.length;

              ) {
                if (((l = d.shift()), !(c = u._findDirectChild(l)))) {
                  this.warn(
                    "loadKeyPath: key not found: " + l + " (parent: " + u + ")"
                  ),
                    n.call(this, l, "error");
                  break;
                }
                if (0 === d.length) {
                  n.call(this, c, "ok");
                  break;
                }
                if (c.lazy && c.hasChildren() === y) {
                  n.call(this, c, "loaded"),
                    h[l] ? h[l].push(d.join(p)) : (h[l] = [d.join(p)]);
                  break;
                }
                n.call(this, c, "loaded"), (u = c);
              }
            for (l in ((s = []), h))
              null == (c = u._findDirectChild(l)) && (c = f.getNodeByKey(l)),
                (o = new w.Deferred()),
                s.push(o),
                i(l, c, o);
            return w.when.apply(w, s).promise();
          },
          reactivate: function (t) {
            var e,
              i = this.activeNode;
            return i
              ? ((this.activeNode = null),
                (e = i.setActive(!0, { noFocus: !0 })),
                t && i.setFocus(),
                e)
              : C();
          },
          reload: function (t) {
            return (
              this._callHook("treeClear", this),
              this._callHook("treeLoad", this, t)
            );
          },
          render: function (t, e) {
            return this.rootNode.render(t, e);
          },
          setFocus: function (t) {
            return this._callHook("treeSetFocus", this, t);
          },
          toDict: function (t, e) {
            var i = this.rootNode.toDict(!0, e);
            return t ? i : i.children;
          },
          toString: function () {
            return "<Fancytree(#" + this._id + ")>";
          },
          _triggerNodeEvent: function (t, e, i, s) {
            var n = this._makeHookContext(e, i, s),
              o = this.widget._trigger(t, i, n);
            return !1 !== o && n.result !== y ? n.result : o;
          },
          _triggerTreeEvent: function (t, e, i) {
            var s = this._makeHookContext(this, e, i),
              n = this.widget._trigger(t, e, s);
            return !1 !== n && s.result !== y ? s.result : n;
          },
          visit: function (t) {
            return this.rootNode.visit(t, !1);
          },
          warn: function (t) {
            Array.prototype.unshift.call(arguments, this.toString()),
              e("warn", arguments);
          },
        }),
        w.extend(r.prototype, {
          nodeClick: function (t) {
            var e,
              i,
              s = t.targetType,
              n = t.node;
            if ("expander" === s) {
              if (n.isLoading())
                return void n.debug("Got 2nd click while loading: ignored");
              this._callHook("nodeToggleExpanded", t);
            } else if ("checkbox" === s)
              this._callHook("nodeToggleSelected", t),
                t.options.focusOnSelect &&
                  this._callHook("nodeSetFocus", t, !0);
            else {
              if (((e = !(i = !1)), n.folder))
                switch (t.options.clickFolderMode) {
                  case 2:
                    e = !(i = !0);
                    break;
                  case 3:
                    i = e = !0;
                }
              e &&
                (this.nodeSetFocus(t), this._callHook("nodeSetActive", t, !0)),
                i && this._callHook("nodeToggleExpanded", t);
            }
          },
          nodeCollapseSiblings: function (t, e) {
            var i,
              s,
              n,
              o = t.node;
            if (o.parent)
              for (s = 0, n = (i = o.parent.children).length; s < n; s++)
                i[s] !== o &&
                  i[s].expanded &&
                  this._callHook("nodeSetExpanded", i[s], !1, e);
          },
          nodeDblclick: function (t) {
            "title" === t.targetType &&
              4 === t.options.clickFolderMode &&
              this._callHook("nodeToggleExpanded", t),
              "title" === t.targetType && t.originalEvent.preventDefault();
          },
          nodeKeydown: function (t) {
            var e,
              i,
              s,
              n = t.originalEvent,
              o = t.node,
              a = t.tree,
              r = t.options,
              l = n.which,
              h = String.fromCharCode(l),
              c = !(n.altKey || n.ctrlKey || n.metaKey || n.shiftKey),
              u = w(n.target),
              d = !0,
              p = !(n.ctrlKey || !r.autoActivate);
            if (
              (o ||
                ((s = this.getActiveNode() || this.getFirstChild()) &&
                  (s.setFocus(),
                  (o = t.node = this.focusNode).debug(
                    "Keydown force focus on active node"
                  ))),
              r.quicksearch &&
                c &&
                /\w/.test(h) &&
                !S[l] &&
                !u.is(":input:enabled"))
            )
              return (
                500 < (i = new Date().getTime()) - a.lastQuicksearchTime &&
                  (a.lastQuicksearchTerm = ""),
                (a.lastQuicksearchTime = i),
                (a.lastQuicksearchTerm += h),
                (e = a.findNextNode(
                  a.lastQuicksearchTerm,
                  a.getActiveNode()
                )) && e.setActive(),
                void n.preventDefault()
              );
            switch (v.eventToString(n)) {
              case "+":
              case "=":
                a.nodeSetExpanded(t, !0);
                break;
              case "-":
                a.nodeSetExpanded(t, !1);
                break;
              case "space":
                o.isPagingNode()
                  ? a._triggerNodeEvent("clickPaging", t, n)
                  : r.checkbox
                  ? a.nodeToggleSelected(t)
                  : a.nodeSetActive(t, !0);
                break;
              case "return":
                a.nodeSetActive(t, !0);
                break;
              case "home":
              case "end":
              case "backspace":
              case "left":
              case "right":
              case "up":
              case "down":
                o.navigate(n.which, p, !0);
                break;
              default:
                d = !1;
            }
            d && n.preventDefault();
          },
          nodeLoadChildren: function (o, a) {
            var e,
              i,
              t,
              r = o.tree,
              l = o.node,
              h = new Date().getTime();
            return (
              w.isFunction(a) &&
                ((a = a.call(r, { type: "source" }, o)),
                k(
                  !w.isFunction(a),
                  "source callback must not return another function"
                )),
              a.url &&
                (l._requestId &&
                  l.warn(
                    "Recursive load request #" +
                      h +
                      " while #" +
                      l._requestId +
                      " is pending."
                  ),
                (e = w.extend({}, o.options.ajax, a)),
                (l._requestId = h),
                e.debugDelay
                  ? ((i = e.debugDelay),
                    w.isArray(i) && (i = i[0] + Math.random() * (i[1] - i[0])),
                    l.warn(
                      "nodeLoadChildren waiting debugDelay " +
                        Math.round(i) +
                        " ms ..."
                    ),
                    (e.debugDelay = !1),
                    (t = w.Deferred(function (t) {
                      setTimeout(function () {
                        w.ajax(e)
                          .done(function () {
                            t.resolveWith(this, arguments);
                          })
                          .fail(function () {
                            t.rejectWith(this, arguments);
                          });
                      }, i);
                    })))
                  : (t = w.ajax(e)),
                (a = new w.Deferred()),
                t
                  .done(function (t, e, i) {
                    var s, n;
                    if (
                      (("json" !== this.dataType &&
                        "jsonp" !== this.dataType) ||
                        "string" != typeof t ||
                        w.error(
                          "Ajax request returned a string (did you get the JSON dataType wrong?)."
                        ),
                      l._requestId && l._requestId > h)
                    )
                      a.rejectWith(this, [c]);
                    else {
                      if (o.options.postProcess) {
                        try {
                          n = r._triggerNodeEvent(
                            "postProcess",
                            o,
                            o.originalEvent,
                            {
                              response: t,
                              error: null,
                              dataType: this.dataType,
                            }
                          );
                        } catch (t) {
                          n = {
                            error: t,
                            message: "" + t,
                            details: "postProcess failed",
                          };
                        }
                        if (n.error)
                          return (
                            (s = w.isPlainObject(n.error)
                              ? n.error
                              : { message: n.error }),
                            (s = r._makeHookContext(l, null, s)),
                            void a.rejectWith(this, [s])
                          );
                        t = w.isArray(n) ? n : t;
                      } else
                        t &&
                          t.hasOwnProperty("d") &&
                          o.options.enableAspx &&
                          (t = "string" == typeof t.d ? w.parseJSON(t.d) : t.d);
                      a.resolveWith(this, [t]);
                    }
                  })
                  .fail(function (t, e, i) {
                    var s = r._makeHookContext(l, null, {
                      error: t,
                      args: Array.prototype.slice.call(arguments),
                      message: i,
                      details: t.status + ": " + i,
                    });
                    a.rejectWith(this, [s]);
                  })),
              w.isFunction(a.then) &&
                w.isFunction(a.catch) &&
                ((t = a),
                (a = new w.Deferred()),
                t.then(
                  function (t) {
                    a.resolve(t);
                  },
                  function (t) {
                    a.reject(t);
                  }
                )),
              w.isFunction(a.promise) &&
                (r.nodeSetStatus(o, "loading"),
                a
                  .done(function (t) {
                    r.nodeSetStatus(o, "ok"), (l._requestId = null);
                  })
                  .fail(function (t) {
                    var e;
                    return t === c
                      ? void l.warn(
                          "Ignored response for obsolete load request #" +
                            h +
                            " (expected #" +
                            l._requestId +
                            ")"
                        )
                      : (t.node && t.error && t.message
                          ? (e = t)
                          : "[object Object]" ===
                              (e = r._makeHookContext(l, null, {
                                error: t,
                                args: Array.prototype.slice.call(arguments),
                                message: t ? t.message || t.toString() : "",
                              })).message && (e.message = ""),
                        l.warn("Load children failed (" + e.message + ")", e),
                        void (
                          !1 !== r._triggerNodeEvent("loadError", e, null) &&
                          r.nodeSetStatus(o, "error", e.message, e.details)
                        ));
                  })),
              w.when(a).done(function (t) {
                var e;
                w.isPlainObject(t) &&
                  (k(
                    l.isRootNode(),
                    "source may only be an object for root nodes (expecting an array of child objects otherwise)"
                  ),
                  k(
                    w.isArray(t.children),
                    "if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')"
                  ),
                  (t = (e = t).children),
                  delete e.children,
                  w.extend(r.data, e)),
                  k(w.isArray(t), "expected array of children"),
                  l._setChildren(t),
                  r._triggerNodeEvent("loadChildren", l);
              })
            );
          },
          nodeLoadKeyPath: function (t, e) {},
          nodeRemoveChild: function (t, e) {
            var i,
              s = t.node,
              n = w.extend({}, t, { node: e }),
              o = s.children;
            return 1 === o.length
              ? (k(e === o[0], "invalid single child"),
                this.nodeRemoveChildren(t))
              : (this.activeNode &&
                  (e === this.activeNode ||
                    this.activeNode.isDescendantOf(e)) &&
                  this.activeNode.setActive(!1),
                this.focusNode &&
                  (e === this.focusNode || this.focusNode.isDescendantOf(e)) &&
                  (this.focusNode = null),
                this.nodeRemoveMarkup(n),
                this.nodeRemoveChildren(n),
                k(0 <= (i = w.inArray(e, o)), "invalid child"),
                s.triggerModifyChild("remove", e),
                e.visit(function (t) {
                  t.parent = null;
                }, !0),
                this._callHook("treeRegisterNode", this, !1, e),
                void o.splice(i, 1));
          },
          nodeRemoveChildMarkup: function (t) {
            var e = t.node;
            e.ul &&
              (e.isRootNode()
                ? w(e.ul).empty()
                : (w(e.ul).remove(), (e.ul = null)),
              e.visit(function (t) {
                t.li = t.ul = null;
              }));
          },
          nodeRemoveChildren: function (t) {
            var e = t.tree,
              i = t.node;
            i.children &&
              (this.activeNode &&
                this.activeNode.isDescendantOf(i) &&
                this.activeNode.setActive(!1),
              this.focusNode &&
                this.focusNode.isDescendantOf(i) &&
                (this.focusNode = null),
              this.nodeRemoveChildMarkup(t),
              w.extend({}, t),
              i.triggerModifyChild("remove", null),
              i.visit(function (t) {
                (t.parent = null), e._callHook("treeRegisterNode", e, !1, t);
              }),
              i.lazy ? (i.children = []) : (i.children = null),
              i.isRootNode() || (i.expanded = !1),
              this.nodeRenderStatus(t));
          },
          nodeRemoveMarkup: function (t) {
            var e = t.node;
            e.li && (w(e.li).remove(), (e.li = null)),
              this.nodeRemoveChildMarkup(t);
          },
          nodeRender: function (t, e, i, s, n) {
            var o,
              a,
              r,
              l,
              h,
              c,
              u,
              d = t.node,
              p = t.tree,
              f = t.options,
              g = f.aria,
              m = !1,
              v = d.parent,
              _ = !v,
              b = d.children,
              y = null;
            if (!1 !== p._enableUpdate && (_ || v.ul)) {
              if (
                (k(_ || v.ul, "parent UL must exist"),
                _ ||
                  (d.li &&
                    (e || d.li.parentNode !== d.parent.ul) &&
                    (d.li.parentNode === d.parent.ul
                      ? (y = d.li.nextSibling)
                      : this.debug(
                          "Unlinking " +
                            d +
                            " (must be child of " +
                            d.parent +
                            ")"
                        ),
                    this.nodeRemoveMarkup(t)),
                  d.li
                    ? this.nodeRenderStatus(t)
                    : ((m = !0),
                      (d.li = x.createElement("li")),
                      (d.li.ftnode = d).key &&
                        f.generateIds &&
                        (d.li.id = f.idPrefix + d.key),
                      (d.span = x.createElement("span")),
                      (d.span.className = "fancytree-node"),
                      g && !d.tr && w(d.span).attr("role", "treeitem"),
                      d.li.appendChild(d.span),
                      this.nodeRenderTitle(t),
                      f.createNode &&
                        f.createNode.call(p, { type: "createNode" }, t)),
                  f.renderNode &&
                    f.renderNode.call(p, { type: "renderNode" }, t)),
                b)
              ) {
                if (_ || d.expanded || !0 === i) {
                  for (
                    d.ul ||
                      ((d.ul = x.createElement("ul")),
                      ((!0 !== s || n) && d.expanded) ||
                        (d.ul.style.display = "none"),
                      g && w(d.ul).attr("role", "group"),
                      d.li ? d.li.appendChild(d.ul) : d.tree.$div.append(d.ul)),
                      l = 0,
                      h = b.length;
                    l < h;
                    l++
                  )
                    (u = w.extend({}, t, { node: b[l] })),
                      this.nodeRender(u, e, i, !1, !0);
                  for (o = d.ul.firstChild; o; )
                    (r = o.ftnode) && r.parent !== d
                      ? (d.debug("_fixParent: remove missing " + r, o),
                        (c = o.nextSibling),
                        o.parentNode.removeChild(o),
                        (o = c))
                      : (o = o.nextSibling);
                  for (o = d.ul.firstChild, l = 0, h = b.length - 1; l < h; l++)
                    (a = b[l]) !== (r = o.ftnode)
                      ? d.ul.insertBefore(a.li, r.li)
                      : (o = o.nextSibling);
                }
              } else
                d.ul &&
                  (this.warn("remove child markup for " + d),
                  this.nodeRemoveChildMarkup(t));
              _ || (m && v.ul.insertBefore(d.li, y));
            }
          },
          nodeRenderTitle: function (t, e) {
            var i,
              s,
              n,
              o,
              a = t.node,
              r = t.tree,
              l = t.options,
              h = l.aria,
              c = a.getLevel(),
              u = [];
            e !== y && (a.title = e),
              a.span &&
                !1 !== r._enableUpdate &&
                ((n = h && !1 !== a.hasChildren() ? " role='button'" : ""),
                c < l.minExpandLevel
                  ? (a.lazy || (a.expanded = !0),
                    1 < c &&
                      u.push(
                        "<span " +
                          n +
                          " class='fancytree-expander fancytree-expander-fixed'></span>"
                      ))
                  : u.push(
                      "<span " + n + " class='fancytree-expander'></span>"
                    ),
                l.checkbox &&
                  !0 !== a.hideCheckbox &&
                  !a.isStatusNode() &&
                  ((n = h ? " role='checkbox'" : ""),
                  u.push("<span " + n + " class='fancytree-checkbox'></span>")),
                a.data.iconClass !== y &&
                  (a.icon
                    ? w.error(
                        "'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead"
                      )
                    : (a.warn(
                        "'iconClass' node option is deprecated since v2.14.0: use 'icon' instead"
                      ),
                      (a.icon = a.data.iconClass))),
                "boolean" != typeof (i = v.evalOption("icon", a, a, l, !0)) &&
                  (i = "" + i),
                !1 !== i &&
                  ((n = h ? " role='presentation'" : ""),
                  "string" == typeof i
                    ? p.test(i)
                      ? ((i =
                          "/" === i.charAt(0) ? i : (l.imagePath || "") + i),
                        u.push(
                          "<img src='" +
                            i +
                            "' class='fancytree-icon' alt='' />"
                        ))
                      : u.push(
                          "<span " +
                            n +
                            " class='fancytree-custom-icon " +
                            i +
                            "'></span>"
                        )
                    : u.push("<span " + n + " class='fancytree-icon'></span>")),
                (s = ""),
                l.renderTitle &&
                  (s = l.renderTitle.call(r, { type: "renderTitle" }, t) || ""),
                s ||
                  (a.tooltip
                    ? (o = a.tooltip)
                    : l.tooltip &&
                      (o = !0 === l.tooltip ? a.title : l.tooltip.call(r, a)),
                  (s =
                    "<span " +
                    (n = "") +
                    " class='fancytree-title'" +
                    (o = o
                      ? " title='" +
                        ("" + o).replace(_, function (t) {
                          return D[t];
                        }) +
                        "'"
                      : "") +
                    (l.titlesTabbable ? " tabindex='0'" : "") +
                    ">" +
                    (l.escapeTitles ? d(a.title) : a.title) +
                    "</span>")),
                u.push(s),
                (a.span.innerHTML = u.join("")),
                this.nodeRenderStatus(t),
                l.enhanceTitle &&
                  ((t.$title = w(">span.fancytree-title", a.span)),
                  (s =
                    l.enhanceTitle.call(r, { type: "enhanceTitle" }, t) ||
                    "")));
          },
          nodeRenderStatus: function (t) {
            var e,
              i = t.node,
              s = t.tree,
              n = t.options,
              o = i.hasChildren(),
              a = i.isLastSibling(),
              r = n.aria,
              l = n._classNames,
              h = [],
              c = i[s.statusClassPropName];
            c &&
              !1 !== s._enableUpdate &&
              (r && (e = w(i.tr ? i.tr : i.span)),
              h.push(l.node),
              s.activeNode === i && h.push(l.active),
              s.focusNode === i && h.push(l.focused),
              i.expanded
                ? (h.push(l.expanded), r && e.attr("aria-expanded", !0))
                : r &&
                  (o
                    ? e.attr("aria-expanded", !1)
                    : e.removeAttr("aria-expanded")),
              i.folder && h.push(l.folder),
              !1 !== o && h.push(l.hasChildren),
              a && h.push(l.lastsib),
              i.lazy && null == i.children && h.push(l.lazy),
              i.partload && h.push(l.partload),
              i.partsel && h.push(l.partsel),
              i.unselectable && h.push(l.unselectable),
              i._isLoading && h.push(l.loading),
              i._error && h.push(l.error),
              i.statusNodeType && h.push(l.statusNodePrefix + i.statusNodeType),
              i.selected
                ? (h.push(l.selected), r && e.attr("aria-selected", !0))
                : r && e.attr("aria-selected", !1),
              i.extraClasses && h.push(i.extraClasses),
              !1 === o
                ? h.push(l.combinedExpanderPrefix + "n" + (a ? "l" : ""))
                : h.push(
                    l.combinedExpanderPrefix +
                      (i.expanded ? "e" : "c") +
                      (i.lazy && null == i.children ? "d" : "") +
                      (a ? "l" : "")
                  ),
              h.push(
                l.combinedIconPrefix +
                  (i.expanded ? "e" : "c") +
                  (i.folder ? "f" : "")
              ),
              (c.className = h.join(" ")),
              i.li && w(i.li).toggleClass(l.lastsib, a));
          },
          nodeSetActive: function (t, e, i) {
            i = i || {};
            var s,
              n = t.node,
              o = t.tree,
              a = t.options,
              r = !0 === i.noEvents,
              l = !0 === i.noFocus;
            return (n === o.activeNode) === (e = !1 !== e)
              ? C(n)
              : e &&
                !r &&
                !1 ===
                  this._triggerNodeEvent("beforeActivate", n, t.originalEvent)
              ? f(n, ["rejected"])
              : (e
                  ? (o.activeNode &&
                      (k(o.activeNode !== n, "node was active (inconsistency)"),
                      (s = w.extend({}, t, { node: o.activeNode })),
                      o.nodeSetActive(s, !1),
                      k(null === o.activeNode, "deactivate was out of sync?")),
                    a.activeVisible &&
                      n.makeVisible({
                        scrollIntoView: l && null == o.focusNode,
                      }),
                    (o.activeNode = n),
                    o.nodeRenderStatus(t),
                    l || o.nodeSetFocus(t),
                    r || o._triggerNodeEvent("activate", n, t.originalEvent))
                  : (k(
                      o.activeNode === n,
                      "node was not active (inconsistency)"
                    ),
                    (o.activeNode = null),
                    this.nodeRenderStatus(t),
                    r ||
                      t.tree._triggerNodeEvent(
                        "deactivate",
                        n,
                        t.originalEvent
                      )),
                C(n));
          },
          nodeSetExpanded: function (s, n, t) {
            t = t || {};
            var e,
              i,
              o,
              a,
              r,
              l,
              h = s.node,
              c = s.tree,
              u = s.options,
              d = !0 === t.noAnimation,
              p = !0 === t.noEvents;
            if (((n = !1 !== n), (h.expanded && n) || (!h.expanded && !n)))
              return C(h);
            if (n && !h.lazy && !h.hasChildren()) return C(h);
            if (!n && h.getLevel() < u.minExpandLevel) return f(h, ["locked"]);
            if (
              !p &&
              !1 === this._triggerNodeEvent("beforeExpand", h, s.originalEvent)
            )
              return f(h, ["rejected"]);
            if (
              (d || h.isVisible() || (d = t.noAnimation = !0),
              (i = new w.Deferred()),
              n && !h.expanded && u.autoCollapse)
            ) {
              (r = h.getParentList(!1, !0)), (l = u.autoCollapse);
              try {
                for (u.autoCollapse = !1, o = 0, a = r.length; o < a; o++)
                  this._callHook("nodeCollapseSiblings", r[o], t);
              } finally {
                u.autoCollapse = l;
              }
            }
            return (
              i.done(function () {
                var t = h.getLastChild();
                n && u.autoScroll && !d && t
                  ? t.scrollIntoView(!0, { topNode: h }).always(function () {
                      p ||
                        s.tree._triggerNodeEvent(n ? "expand" : "collapse", s);
                    })
                  : p || s.tree._triggerNodeEvent(n ? "expand" : "collapse", s);
              }),
              (e = function (t) {
                var e = u._classNames,
                  i = u.toggleEffect;
                if (
                  ((h.expanded = n),
                  c._callHook("nodeRender", s, !1, !1, !0),
                  h.ul)
                )
                  if (("none" !== h.ul.style.display) === !!h.expanded)
                    h.warn("nodeSetExpanded: UL.style.display already set");
                  else {
                    if (i && !d)
                      return (
                        w(h.li).addClass(e.animating),
                        void w(h.ul)
                          .addClass(e.animating)
                          .toggle(i.effect, i.options, i.duration, function () {
                            w(this).removeClass(e.animating),
                              w(h.li).removeClass(e.animating),
                              t();
                          })
                      );
                    h.ul.style.display = h.expanded || !parent ? "" : "none";
                  }
                t();
              }),
              n && h.lazy && h.hasChildren() === y
                ? h
                    .load()
                    .done(function () {
                      i.notifyWith && i.notifyWith(h, ["loaded"]),
                        e(function () {
                          i.resolveWith(h);
                        });
                    })
                    .fail(function (t) {
                      e(function () {
                        i.rejectWith(h, ["load failed (" + t + ")"]);
                      });
                    })
                : e(function () {
                    i.resolveWith(h);
                  }),
              i.promise()
            );
          },
          nodeSetFocus: function (t, e) {
            var i,
              s = t.tree,
              n = t.node,
              o = s.options,
              a = !!t.originalEvent && w(t.originalEvent.target).is(":input");
            if (((e = !1 !== e), s.focusNode)) {
              if (s.focusNode === n && e) return;
              (i = w.extend({}, t, { node: s.focusNode })),
                (s.focusNode = null),
                this._triggerNodeEvent("blur", i),
                this._callHook("nodeRenderStatus", i);
            }
            e &&
              (this.hasFocus() ||
                (n.debug("nodeSetFocus: forcing container focus"),
                this._callHook("treeSetFocus", t, !0, { calledByNode: !0 })),
              n.makeVisible({ scrollIntoView: !1 }),
              (s.focusNode = n),
              o.titlesTabbable
                ? a || w(n.span).find(".fancytree-title").focus()
                : 0 ===
                    w(x.activeElement).closest(".fancytree-container").length &&
                  w(s.$container).focus(),
              o.aria &&
                w(s.$container).attr(
                  "aria-activedescendant",
                  w(n.tr || n.span)
                    .uniqueId()
                    .attr("id")
                ),
              this._triggerNodeEvent("focus", t),
              o.autoScroll && n.scrollIntoView(),
              this._callHook("nodeRenderStatus", t));
          },
          nodeSetSelected: function (t, e) {
            var i = t.node,
              s = t.tree,
              n = t.options;
            if (((e = !1 !== e), !i.unselectable)) {
              if ((i.selected && e) || (!i.selected && !e)) return !!i.selected;
              if (
                !1 ===
                this._triggerNodeEvent("beforeSelect", i, t.originalEvent)
              )
                return !!i.selected;
              e && 1 === n.selectMode
                ? s.lastSelectedNode && s.lastSelectedNode.setSelected(!1)
                : 3 === n.selectMode &&
                  ((i.selected = e), i.fixSelection3AfterClick()),
                (i.selected = e),
                this.nodeRenderStatus(t),
                (s.lastSelectedNode = e ? i : null),
                s._triggerNodeEvent("select", t);
            }
          },
          nodeSetStatus: function (t, e, i, s) {
            function n(t, e) {
              var i = o.children ? o.children[0] : null;
              return (
                i && i.isStatusNode()
                  ? (w.extend(i, t),
                    (i.statusNodeType = e),
                    a._callHook("nodeRenderTitle", i))
                  : (o._setChildren([t]),
                    (o.children[0].statusNodeType = e),
                    a.render()),
                o.children[0]
              );
            }
            var o = t.node,
              a = t.tree;
            switch (e) {
              case "ok":
                (function () {
                  var t = o.children ? o.children[0] : null;
                  if (t && t.isStatusNode()) {
                    try {
                      o.ul && (o.ul.removeChild(t.li), (t.li = null));
                    } catch (t) {}
                    1 === o.children.length
                      ? (o.children = [])
                      : o.children.shift();
                  }
                })(),
                  (o._isLoading = !1),
                  (o._error = null),
                  o.renderStatus();
                break;
              case "loading":
                o.parent ||
                  n(
                    {
                      title:
                        a.options.strings.loading + (i ? " (" + i + ")" : ""),
                      checkbox: !1,
                      tooltip: s,
                    },
                    e
                  ),
                  (o._isLoading = !0),
                  (o._error = null),
                  o.renderStatus();
                break;
              case "error":
                n(
                  {
                    title:
                      a.options.strings.loadError + (i ? " (" + i + ")" : ""),
                    checkbox: !1,
                    tooltip: s,
                  },
                  e
                ),
                  (o._isLoading = !1),
                  (o._error = { message: i, details: s }),
                  o.renderStatus();
                break;
              case "nodata":
                n(
                  { title: a.options.strings.noData, checkbox: !1, tooltip: s },
                  e
                ),
                  (o._isLoading = !1),
                  (o._error = null),
                  o.renderStatus();
                break;
              default:
                w.error("invalid node status " + e);
            }
          },
          nodeToggleExpanded: function (t) {
            return this.nodeSetExpanded(t, !t.node.expanded);
          },
          nodeToggleSelected: function (t) {
            return this.nodeSetSelected(t, !t.node.selected);
          },
          treeClear: function (t) {
            var e = t.tree;
            (e.activeNode = null),
              (e.focusNode = null),
              e.$div.find(">ul.fancytree-container").empty(),
              (e.rootNode.children = null);
          },
          treeCreate: function (t) {},
          treeDestroy: function (t) {
            this.$div.find(">ul.fancytree-container").remove(),
              this.$source && this.$source.removeClass("ui-helper-hidden");
          },
          treeInit: function (t) {
            var e = t.tree,
              i = e.options;
            e.$container.attr("tabindex", i.tabindex),
              i.rtl
                ? e.$container.attr("DIR", "RTL").addClass("fancytree-rtl")
                : e.$container.removeAttr("DIR").removeClass("fancytree-rtl"),
              i.aria &&
                (e.$container.attr("role", "tree"),
                1 !== i.selectMode &&
                  e.$container.attr("aria-multiselectable", !0)),
              this.treeLoad(t);
          },
          treeLoad: function (t, e) {
            var i,
              s,
              n,
              o = t.tree,
              a = t.widget.element,
              r = w.extend({}, t, { node: this.rootNode });
            if (
              (o.rootNode.children && this.treeClear(t),
              (e = e || this.options.source))
            )
              "string" == typeof e && w.error("Not implemented");
            else
              switch ((s = a.data("type") || "html")) {
                case "html":
                  (n = a.find(">ul:first")).addClass(
                    "ui-fancytree-source ui-helper-hidden"
                  ),
                    (e = w.ui.fancytree.parseHtml(n)),
                    (this.data = w.extend(this.data, m(n)));
                  break;
                case "json":
                  (e = w.parseJSON(a.text())),
                    a
                      .contents()
                      .filter(function () {
                        return 3 === this.nodeType;
                      })
                      .remove(),
                    w.isPlainObject(e) &&
                      (k(
                        w.isArray(e.children),
                        "if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')"
                      ),
                      (e = (i = e).children),
                      delete i.children,
                      w.extend(o.data, i));
                  break;
                default:
                  w.error("Invalid data-type: " + s);
              }
            return this.nodeLoadChildren(r, e)
              .done(function () {
                o.render(),
                  3 === t.options.selectMode &&
                    o.rootNode.fixSelection3FromEndNodes(),
                  o.activeNode &&
                    o.options.activeVisible &&
                    o.activeNode.makeVisible(),
                  o._triggerTreeEvent("init", null, { status: !0 });
              })
              .fail(function () {
                o.render(), o._triggerTreeEvent("init", null, { status: !1 });
              });
          },
          treeRegisterNode: function (t, e, i) {},
          treeSetFocus: function (t, e, i) {
            if (
              (e = !1 !== e) !== this.hasFocus() &&
              (!(this._hasFocus = e) && this.focusNode
                ? this.focusNode.setFocus(!1)
                : !e || (i && i.calledByNode) || w(this.$container).focus(),
              this.$container.toggleClass("fancytree-treefocus", e),
              this._triggerTreeEvent(e ? "focusTree" : "blurTree"),
              e)
            ) {
              var s = this;
              setTimeout(function () {
                var t;
                !(t = s).activeNode &&
                  t.getFirstChild() &&
                  t.getFirstChild().setFocus();
              }, 0);
            }
          },
          treeSetOption: function (t, e, i) {
            var s = t.tree,
              n = !0,
              o = !1;
            switch (e) {
              case "aria":
              case "checkbox":
              case "icon":
              case "minExpandLevel":
              case "tabindex":
                s._callHook("treeCreate", s), (o = !0);
                break;
              case "escapeTitles":
              case "tooltip":
                o = !0;
                break;
              case "rtl":
                !1 === i
                  ? s.$container.removeAttr("DIR").removeClass("fancytree-rtl")
                  : s.$container.attr("DIR", "RTL").addClass("fancytree-rtl"),
                  (o = !0);
                break;
              case "source":
                (n = !1), s._callHook("treeLoad", s, i), (o = !0);
            }
            s.debug("set option " + e + "=" + i + " <" + typeof i + ">"),
              n &&
                (this.widget._super
                  ? this.widget._super.call(this.widget, e, i)
                  : w.Widget.prototype._setOption.call(this.widget, e, i)),
              o && s.render(!0, !1);
          },
        }),
        w.widget("ui.fancytree", {
          options: {
            activeVisible: !0,
            ajax: { type: "GET", cache: !1, dataType: "json" },
            aria: !1,
            autoActivate: !0,
            autoCollapse: !1,
            autoScroll: !1,
            checkbox: !1,
            clickFolderMode: 4,
            debugLevel: null,
            disabled: !1,
            enableAspx: !0,
            escapeTitles: !1,
            extensions: [],
            toggleEffect: {
              effect: "blind",
              options: { direction: "vertical", scale: "box" },
              duration: 200,
            },
            generateIds: !1,
            icon: !0,
            idPrefix: "ft_",
            focusOnSelect: !1,
            keyboard: !0,
            keyPathSeparator: "/",
            minExpandLevel: 1,
            quicksearch: !1,
            rtl: !1,
            scrollOfs: { top: 0, bottom: 0 },
            scrollParent: null,
            selectMode: 2,
            strings: {
              loading: "Loading...",
              loadError: "Load error!",
              moreData: "More...",
              noData: "No data.",
            },
            tabindex: "0",
            titlesTabbable: !1,
            tooltip: !1,
            _classNames: {
              node: "fancytree-node",
              folder: "fancytree-folder",
              animating: "fancytree-animating",
              combinedExpanderPrefix: "fancytree-exp-",
              combinedIconPrefix: "fancytree-ico-",
              hasChildren: "fancytree-has-children",
              active: "fancytree-active",
              selected: "fancytree-selected",
              expanded: "fancytree-expanded",
              lazy: "fancytree-lazy",
              focused: "fancytree-focused",
              partload: "fancytree-partload",
              partsel: "fancytree-partsel",
              unselectable: "fancytree-unselectable",
              lastsib: "fancytree-lastsib",
              loading: "fancytree-loading",
              error: "fancytree-error",
              statusNodePrefix: "fancytree-statusnode-",
            },
            lazyLoad: null,
            postProcess: null,
          },
          _create: function () {
            (this.tree = new r(this)),
              (this.$source =
                this.source || "json" === this.element.data("type")
                  ? this.element
                  : this.element.find(">ul:first"));
            var t,
              e,
              i,
              s = this.options,
              n = s.extensions;
            this.tree;
            for (i = 0; i < n.length; i++)
              (e = n[i]),
                (t = w.ui.fancytree._extensions[e]) ||
                  w.error(
                    "Could not apply extension '" +
                      e +
                      "' (it is not registered, did you forget to include it?)"
                  ),
                (this.tree.options[e] = w.extend(
                  !0,
                  {},
                  t.options,
                  this.tree.options[e]
                )),
                k(
                  this.tree.ext[e] === y,
                  "Extension name must not exist as Fancytree.ext attribute: '" +
                    e +
                    "'"
                ),
                (this.tree.ext[e] = {}),
                a(this.tree, 0, t, e),
                t;
            s.icons !== y &&
              (!0 !== s.icon
                ? w.error(
                    "'icons' tree option is deprecated since v2.14.0: use 'icon' only instead"
                  )
                : (this.tree.warn(
                    "'icons' tree option is deprecated since v2.14.0: use 'icon' instead"
                  ),
                  (s.icon = s.icons))),
              s.iconClass !== y &&
                (s.icon
                  ? w.error(
                      "'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead"
                    )
                  : (this.tree.warn(
                      "'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead"
                    ),
                    (s.icon = s.iconClass))),
              s.tabbable !== y &&
                ((s.tabindex = s.tabbable ? "0" : "-1"),
                this.tree.warn(
                  "'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='" +
                    s.tabindex +
                    "' instead"
                )),
              this.tree._callHook("treeCreate", this.tree);
          },
          _init: function () {
            this.tree._callHook("treeInit", this.tree), this._bind();
          },
          _setOption: function (t, e) {
            return this.tree._callHook("treeSetOption", this.tree, t, e);
          },
          destroy: function () {
            this._unbind(),
              this.tree._callHook("treeDestroy", this.tree),
              w.Widget.prototype.destroy.call(this);
          },
          _unbind: function () {
            var t = this.tree._ns;
            this.element.off(t), this.tree.$container.off(t), w(x).off(t);
          },
          _bind: function () {
            var a = this,
              r = this.options,
              o = this.tree,
              t = o._ns;
            this._unbind(),
              o.$container
                .on("focusin" + t + " focusout" + t, function (t) {
                  var e = v.getNode(t),
                    i = "focusin" === t.type;
                  e
                    ? o._callHook("nodeSetFocus", o._makeHookContext(e, t), i)
                    : o._callHook("treeSetFocus", o, i);
                })
                .on("selectstart" + t, "span.fancytree-title", function (t) {
                  t.preventDefault();
                })
                .on("keydown" + t, function (t) {
                  if (r.disabled || !1 === r.keyboard) return !0;
                  var e,
                    i = o.focusNode,
                    s = o._makeHookContext(i || o, t),
                    n = o.phase;
                  try {
                    return (
                      (o.phase = "userEvent"),
                      "preventNav" ===
                      (e = i
                        ? o._triggerNodeEvent("keydown", i, t)
                        : o._triggerTreeEvent("keydown", t))
                        ? (e = !0)
                        : !1 !== e && (e = o._callHook("nodeKeydown", s)),
                      e
                    );
                  } finally {
                    o.phase = n;
                  }
                })
                .on("mousedown" + t + " dblclick" + t, function (t) {
                  if (r.disabled) return !0;
                  var e,
                    i = v.getEventTarget(t),
                    s = i.node,
                    n = a.tree,
                    o = n.phase;
                  if (!s) return !0;
                  e = n._makeHookContext(s, t);
                  try {
                    switch (((n.phase = "userEvent"), t.type)) {
                      case "mousedown":
                        return (
                          (e.targetType = i.type),
                          s.isPagingNode()
                            ? !0 === n._triggerNodeEvent("clickPaging", e, t)
                            : !1 !== n._triggerNodeEvent("click", e, t) &&
                              n._callHook("nodeClick", e)
                        );
                      case "dblclick":
                        return (
                          (e.targetType = i.type),
                          !1 !== n._triggerNodeEvent("dblclick", e, t) &&
                            n._callHook("nodeDblclick", e)
                        );
                    }
                  } finally {
                    n.phase = o;
                  }
                });
          },
          getActiveNode: function () {
            return this.tree.activeNode;
          },
          getNodeByKey: function (t) {
            return this.tree.getNodeByKey(t);
          },
          getRootNode: function () {
            return this.tree.rootNode;
          },
          getTree: function () {
            return this.tree;
          },
        }),
        (v = w.ui.fancytree),
        w.extend(w.ui.fancytree, {
          version: "2.22.4",
          buildType: "production",
          debugLevel: 1,
          _nextId: 1,
          _nextNodeKey: 1,
          _extensions: {},
          _FancytreeClass: r,
          _FancytreeNodeClass: h,
          jquerySupports: {
            positionMyOfs: (function (t, e, i, s) {
              var n,
                o,
                a,
                r = w.map(w.trim(t).split("."), function (t) {
                  return parseInt(t, 10);
                }),
                l = w.map(
                  Array.prototype.slice.call(arguments, 1),
                  function (t) {
                    return parseInt(t, 10);
                  }
                );
              for (n = 0; n < l.length; n++)
                if ((o = r[n] || 0) !== (a = l[n] || 0)) return a < o;
              return !0;
            })(w.ui.version, 1, 9),
          },
          assert: function (t, e) {
            return k(t, e);
          },
          debounce: function (e, i, s, n) {
            var o;
            return (
              3 === arguments.length &&
                "boolean" != typeof s &&
                ((n = s), (s = !1)),
              function () {
                var t = arguments;
                (n = n || this),
                  s && !o && i.apply(n, t),
                  clearTimeout(o),
                  (o = setTimeout(function () {
                    s || i.apply(n, t), (o = null);
                  }, e));
              }
            );
          },
          debug: function (t) {
            2 <= w.ui.fancytree.debugLevel && e("log", arguments);
          },
          error: function (t) {
            e("error", arguments);
          },
          escapeHtml: d,
          fixPositionOptions: function (t) {
            if (
              ((t.offset || 0 <= ("" + t.my + t.at).indexOf("%")) &&
                w.error(
                  "expected new position syntax (but '%' is not supported)"
                ),
              !w.ui.fancytree.jquerySupports.positionMyOfs)
            ) {
              var e = /(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(t.my),
                i = /(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(t.at),
                s = (e[2] ? +e[2] : 0) + (i[2] ? +i[2] : 0),
                n = (e[4] ? +e[4] : 0) + (i[4] ? +i[4] : 0);
              (t = w.extend({}, t, {
                my: e[1] + " " + e[3],
                at: i[1] + " " + i[3],
              })),
                (s || n) && (t.offset = s + " " + n);
            }
            return t;
          },
          getEventTargetType: function (t) {
            return this.getEventTarget(t).type;
          },
          getEventTarget: function (t) {
            var e = t && t.target ? t.target.className : "",
              i = { node: this.getNode(t.target), type: y };
            return (
              /\bfancytree-title\b/.test(e)
                ? (i.type = "title")
                : /\bfancytree-expander\b/.test(e)
                ? (i.type = !1 === i.node.hasChildren() ? "prefix" : "expander")
                : /\bfancytree-checkbox\b/.test(e) ||
                  /\bfancytree-radio\b/.test(e)
                ? (i.type = "checkbox")
                : /\bfancytree-icon\b/.test(e)
                ? (i.type = "icon")
                : /\bfancytree-node\b/.test(e)
                ? (i.type = "title")
                : t &&
                  t.target &&
                  w(t.target).closest(".fancytree-title").length &&
                  (i.type = "title"),
              i
            );
          },
          getNode: function (t) {
            if (t instanceof h) return t;
            for (
              t instanceof jQuery
                ? (t = t[0])
                : t.originalEvent !== y && (t = t.target);
              t;

            ) {
              if (t.ftnode) return t.ftnode;
              t = t.parentNode;
            }
            return null;
          },
          getTree: function (t) {
            var e;
            return t instanceof r
              ? t
              : (t === y && (t = 0),
                "number" == typeof t
                  ? (t = w(".fancytree-container").eq(t))
                  : "string" == typeof t
                  ? (t = w(t).eq(0))
                  : t.selector !== y
                  ? (t = t.eq(0))
                  : t.originalEvent !== y && (t = w(t.target)),
                (e =
                  (t = t.closest(":ui-fancytree")).data("ui-fancytree") ||
                  t.data("fancytree"))
                  ? e.tree
                  : null);
          },
          evalOption: function (t, e, i, s, n) {
            var o,
              a,
              r = e.tree,
              l = s[t],
              h = i[t];
            return (
              w.isFunction(l)
                ? ((o = {
                    node: e,
                    tree: r,
                    widget: r.widget,
                    options: r.widget.options,
                  }),
                  null == (a = l.call(r, { type: t }, o)) && (a = h))
                : (a = null != h ? h : l),
              null == a && (a = n),
              a
            );
          },
          eventToString: function (t) {
            var e = t.which,
              i = t.type,
              s = [];
            return (
              t.altKey && s.push("alt"),
              t.ctrlKey && s.push("ctrl"),
              t.metaKey && s.push("meta"),
              t.shiftKey && s.push("shift"),
              "click" === i || "dblclick" === i
                ? s.push(u[t.button] + i)
                : n[e] || s.push(S[e] || String.fromCharCode(e).toLowerCase()),
              s.join("+")
            );
          },
          info: function (t) {
            1 <= w.ui.fancytree.debugLevel && e("info", arguments);
          },
          keyEventToString: function (t) {
            return (
              this.warn(
                "keyEventToString() is deprecated: use eventToString()"
              ),
              this.eventToString(t)
            );
          },
          overrideMethod: function (t, e, i) {
            var s,
              n = t[e] || w.noop;
            t[e] = function () {
              try {
                return (
                  (s = this._super), (this._super = n), i.apply(this, arguments)
                );
              } finally {
                this._super = s;
              }
            };
          },
          parseHtml: function (a) {
            var r,
              l,
              h,
              c,
              u,
              d,
              p,
              f,
              t = a.find(">li"),
              g = [];
            return (
              t.each(function () {
                var t,
                  e,
                  i = w(this),
                  s = i.find(">span:first", this),
                  n = s.length ? null : i.find(">a:first"),
                  o = { tooltip: null, data: {} };
                for (
                  s.length
                    ? (o.title = s.html())
                    : n && n.length
                    ? ((o.title = n.html()),
                      (o.data.href = n.attr("href")),
                      (o.data.target = n.attr("target")),
                      (o.tooltip = n.attr("title")))
                    : ((o.title = i.html()),
                      0 <= (u = o.title.search(/<ul/i)) &&
                        (o.title = o.title.substring(0, u))),
                    o.title = w.trim(o.title),
                    c = 0,
                    d = T.length;
                  c < d;
                  c++
                )
                  o[T[c]] = y;
                for (
                  r = this.className.split(" "), h = [], c = 0, d = r.length;
                  c < d;
                  c++
                )
                  (l = r[c]), I[l] ? (o[l] = !0) : h.push(l);
                if (
                  ((o.extraClasses = h.join(" ")),
                  (p = i.attr("title")) && (o.tooltip = p),
                  (p = i.attr("id")) && (o.key = p),
                  (t = m(i)) && !w.isEmptyObject(t))
                ) {
                  for (e in M)
                    t.hasOwnProperty(e) && ((t[M[e]] = t[e]), delete t[e]);
                  for (c = 0, d = N.length; c < d; c++)
                    (p = N[c]), null != (f = t[p]) && (delete t[p], (o[p] = f));
                  w.extend(o.data, t);
                }
                (a = i.find(">ul:first")).length
                  ? (o.children = w.ui.fancytree.parseHtml(a))
                  : (o.children = o.lazy ? y : null),
                  g.push(o);
              }),
              g
            );
          },
          registerExtension: function (t) {
            k(null != t.name, "extensions must have a `name` property."),
              k(
                null != t.version,
                "extensions must have a `version` property."
              ),
              (w.ui.fancytree._extensions[t.name] = t);
          },
          unescapeHtml: function (t) {
            var e = x.createElement("div");
            return (
              (e.innerHTML = t),
              0 === e.childNodes.length ? "" : e.childNodes[0].nodeValue
            );
          },
          warn: function (t) {
            e("warn", arguments);
          },
        });
    }
  })(jQuery, window, document),
  (function (y, t, w, e) {
    "use strict";
    var i = !1,
      f = "fancytree-drop-accept",
      g = "fancytree-drop-after",
      m = "fancytree-drop-before",
      v = "fancytree-drop-reject";
    function s(t) {
      var e = t.options.dnd || null,
        o = t.options.glyph || null;
      e &&
        (i ||
          (y.ui.plugin.add("draggable", "connectToFancytree", {
            start: function (t, e) {
              var i = y(this).data("ui-draggable") || y(this).data("draggable"),
                s = e.helper.data("ftSourceNode") || null;
              if (s)
                return (
                  (i.offset.click.top = -2),
                  (i.offset.click.left = 16),
                  s.tree.ext.dnd._onDragEvent("start", s, null, t, e, i)
                );
            },
            drag: function (t, e) {
              var i,
                s = y(this).data("ui-draggable") || y(this).data("draggable"),
                n = e.helper.data("ftSourceNode") || null,
                o = e.helper.data("ftTargetNode") || null,
                a = y.ui.fancytree.getNode(t.target),
                r = n && n.tree.options.dnd;
              t.target &&
              !a &&
              0 <
                y(t.target).closest(
                  "div.fancytree-drag-helper,#fancytree-drop-marker"
                ).length
                ? (n || o || y.ui.fancytree).debug(
                    "Drag event over helper: ignored."
                  )
                : (e.helper.data("ftTargetNode", a),
                  r &&
                    r.updateHelper &&
                    ((i = n.tree._makeHookContext(n, t, {
                      otherNode: a,
                      ui: e,
                      draggable: s,
                      dropMarker: y("#fancytree-drop-marker"),
                    })),
                    r.updateHelper.call(n.tree, n, i)),
                  o &&
                    o !== a &&
                    o.tree.ext.dnd._onDragEvent("leave", o, n, t, e, s),
                  a &&
                    a.tree.options.dnd.dragDrop &&
                    (a === o ||
                      a.tree.ext.dnd._onDragEvent("enter", a, n, t, e, s),
                    a.tree.ext.dnd._onDragEvent("over", a, n, t, e, s)));
            },
            stop: function (t, e) {
              var i = y(this).data("ui-draggable") || y(this).data("draggable"),
                s = e.helper.data("ftSourceNode") || null,
                n = e.helper.data("ftTargetNode") || null,
                o = "mouseup" === t.type && 1 === t.which;
              o || (s || n || y.ui.fancytree).debug("Drag was cancelled"),
                n &&
                  (o && n.tree.ext.dnd._onDragEvent("drop", n, s, t, e, i),
                  n.tree.ext.dnd._onDragEvent("leave", n, s, t, e, i)),
                s && s.tree.ext.dnd._onDragEvent("stop", s, null, t, e, i);
            },
          }),
          (i = !0))),
        e &&
          e.dragStart &&
          t.widget.element.draggable(
            y.extend(
              {
                addClasses: !1,
                appendTo: t.$container,
                containment: !1,
                delay: 0,
                distance: 4,
                revert: !1,
                scroll: !0,
                scrollSpeed: 7,
                scrollSensitivity: 10,
                connectToFancytree: !0,
                helper: function (t) {
                  var e,
                    i,
                    s,
                    n = y.ui.fancytree.getNode(t.target);
                  return n
                    ? ((s = n.tree.options.dnd),
                      (i = y(n.span)),
                      (e = y(
                        "<div class='fancytree-drag-helper'><span class='fancytree-drag-helper-img' /></div>"
                      )
                        .css({ zIndex: 3, position: "relative" })
                        .append(i.find("span.fancytree-title").clone())).data(
                        "ftSourceNode",
                        n
                      ),
                      o &&
                        e
                          .find(".fancytree-drag-helper-img")
                          .addClass(o.map.dragHelper),
                      s.initHelper &&
                        s.initHelper.call(n.tree, n, {
                          node: n,
                          tree: n.tree,
                          originalEvent: t,
                          ui: { helper: e },
                        }),
                      e)
                    : "<div>ERROR?: helper requested but sourceNode not found</div>";
                },
                start: function (t, e) {
                  return !!e.helper.data("ftSourceNode");
                },
              },
              t.options.dnd.draggable
            )
          ),
        e &&
          e.dragDrop &&
          t.widget.element.droppable(
            y.extend(
              { addClasses: !1, tolerance: "intersect", greedy: !1 },
              t.options.dnd.droppable
            )
          );
    }
    y.ui.fancytree.registerExtension({
      name: "dnd",
      version: "@VERSION",
      options: {
        autoExpandMS: 1e3,
        draggable: null,
        droppable: null,
        focusOnClick: !1,
        preventVoidMoves: !0,
        preventRecursiveMoves: !0,
        smartRevert: !0,
        dropMarkerOffsetX: -24,
        dropMarkerInsertOffsetX: -16,
        dragStart: null,
        dragStop: null,
        initHelper: null,
        updateHelper: null,
        dragEnter: null,
        dragOver: null,
        dragExpand: null,
        dragDrop: null,
        dragLeave: null,
      },
      treeInit: function (i) {
        var t = i.tree;
        this._superApply(arguments),
          t.options.dnd.dragStart &&
            t.$container.on("mousedown", function (t) {
              if (i.options.dnd.focusOnClick) {
                var e = y.ui.fancytree.getNode(t);
                e &&
                  e.debug(
                    "Re-enable focus that was prevented by jQuery UI draggable."
                  ),
                  setTimeout(function () {
                    y(t.target).closest(":tabbable").focus();
                  }, 10);
              }
            }),
          s(t);
      },
      _setDndStatus: function (t, e, i, s, n) {
        var o,
          a,
          r = "center",
          l = this._local,
          h = this.options.dnd,
          c = this.options.glyph,
          u = t ? y(t.span) : null,
          d = y(e.span),
          p = d.find("span.fancytree-title");
        if (
          (l.$dropMarker ||
            ((l.$dropMarker = y("<div id='fancytree-drop-marker'></div>")
              .hide()
              .css({ "z-index": 1e3 })
              .prependTo(y(this.$div).parent())),
            c && l.$dropMarker.addClass(c.map.dropMarker)),
          "after" === s || "before" === s || "over" === s)
        ) {
          switch (((o = h.dropMarkerOffsetX || 0), s)) {
            case "before":
              (r = "top"), (o += h.dropMarkerInsertOffsetX || 0);
              break;
            case "after":
              (r = "bottom"), (o += h.dropMarkerInsertOffsetX || 0);
          }
          l.$dropMarker
            .toggleClass(g, "after" === s)
            .toggleClass("fancytree-drop-over", "over" === s)
            .toggleClass(m, "before" === s)
            .show()
            .position(
              y.ui.fancytree.fixPositionOptions({
                my:
                  "left" +
                  ((a = o), 0 === a ? "" : 0 < a ? "+" + a : "" + a) +
                  " center",
                at: "left " + r,
                of: p,
              })
            );
        } else l.$dropMarker.hide();
        u && u.toggleClass(f, !0 === n).toggleClass(v, !1 === n),
          d
            .toggleClass(
              "fancytree-drop-target",
              "after" === s || "before" === s || "over" === s
            )
            .toggleClass(g, "after" === s)
            .toggleClass(m, "before" === s)
            .toggleClass(f, !0 === n)
            .toggleClass(v, !1 === n),
          i.toggleClass(f, !0 === n).toggleClass(v, !1 === n);
      },
      _onDragEvent: function (t, e, i, s, n, o) {
        var a,
          r,
          l,
          h,
          c,
          u,
          d,
          p,
          f,
          g = this.options.dnd,
          m = this._makeHookContext(e, s, {
            otherNode: i,
            ui: n,
            draggable: o,
          }),
          v = null,
          _ = this,
          b = y(e.span);
        switch ((g.smartRevert && (o.options.revert = "invalid"), t)) {
          case "start":
            e.isStatusNode()
              ? (v = !1)
              : g.dragStart && (v = g.dragStart(e, m)),
              !1 === v
                ? (this.debug("tree.dragStart() cancelled"),
                  n.helper.trigger("mouseup").hide())
                : (g.smartRevert &&
                    ((h =
                      e[m.tree.nodeContainerAttrName].getBoundingClientRect()),
                    (l = y(o.options.appendTo)[0].getBoundingClientRect()),
                    (o.originalPosition.left = Math.max(0, h.left - l.left)),
                    (o.originalPosition.top = Math.max(0, h.top - l.top))),
                  b.addClass("fancytree-drag-source"),
                  y(w).on(
                    "keydown.fancytree-dnd,mousedown.fancytree-dnd",
                    function (t) {
                      "keydown" === t.type && t.which === y.ui.keyCode.ESCAPE
                        ? _.ext.dnd._cancelDrag()
                        : "mousedown" === t.type && _.ext.dnd._cancelDrag();
                    }
                  ));
            break;
          case "enter":
            (v =
              !!(f =
                (!g.preventRecursiveMoves || !e.isDescendantOf(i)) &&
                (g.dragEnter ? g.dragEnter(e, m) : null)) &&
              (y.isArray(f)
                ? {
                    over: 0 <= y.inArray("over", f),
                    before: 0 <= y.inArray("before", f),
                    after: 0 <= y.inArray("after", f),
                  }
                : {
                    over: !0 === f || "over" === f,
                    before: !0 === f || "before" === f,
                    after: !0 === f || "after" === f,
                  })),
              n.helper.data("enterResponse", v);
            break;
          case "over":
            (p = null),
              !1 === (d = n.helper.data("enterResponse")) ||
                ("string" == typeof d
                  ? (p = d)
                  : ((r = b.offset()),
                    (u = {
                      x:
                        (c = { x: s.pageX - r.left, y: s.pageY - r.top }).x /
                        b.width(),
                      y: c.y / b.height(),
                    }),
                    d.after && 0.75 < u.y
                      ? (p = "after")
                      : !d.over && d.after && 0.5 < u.y
                      ? (p = "after")
                      : d.before && u.y <= 0.25
                      ? (p = "before")
                      : !d.over && d.before && u.y <= 0.5
                      ? (p = "before")
                      : d.over && (p = "over"),
                    g.preventVoidMoves &&
                      (e === i
                        ? (this.debug("    drop over source node prevented"),
                          (p = null))
                        : "before" === p && i && e === i.getNextSibling()
                        ? (this.debug("    drop after source node prevented"),
                          (p = null))
                        : "after" === p && i && e === i.getPrevSibling()
                        ? (this.debug("    drop before source node prevented"),
                          (p = null))
                        : "over" === p &&
                          i &&
                          i.parent === e &&
                          i.isLastSibling() &&
                          (this.debug(
                            "    drop last child over own parent prevented"
                          ),
                          (p = null))),
                    n.helper.data("hitMode", p))),
              "before" === p ||
                "after" === p ||
                !g.autoExpandMS ||
                !1 === e.hasChildren() ||
                e.expanded ||
                (g.dragExpand && !1 === g.dragExpand(e, m)) ||
                e.scheduleAction("expand", g.autoExpandMS),
              p && g.dragOver && ((m.hitMode = p), (v = g.dragOver(e, m))),
              (a = !1 !== v && null !== p),
              g.smartRevert && (o.options.revert = !a),
              this._local._setDndStatus(i, e, n.helper, p, a);
            break;
          case "drop":
            (p = n.helper.data("hitMode")) &&
              g.dragDrop &&
              ((m.hitMode = p), g.dragDrop(e, m));
            break;
          case "leave":
            e.scheduleAction("cancel"),
              n.helper.data("enterResponse", null),
              n.helper.data("hitMode", null),
              this._local._setDndStatus(i, e, n.helper, "out", void 0),
              g.dragLeave && g.dragLeave(e, m);
            break;
          case "stop":
            b.removeClass("fancytree-drag-source"),
              y(w).off(".fancytree-dnd"),
              g.dragStop && g.dragStop(e, m);
            break;
          default:
            y.error("Unsupported drag event: " + t);
        }
        return v;
      },
      _cancelDrag: function () {
        var t = y.ui.ddmanager.current;
        t && t.cancel();
      },
    });
  })(jQuery, window, document),
  (function (f, t, e, i) {
    "use strict";
    var g = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
    function m(t, e) {
      var i = f("#" + (t = "fancytree-style-" + t));
      if (!e) return i.remove(), null;
      i.length ||
        (i = f("<style />")
          .attr("id", t)
          .addClass("fancytree-style")
          .prop("type", "text/css")
          .appendTo("head"));
      try {
        i.html(e);
      } catch (t) {
        i[0].styleSheet.cssText = e;
      }
      return i;
    }
    function v(t, e, i, s, n, o) {
      var a,
        r = "#" + t + " span.fancytree-level-",
        l = [];
      for (a = 0; a < e; a++)
        l.push(
          r +
            (a + 1) +
            " span.fancytree-title { padding-left: " +
            (a * i + s) +
            o +
            "; }"
        );
      return (
        l.push(
          "#" +
            t +
            " div.ui-effects-wrapper ul li span.fancytree-title, #" +
            t +
            " ul.fancytree-animating span.fancytree-title { padding-left: " +
            n +
            o +
            "; position: static; width: auto; }"
        ),
        l.join("\n")
      );
    }
    f.ui.fancytree.registerExtension({
      name: "wide",
      version: "@VERSION",
      options: {
        iconWidth: null,
        iconSpacing: null,
        labelSpacing: null,
        levelOfs: null,
      },
      treeCreate: function (t) {
        this._superApply(arguments),
          this.$container.addClass("fancytree-ext-wide");
        var e,
          i,
          s,
          n,
          o,
          a = t.options.wide,
          r = f(
            "<li id='fancytreeTemp'><span class='fancytree-node'><span class='fancytree-icon' /><span class='fancytree-title' /></span><ul />"
          ).appendTo(t.tree.$container),
          l = r.find(".fancytree-icon"),
          h = r.find("ul"),
          c = a.iconSpacing || l.css("margin-left"),
          u = a.iconWidth || l.css("width"),
          d = a.labelSpacing || "3px",
          p = a.levelOfs || h.css("padding-left");
        r.remove(),
          (i = c.match(g)[2]),
          (c = parseFloat(c, 10)),
          (s = d.match(g)[2]),
          (d = parseFloat(d, 10)),
          (n = u.match(g)[2]),
          (u = parseFloat(u, 10)),
          (o = p.match(g)[2]),
          (i === n && o === n && s === n) ||
            f.error(
              "iconWidth, iconSpacing, and levelOfs must have the same css measure unit"
            ),
          (this._local.measureUnit = n),
          (this._local.levelOfs = parseFloat(p)),
          (this._local.lineOfs =
            (1 +
              (t.options.checkbox ? 1 : 0) +
              (!1 === t.options.icon ? 0 : 1)) *
              (u + c) +
            c),
          (this._local.labelOfs = d),
          (this._local.maxDepth = 10),
          m(
            (e = this.$container.uniqueId().attr("id")),
            v(
              e,
              this._local.maxDepth,
              this._local.levelOfs,
              this._local.lineOfs,
              this._local.labelOfs,
              this._local.measureUnit
            )
          );
      },
      treeDestroy: function (t) {
        return m(this.$container.attr("id"), null), this._superApply(arguments);
      },
      nodeRenderStatus: function (t) {
        var e,
          i,
          s = t.node,
          n = s.getLevel();
        return (
          (i = this._super(t)),
          n > this._local.maxDepth &&
            ((e = this.$container.attr("id")),
            (this._local.maxDepth *= 2),
            s.debug(
              "Define global ext-wide css up to level " + this._local.maxDepth
            ),
            m(
              e,
              v(
                e,
                this._local.maxDepth,
                this._local.levelOfs,
                this._local.lineOfs,
                this._local.labelSpacing,
                this._local.measureUnit
              )
            )),
          f(s.span).addClass("fancytree-level-" + n),
          i
        );
      },
    });
  })(jQuery, window, document),
  (function (h, t, c, e) {
    "use strict";
    var i = /Mac/.test(navigator.platform),
      u = h.ui.fancytree.escapeHtml,
      r = h.ui.fancytree.unescapeHtml;
    (h.ui.fancytree._FancytreeNodeClass.prototype.editStart = function () {
      var e,
        i = this,
        t = this.tree,
        s = t.ext.edit,
        n = t.options.edit,
        o = h(".fancytree-title", i.span),
        a = {
          node: i,
          tree: t,
          options: t.options,
          isNew: h(i[t.statusClassPropName]).hasClass("fancytree-edit-new"),
          orgTitle: i.title,
          input: null,
          dirty: !1,
        };
      if (!1 === n.beforeEdit.call(i, { type: "beforeEdit" }, a)) return !1;
      h.ui.fancytree.assert(!s.currentNode, "recursive edit"),
        (s.currentNode = this),
        (s.eventData = a),
        t.widget._unbind(),
        h(c).on("mousedown.fancytree-edit", function (t) {
          h(t.target).hasClass("fancytree-edit-input") || i.editEnd(!0, t);
        }),
        (e = h("<input />", {
          class: "fancytree-edit-input",
          type: "text",
          value: t.options.escapeTitles ? a.orgTitle : r(a.orgTitle),
        })),
        (s.eventData.input = e),
        null != n.adjustWidthOfs && e.width(o.width() + n.adjustWidthOfs),
        null != n.inputCss && e.css(n.inputCss),
        o.html(e),
        e
          .focus()
          .change(function (t) {
            e.addClass("fancytree-edit-dirty");
          })
          .keydown(function (t) {
            switch (t.which) {
              case h.ui.keyCode.ESCAPE:
                i.editEnd(!1, t);
                break;
              case h.ui.keyCode.ENTER:
                return i.editEnd(!0, t), !1;
            }
            t.stopPropagation();
          })
          .blur(function (t) {
            return i.editEnd(!0, t);
          }),
        n.edit.call(i, { type: "edit" }, a);
    }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.editEnd = function (t, e) {
        var i,
          s = this,
          n = this.tree,
          o = n.ext.edit,
          a = o.eventData,
          r = n.options.edit,
          l = h(".fancytree-title", s.span).find("input.fancytree-edit-input");
        return (
          r.trim && l.val(h.trim(l.val())),
          (i = l.val()),
          (a.dirty = i !== s.title),
          (a.originalEvent = e),
          !1 === t
            ? (a.save = !1)
            : a.isNew
            ? (a.save = "" !== i)
            : (a.save = a.dirty && "" !== i),
          !1 !== r.beforeClose.call(s, { type: "beforeClose" }, a) &&
            (!a.save || !1 !== r.save.call(s, { type: "save" }, a)) &&
            (l.removeClass("fancytree-edit-dirty").off(),
            h(c).off(".fancytree-edit"),
            a.save
              ? (s.setTitle(n.options.escapeTitles ? i : u(i)), s.setFocus())
              : a.isNew
              ? (s.remove(), (s = a.node = null), o.relatedNode.setFocus())
              : (s.renderTitle(), s.setFocus()),
            (o.eventData = null),
            (o.currentNode = null),
            (o.relatedNode = null),
            n.widget._bind(),
            h(n.$container).focus(),
            (a.input = null),
            r.close.call(s, { type: "close" }, a),
            !0)
        );
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.editCreateNode = function (
        t,
        e
      ) {
        var i,
          s = this.tree,
          n = this;
        (t = t || "child"),
          null == e
            ? (e = { title: "" })
            : "string" == typeof e
            ? (e = { title: e })
            : h.ui.fancytree.assert(h.isPlainObject(e)),
          "child" !== t || this.isExpanded() || !1 === this.hasChildren()
            ? (((i = this.addNode(e, t)).match = !0),
              h(i[s.statusClassPropName])
                .removeClass("fancytree-hide")
                .addClass("fancytree-match"),
              i.makeVisible().done(function () {
                h(i[s.statusClassPropName]).addClass("fancytree-edit-new"),
                  (n.tree.ext.edit.relatedNode = n),
                  i.editStart();
              }))
            : this.setExpanded().done(function () {
                n.editCreateNode(t, e);
              });
      }),
      (h.ui.fancytree._FancytreeClass.prototype.isEditing = function () {
        return this.ext.edit ? this.ext.edit.currentNode : null;
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.isEditing = function () {
        return !!this.tree.ext.edit && this.tree.ext.edit.currentNode === this;
      }),
      h.ui.fancytree.registerExtension({
        name: "edit",
        version: "@VERSION",
        options: {
          adjustWidthOfs: 4,
          allowEmpty: !1,
          inputCss: { minWidth: "3em" },
          triggerStart: ["f2", "shift+click", "mac+enter"],
          trim: !0,
          beforeClose: h.noop,
          beforeEdit: h.noop,
          close: h.noop,
          edit: h.noop,
          save: h.noop,
        },
        currentNode: null,
        treeInit: function (t) {
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-edit");
        },
        nodeClick: function (t) {
          return 0 <= h.inArray("shift+click", t.options.edit.triggerStart) &&
            t.originalEvent.shiftKey
            ? (t.node.editStart(), !1)
            : this._superApply(arguments);
        },
        nodeDblclick: function (t) {
          return 0 <= h.inArray("dblclick", t.options.edit.triggerStart)
            ? (t.node.editStart(), !1)
            : this._superApply(arguments);
        },
        nodeKeydown: function (t) {
          switch (t.originalEvent.which) {
            case 113:
              if (0 <= h.inArray("f2", t.options.edit.triggerStart))
                return t.node.editStart(), !1;
              break;
            case h.ui.keyCode.ENTER:
              if (0 <= h.inArray("mac+enter", t.options.edit.triggerStart) && i)
                return t.node.editStart(), !1;
          }
          return this._superApply(arguments);
        },
      });
  })(jQuery, window, document),
  (function (g, t, e, i) {
    "use strict";
    var m = "__not_found__",
      v = g.ui.fancytree.escapeHtml;
    function _(t) {
      return (t + "").replace(/([.?*+\^\$\[\]\\(){}|-])/g, "\\$1");
    }
    (g.ui.fancytree._FancytreeClass.prototype._applyFilterImpl = function (
      s,
      n,
      t
    ) {
      var e,
        i,
        o,
        a,
        r,
        l = 0,
        h = this.options,
        c = h.escapeTitles,
        u = h.autoCollapse,
        d = g.extend({}, h.filter, t),
        p = "hide" === d.mode,
        f = !!d.leavesOnly && !n;
      if ("string" == typeof s) {
        if ("" === s)
          return (
            this.warn(
              "Fancytree passing an empty string as a filter is handled as clearFilter()."
            ),
            void this.clearFilter()
          );
        (e = d.fuzzy
          ? s.split("").reduce(function (t, e) {
              return t + "[^" + e + "]*" + e;
            })
          : _(s)),
          (o = new RegExp(".*" + e + ".*", "i")),
          (a = new RegExp(_(s), "gi")),
          (s = function (t) {
            var e,
              i = c
                ? t.title
                : 0 <= (e = t.title).indexOf(">")
                ? g("<div/>").html(e).text()
                : e,
              s = !!o.test(i);
            return (
              s &&
                d.highlight &&
                (c
                  ? ((r = i.replace(a, function (t) {
                      return "￷" + t + "￸";
                    })),
                    (t.titleWithHighlight = v(r)
                      .replace(/\uFFF7/g, "<mark>")
                      .replace(/\uFFF8/g, "</mark>")))
                  : (t.titleWithHighlight = i.replace(a, function (t) {
                      return "<mark>" + t + "</mark>";
                    }))),
              s
            );
          });
      }
      return (
        (this.enableFilter = !0),
        (this.lastFilterArgs = arguments),
        this.$div.addClass("fancytree-ext-filter"),
        p
          ? this.$div.addClass("fancytree-ext-filter-hide")
          : this.$div.addClass("fancytree-ext-filter-dimm"),
        this.$div.toggleClass(
          "fancytree-ext-filter-hide-expanders",
          !!d.hideExpanders
        ),
        this.visit(function (t) {
          delete t.match, delete t.titleWithHighlight, (t.subMatchCount = 0);
        }),
        (i = this.getRootNode()._findDirectChild(m)) && i.remove(),
        (h.autoCollapse = !1),
        this.visit(function (t) {
          if (!f || null == t.children) {
            var e = s(t),
              i = !1;
            if ("skip" === e)
              return (
                t.visit(function (t) {
                  t.match = !1;
                }, !0),
                "skip"
              );
            e || (!n && "branch" !== e) || !t.parent.match || (i = e = !0),
              e &&
                (l++,
                (t.match = !0),
                t.visitParents(function (t) {
                  (t.subMatchCount += 1),
                    !d.autoExpand ||
                      i ||
                      t.expanded ||
                      (t.setExpanded(!0, {
                        noAnimation: !0,
                        noEvents: !0,
                        scrollIntoView: !1,
                      }),
                      (t._filterAutoExpanded = !0));
                }));
          }
        }),
        (h.autoCollapse = u),
        0 === l &&
          d.nodata &&
          p &&
          ((i = d.nodata),
          g.isFunction(i) && (i = i()),
          !0 === i ? (i = {}) : "string" == typeof i && (i = { title: i }),
          (i = g.extend(
            {
              statusNodeType: "nodata",
              key: m,
              title: this.options.strings.noData,
            },
            i
          )),
          (this.getRootNode().addNode(i).match = !0)),
        this.render(),
        l
      );
    }),
      (g.ui.fancytree._FancytreeClass.prototype.filterNodes = function (t, e) {
        return (
          "boolean" == typeof e &&
            ((e = { leavesOnly: e }),
            this.warn(
              "Fancytree.filterNodes() leavesOnly option is deprecated since 2.9.0 / 2015-04-19. Use opts.leavesOnly instead."
            )),
          this._applyFilterImpl(t, !1, e)
        );
      }),
      (g.ui.fancytree._FancytreeClass.prototype.applyFilter = function (t) {
        return (
          this.warn(
            "Fancytree.applyFilter() is deprecated since 2.1.0 / 2014-05-29. Use .filterNodes() instead."
          ),
          this.filterNodes.apply(this, arguments)
        );
      }),
      (g.ui.fancytree._FancytreeClass.prototype.filterBranches = function (
        t,
        e
      ) {
        return this._applyFilterImpl(t, !0, e);
      }),
      (g.ui.fancytree._FancytreeClass.prototype.clearFilter = function () {
        var e,
          t = this.getRootNode()._findDirectChild(m),
          i = this.options.escapeTitles,
          s = this.options.enhanceTitle;
        t && t.remove(),
          this.visit(function (t) {
            t.match &&
              t.span &&
              ((e = g(t.span).find(">span.fancytree-title")),
              i ? e.text(t.title) : e.html(t.title),
              s && s({ type: "enhanceTitle" }, { node: t, $title: e })),
              delete t.match,
              delete t.subMatchCount,
              delete t.titleWithHighlight,
              t.$subMatchBadge &&
                (t.$subMatchBadge.remove(), delete t.$subMatchBadge),
              t._filterAutoExpanded &&
                t.expanded &&
                t.setExpanded(!1, {
                  noAnimation: !0,
                  noEvents: !0,
                  scrollIntoView: !1,
                }),
              delete t._filterAutoExpanded;
          }),
          (this.enableFilter = !1),
          (this.lastFilterArgs = null),
          this.$div.removeClass(
            "fancytree-ext-filter fancytree-ext-filter-dimm fancytree-ext-filter-hide"
          ),
          this.render();
      }),
      (g.ui.fancytree._FancytreeClass.prototype.isFilterActive = function () {
        return !!this.enableFilter;
      }),
      (g.ui.fancytree._FancytreeNodeClass.prototype.isMatched = function () {
        return !(this.tree.enableFilter && !this.match);
      }),
      g.ui.fancytree.registerExtension({
        name: "filter",
        version: "@VERSION",
        options: {
          autoApply: !0,
          autoExpand: !1,
          counter: !0,
          fuzzy: !1,
          hideExpandedCounter: !0,
          hideExpanders: !1,
          highlight: !0,
          leavesOnly: !1,
          nodata: !0,
          mode: "dimm",
        },
        nodeLoadChildren: function (t, e) {
          return this._superApply(arguments).done(function () {
            t.tree.enableFilter &&
              t.tree.lastFilterArgs &&
              t.options.filter.autoApply &&
              t.tree._applyFilterImpl.apply(t.tree, t.tree.lastFilterArgs);
          });
        },
        nodeSetExpanded: function (t, e, i) {
          return (
            delete t.node._filterAutoExpanded,
            !e &&
              t.options.filter.hideExpandedCounter &&
              t.node.$subMatchBadge &&
              t.node.$subMatchBadge.show(),
            this._superApply(arguments)
          );
        },
        nodeRenderStatus: function (t) {
          var e,
            i = t.node,
            s = t.tree,
            n = t.options.filter,
            o = g(i.span).find("span.fancytree-title"),
            a = g(i[s.statusClassPropName]),
            r = t.options.enhanceTitle,
            l = t.options.escapeTitles;
          return (
            (e = this._super(t)),
            a.length &&
              s.enableFilter &&
              (a
                .toggleClass("fancytree-match", !!i.match)
                .toggleClass("fancytree-submatch", !!i.subMatchCount)
                .toggleClass("fancytree-hide", !(i.match || i.subMatchCount)),
              !n.counter ||
              !i.subMatchCount ||
              (i.isExpanded() && n.hideExpandedCounter)
                ? i.$subMatchBadge && i.$subMatchBadge.hide()
                : (i.$subMatchBadge ||
                    ((i.$subMatchBadge = g(
                      "<span class='fancytree-childcounter'/>"
                    )),
                    g(
                      "span.fancytree-icon, span.fancytree-custom-icon",
                      i.span
                    ).append(i.$subMatchBadge)),
                  i.$subMatchBadge.show().text(i.subMatchCount)),
              !i.span ||
                (i.isEditing && i.isEditing.call(i)) ||
                (i.titleWithHighlight
                  ? o.html(i.titleWithHighlight)
                  : l
                  ? o.text(i.title)
                  : o.html(i.title),
                r && r({ type: "enhanceTitle" }, { node: i, $title: o }))),
            e
          );
        },
      });
  })(jQuery, window, document);
